module Chain1Test4 where
    import Chain1Base4
    module M(p1: if False then Bool else Bool)(p2: (\x3. if False then x3 else Bool : Type -> Type) Bool) where
        d4 : if False then if True then Bool else Bool else if True then Bool else Bool
        d4 = if if Chain1Base4.M'.d89 then Chain1Base4.M'.d9 else Chain1Base4.M'.d68 then if Chain1Base4.M'.d99 then True else Chain1Base4.M'.d57 else if p2 then True else Chain1Base4.M'.d3
        d5 : if False then if False then Bool else Bool else if False then Bool else Bool
        d5 = (\x6. (\x7. x7 : Bool -> Bool) p1 : Bool -> Bool) (if False then Chain1Base4.M'.d26 else Chain1Base4.M'.d54)
        d8 : if True then if True then Bool else Bool else if True then Bool else Bool
        d8 = Chain1Base4.M.d95 (if if Chain1Base4.M'.d75 then Chain1Base4.M'.d75 else Chain1Base4.M'.d81 then if Chain1Base4.M'.d21 then False else Chain1Base4.M'.d12 else if False then d5 else Chain1Base4.M'.d110)
        d9 : if False then if False then Bool else Bool else if True then Bool else Bool
        d9 = Chain1Base4.M.d64 (if if Chain1Base4.M'.d86 then False else Chain1Base4.M'.d78 then if Chain1Base4.M'.d107 then p2 else d5 else if Chain1Base4.M'.d26 then Chain1Base4.M'.d64 else Chain1Base4.M'.d31)
        d10 : (\x12. (\x13. Bool : Type -> Type) x12 : Type -> Type) (if True then Bool else Bool)
        d10 = (\x11. if d4 then True else Chain1Base4.M'.d48 : Bool -> Bool) (if Chain1Base4.M'.d63 then p1 else Chain1Base4.M'.d24)
        d14 : (\x15. if True then x15 else x15 : Type -> Type) (if True then Bool else Bool)
        d14 = Chain1Base4.M.d31 (if if True then p2 else d8 then if p2 then Chain1Base4.M'.d73 else Chain1Base4.M'.d9 else if d9 then Chain1Base4.M'.d99 else d9)
        d16 : (\x18. (\x19. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d16 = Chain1Base4.M.d76 (Chain1Base4.M.d95 ((\x17. if True then False else d14 : Bool -> Bool) (if d9 then d8 else Chain1Base4.M'.d12)))
        d20 : if False then if False then Bool else Bool else if True then Bool else Bool
        d20 = if if Chain1Base4.M'.d59 then Chain1Base4.M'.d40 else False then if d4 then d16 else Chain1Base4.M'.d26 else if p1 then p2 else False
        d21 : if True then if False then Bool else Bool else if False then Bool else Bool
        d21 = Chain1Base4.M.d40 (Chain1Base4.M.d10 (if if p2 then p2 else True then if d16 then False else p1 else if p2 then Chain1Base4.M'.d40 else p1))
        d22 : (\x24. if True then Bool else x24 : Type -> Type) (if True then Bool else Bool)
        d22 = (\x23. Chain1Base4.M.d93 (Chain1Base4.M.d93 (Chain1Base4.M.d99 (Chain1Base4.M.d48 (if d5 then Chain1Base4.M'.d3 else Chain1Base4.M'.d35)))) : Bool -> Bool) (if p1 then d8 else Chain1Base4.M'.d75)
        d25 : (\x26. (\x27. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d25 = Chain1Base4.M.d38 (Chain1Base4.M.d40 (if if d14 then p1 else d8 then if Chain1Base4.M'.d82 then d10 else False else if Chain1Base4.M'.d107 then d10 else Chain1Base4.M'.d12))
        d28 : if False then if True then Bool else Bool else if False then Bool else Bool
        d28 = if if d8 then True else Chain1Base4.M'.d93 then if Chain1Base4.M'.d80 then d14 else p1 else if False then p1 else d4
        d29 : (\x30. (\x31. x31 : Type -> Type) x30 : Type -> Type) (if True then Bool else Bool)
        d29 = Chain1Base4.M.d95 (Chain1Base4.M.d86 (if if Chain1Base4.M'.d51 then True else Chain1Base4.M'.d78 then if Chain1Base4.M'.d110 then Chain1Base4.M'.d24 else Chain1Base4.M'.d39 else if p2 then Chain1Base4.M'.d107 else True))
        d32 : (\x35. if False then Bool else x35 : Type -> Type) (if False then Bool else Bool)
        d32 = Chain1Base4.M.d15 ((\x33. Chain1Base4.M.d59 (Chain1Base4.M.d95 (Chain1Base4.M.d71 (Chain1Base4.M.d3 (Chain1Base4.M.d10 (Chain1Base4.M.d4 ((\x34. True : Bool -> Bool) d4)))))) : Bool -> Bool) (if p1 then d25 else Chain1Base4.M'.d105))
        d36 : (\x39. if False then Bool else x39 : Type -> Type) (if False then Bool else Bool)
        d36 = (\x37. Chain1Base4.M.d35 (Chain1Base4.M.d92 (Chain1Base4.M.d73 (Chain1Base4.M.d89 (Chain1Base4.M.d31 ((\x38. x37 : Bool -> Bool) d22))))) : Bool -> Bool) (if d8 then d29 else True)
        d40 : (\x41. if False then x41 else Bool : Type -> Type) (if False then Bool else Bool)
        d40 = if if Chain1Base4.M'.d89 then True else Chain1Base4.M'.d51 then if Chain1Base4.M'.d15 then p1 else p2 else if d9 then False else Chain1Base4.M'.d110
        d42 : if True then if False then Bool else Bool else if True then Bool else Bool
        d42 = (\x43. Chain1Base4.M.d92 (Chain1Base4.M.d45 (Chain1Base4.M.d67 (Chain1Base4.M.d4 ((\x44. Chain1Base4.M'.d26 : Bool -> Bool) False)))) : Bool -> Bool) (if d40 then p1 else True)
        d45 : if True then if True then Bool else Bool else if False then Bool else Bool
        d45 = Chain1Base4.M.d42 ((\x46. Chain1Base4.M.d64 (Chain1Base4.M.d73 ((\x47. True : Bool -> Bool) p1)) : Bool -> Bool) (if d32 then p1 else Chain1Base4.M'.d110))
        d48 : (\x49. (\x50. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d48 = if if Chain1Base4.M'.d78 then True else p1 then if p2 then d21 else False else if False then Chain1Base4.M'.d102 else p1
        d51 : (\x52. (\x53. x53 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d51 = if if p1 then Chain1Base4.M'.d67 else Chain1Base4.M'.d15 then if Chain1Base4.M'.d81 then Chain1Base4.M'.d42 else Chain1Base4.M'.d26 else if d40 then False else Chain1Base4.M'.d39
        d54 : (\x55. if True then x55 else Bool : Type -> Type) (if True then Bool else Bool)
        d54 = Chain1Base4.M.d10 (Chain1Base4.M.d27 (if if True then Chain1Base4.M'.d95 else True then if d20 then d29 else True else if d21 then Chain1Base4.M'.d68 else Chain1Base4.M'.d9))
        d56 : (\x59. if True then Bool else x59 : Type -> Type) (if False then Bool else Bool)
        d56 = (\x57. Chain1Base4.M.d3 (Chain1Base4.M.d15 (Chain1Base4.M.d3 (Chain1Base4.M.d84 (Chain1Base4.M.d4 ((\x58. Chain1Base4.M'.d99 : Bool -> Bool) Chain1Base4.M'.d68))))) : Bool -> Bool) (if d21 then d20 else p2)
        d60 : if True then if False then Bool else Bool else if True then Bool else Bool
        d60 = (\x61. if Chain1Base4.M'.d67 then Chain1Base4.M'.d59 else False : Bool -> Bool) (if Chain1Base4.M'.d4 then d48 else Chain1Base4.M'.d4)
        d62 : if False then if False then Bool else Bool else if True then Bool else Bool
        d62 = (\x63. Chain1Base4.M.d64 (Chain1Base4.M.d63 ((\x64. d5 : Bool -> Bool) d32)) : Bool -> Bool) (if p2 then d32 else p1)
        d65 : if False then if False then Bool else Bool else if True then Bool else Bool
        d65 = Chain1Base4.M.d40 (Chain1Base4.M.d27 (Chain1Base4.M.d51 (Chain1Base4.M.d92 (Chain1Base4.M.d4 (Chain1Base4.M.d64 (Chain1Base4.M.d64 ((\x66. Chain1Base4.M.d64 (Chain1Base4.M.d48 ((\x67. d62 : Bool -> Bool) Chain1Base4.M'.d39)) : Bool -> Bool) (if p1 then Chain1Base4.M'.d81 else p1))))))))
        d68 : if True then if True then Bool else Bool else if False then Bool else Bool
        d68 = Chain1Base4.M.d105 (Chain1Base4.M.d21 (Chain1Base4.M.d12 (Chain1Base4.M.d110 (Chain1Base4.M.d48 (if if d4 then Chain1Base4.M'.d107 else p1 then if False then p1 else Chain1Base4.M'.d15 else if p1 then Chain1Base4.M'.d27 else False)))))
        d69 : (\x72. (\x73. x73 : Type -> Type) x72 : Type -> Type) (if False then Bool else Bool)
        d69 = Chain1Base4.M.d35 (Chain1Base4.M.d84 ((\x70. (\x71. Chain1Base4.M'.d99 : Bool -> Bool) d65 : Bool -> Bool) (if Chain1Base4.M'.d64 then p2 else d56)))
        d74 : (\x76. if True then x76 else x76 : Type -> Type) (if False then Bool else Bool)
        d74 = Chain1Base4.M.d64 (Chain1Base4.M.d27 (Chain1Base4.M.d27 ((\x75. Chain1Base4.M.d86 (Chain1Base4.M.d16 (if d68 then Chain1Base4.M'.d64 else d51)) : Bool -> Bool) (if Chain1Base4.M'.d37 then Chain1Base4.M'.d54 else Chain1Base4.M'.d76))))
        d77 : if True then if False then Bool else Bool else if True then Bool else Bool
        d77 = if if p1 then True else False then if Chain1Base4.M'.d82 then Chain1Base4.M'.d3 else False else if Chain1Base4.M'.d6 then d16 else True
        d78 : if False then if True then Bool else Bool else if False then Bool else Bool
        d78 = Chain1Base4.M.d21 ((\x79. Chain1Base4.M.d81 ((\x80. x80 : Bool -> Bool) Chain1Base4.M'.d24) : Bool -> Bool) (if True then False else p2))
        d81 : (\x82. if True then x82 else x82 : Type -> Type) (if True then Bool else Bool)
        d81 = if if Chain1Base4.M'.d105 then d62 else d25 then if d22 then Chain1Base4.M'.d73 else False else if Chain1Base4.M'.d92 then p1 else d51
        d83 : (\x84. if True then x84 else x84 : Type -> Type) (if False then Bool else Bool)
        d83 = if if p1 then Chain1Base4.M'.d24 else False then if Chain1Base4.M'.d26 then d25 else p2 else if True then Chain1Base4.M'.d10 else Chain1Base4.M'.d16
        d85 : (\x86. (\x87. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d85 = if if p1 then Chain1Base4.M'.d76 else True then if Chain1Base4.M'.d27 then d20 else Chain1Base4.M'.d42 else if d4 then d81 else p2
        d88 : (\x89. if True then x89 else x89 : Type -> Type) (if False then Bool else Bool)
        d88 = if if d83 then d78 else Chain1Base4.M'.d57 then if Chain1Base4.M'.d37 then p2 else p1 else if p2 then p2 else False
        d90 : (\x93. if False then x93 else x93 : Type -> Type) (if False then Bool else Bool)
        d90 = (\x91. Chain1Base4.M.d107 ((\x92. d69 : Bool -> Bool) p2) : Bool -> Bool) (if Chain1Base4.M'.d86 then Chain1Base4.M'.d68 else d65)
        d94 : (\x95. if False then x95 else x95 : Type -> Type) (if True then Bool else Bool)
        d94 = Chain1Base4.M.d80 (if if p2 then d22 else d54 then if p1 then d85 else Chain1Base4.M'.d68 else if False then p1 else False)
        d96 : (\x99. if True then x99 else Bool : Type -> Type) (if False then Bool else Bool)
        d96 = Chain1Base4.M.d83 (Chain1Base4.M.d51 (Chain1Base4.M.d45 (Chain1Base4.M.d9 (Chain1Base4.M.d78 (Chain1Base4.M.d4 (Chain1Base4.M.d12 ((\x97. Chain1Base4.M.d40 ((\x98. True : Bool -> Bool) p1) : Bool -> Bool) (if d77 then Chain1Base4.M'.d38 else Chain1Base4.M'.d3))))))))
        d100 : (\x103. if True then x103 else Bool : Type -> Type) (if False then Bool else Bool)
        d100 = Chain1Base4.M.d67 ((\x101. (\x102. False : Bool -> Bool) d48 : Bool -> Bool) (if p1 then True else d90))
        d104 : (\x106. (\x107. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d104 = (\x105. if p2 then Chain1Base4.M'.d67 else x105 : Bool -> Bool) (if True then Chain1Base4.M'.d67 else Chain1Base4.M'.d64)
        d108 : (\x110. (\x111. x110 : Type -> Type) x110 : Type -> Type) (if True then Bool else Bool)
        d108 = (\x109. if Chain1Base4.M'.d37 then Chain1Base4.M'.d80 else Chain1Base4.M'.d71 : Bool -> Bool) (if Chain1Base4.M'.d38 then Chain1Base4.M'.d16 else Chain1Base4.M'.d15)
        d112 : (\x115. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d112 = Chain1Base4.M.d99 (Chain1Base4.M.d15 ((\x113. Chain1Base4.M.d59 (Chain1Base4.M.d80 ((\x114. d10 : Bool -> Bool) True)) : Bool -> Bool) (if Chain1Base4.M'.d15 then False else d100)))
        d116 : (\x119. (\x120. x119 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d116 = Chain1Base4.M.d95 (Chain1Base4.M.d64 ((\x117. (\x118. Chain1Base4.M'.d110 : Bool -> Bool) Chain1Base4.M'.d68 : Bool -> Bool) (if Chain1Base4.M'.d92 then True else p2)))
        d121 : if False then if False then Bool else Bool else if False then Bool else Bool
        d121 = Chain1Base4.M.d48 (Chain1Base4.M.d3 (if if False then Chain1Base4.M'.d73 else False then if False then True else p2 else if d108 then Chain1Base4.M'.d37 else Chain1Base4.M'.d63))
        d122 : (\x123. (\x124. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d122 = Chain1Base4.M.d9 (if if d28 then d74 else p2 then if Chain1Base4.M'.d110 then d77 else Chain1Base4.M'.d9 else if Chain1Base4.M'.d68 then p2 else d60)
        d125 : if False then if True then Bool else Bool else if True then Bool else Bool
        d125 = Chain1Base4.M.d64 ((\x126. Chain1Base4.M.d102 (Chain1Base4.M.d102 (Chain1Base4.M.d24 ((\x127. d56 : Bool -> Bool) False))) : Bool -> Bool) (if p1 then p2 else False))
        d128 : if True then if False then Bool else Bool else if True then Bool else Bool
        d128 = (\x129. Chain1Base4.M.d12 (Chain1Base4.M.d81 (Chain1Base4.M.d95 (Chain1Base4.M.d16 (if p1 then Chain1Base4.M'.d105 else Chain1Base4.M'.d9)))) : Bool -> Bool) (if Chain1Base4.M'.d24 then Chain1Base4.M'.d93 else Chain1Base4.M'.d110)
        d130 : if True then if True then Bool else Bool else if False then Bool else Bool
        d130 = Chain1Base4.M.d63 (if if p2 then p2 else Chain1Base4.M'.d24 then if Chain1Base4.M'.d100 then Chain1Base4.M'.d100 else Chain1Base4.M'.d39 else if Chain1Base4.M'.d35 then Chain1Base4.M'.d6 else Chain1Base4.M'.d27)
        d131 : if True then if True then Bool else Bool else if True then Bool else Bool
        d131 = Chain1Base4.M.d51 (Chain1Base4.M.d31 (if if Chain1Base4.M'.d16 then p2 else d29 then if Chain1Base4.M'.d67 then d29 else False else if d45 then p1 else p1))
        d132 : if False then if False then Bool else Bool else if False then Bool else Bool
        d132 = (\x133. (\x134. d40 : Bool -> Bool) Chain1Base4.M'.d93 : Bool -> Bool) (if Chain1Base4.M'.d35 then d78 else Chain1Base4.M'.d9)
        d135 : (\x138. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d135 = (\x136. Chain1Base4.M.d89 ((\x137. Chain1Base4.M'.d100 : Bool -> Bool) d100) : Bool -> Bool) (if d130 then False else d4)