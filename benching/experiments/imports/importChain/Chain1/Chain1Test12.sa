module Chain1Test12 where
    import Chain1Base12
    module M(p1: (\x2. if True then Bool else Bool : Type -> Type) Bool)(p3: (\x4. if False then x4 else x4 : Type -> Type) Bool) where
        d5 : if True then if True then Bool else Bool else if False then Bool else Bool
        d5 = (\x6. if Chain1Base12.M'.d47 then Chain1Base12.M'.d20 else Chain1Base12.M'.d11 : Bool -> Bool) (if Chain1Base12.M'.d7 then p1 else p3)
        d7 : if False then if True then Bool else Bool else if False then Bool else Bool
        d7 = Chain1Base12.M.d64 (Chain1Base12.M.d42 (if if d5 then d5 else Chain1Base12.M'.d13 then if False then True else Chain1Base12.M'.d38 else if d5 then d5 else Chain1Base12.M'.d87))
        d8 : if True then if True then Bool else Bool else if False then Bool else Bool
        d8 = Chain1Base12.M.d94 (Chain1Base12.M.d41 (Chain1Base12.M.d88 (Chain1Base12.M.d41 (Chain1Base12.M.d42 (if if d7 then d5 else Chain1Base12.M'.d94 then if p1 then Chain1Base12.M'.d104 else False else if d5 then Chain1Base12.M'.d83 else d5)))))
        d9 : if True then if False then Bool else Bool else if False then Bool else Bool
        d9 = Chain1Base12.M.d73 ((\x10. Chain1Base12.M.d108 (Chain1Base12.M.d75 (Chain1Base12.M.d71 (Chain1Base12.M.d72 (Chain1Base12.M.d4 (if Chain1Base12.M'.d30 then p3 else d5))))) : Bool -> Bool) (if Chain1Base12.M'.d34 then p1 else p1))
        d11 : (\x12. (\x13. x12 : Type -> Type) x12 : Type -> Type) (if False then Bool else Bool)
        d11 = Chain1Base12.M.d108 (Chain1Base12.M.d47 (Chain1Base12.M.d30 (Chain1Base12.M.d47 (if if False then Chain1Base12.M'.d100 else p1 then if d8 then d7 else d7 else if Chain1Base12.M'.d55 then Chain1Base12.M'.d71 else True))))
        d14 : if False then if True then Bool else Bool else if False then Bool else Bool
        d14 = (\x15. if d8 then False else d8 : Bool -> Bool) (if d7 then Chain1Base12.M'.d30 else Chain1Base12.M'.d81)
        d16 : if False then if True then Bool else Bool else if False then Bool else Bool
        d16 = (\x17. Chain1Base12.M.d88 (Chain1Base12.M.d42 (Chain1Base12.M.d81 (if Chain1Base12.M'.d14 then False else Chain1Base12.M'.d104))) : Bool -> Bool) (if Chain1Base12.M'.d63 then Chain1Base12.M'.d7 else False)
        d18 : if True then if False then Bool else Bool else if False then Bool else Bool
        d18 = Chain1Base12.M.d38 (Chain1Base12.M.d80 (if if True then Chain1Base12.M'.d30 else d7 then if d16 then d7 else Chain1Base12.M'.d73 else if Chain1Base12.M'.d55 then p1 else Chain1Base12.M'.d94))
        d19 : if True then if True then Bool else Bool else if False then Bool else Bool
        d19 = if if d9 then Chain1Base12.M'.d60 else True then if p1 then Chain1Base12.M'.d81 else Chain1Base12.M'.d107 else if p1 then p3 else p1
        d20 : (\x21. if False then x21 else Bool : Type -> Type) (if False then Bool else Bool)
        d20 = if if p3 then d18 else p1 then if Chain1Base12.M'.d79 then Chain1Base12.M'.d60 else Chain1Base12.M'.d72 else if False then Chain1Base12.M'.d63 else False
        d22 : if True then if True then Bool else Bool else if True then Bool else Bool
        d22 = Chain1Base12.M.d20 (if if True then Chain1Base12.M'.d83 else Chain1Base12.M'.d75 then if d11 then d18 else Chain1Base12.M'.d75 else if False then True else True)
        d23 : (\x24. if True then Bool else x24 : Type -> Type) (if False then Bool else Bool)
        d23 = if if d9 then d11 else True then if False then Chain1Base12.M'.d17 else Chain1Base12.M'.d108 else if True then d11 else p1
        d25 : (\x26. if False then Bool else x26 : Type -> Type) (if False then Bool else Bool)
        d25 = Chain1Base12.M.d4 (if if d9 then d9 else d5 then if Chain1Base12.M'.d107 then True else d16 else if d7 then Chain1Base12.M'.d89 else Chain1Base12.M'.d29)
        d27 : (\x28. (\x29. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d27 = if if Chain1Base12.M'.d83 then p1 else p1 then if Chain1Base12.M'.d63 then p1 else Chain1Base12.M'.d34 else if Chain1Base12.M'.d109 then True else Chain1Base12.M'.d72
        d30 : if False then if True then Bool else Bool else if False then Bool else Bool
        d30 = if if False then p1 else d14 then if True then p1 else p3 else if Chain1Base12.M'.d88 then d14 else Chain1Base12.M'.d71
        d31 : (\x33. (\x34. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d31 = (\x32. Chain1Base12.M.d7 (Chain1Base12.M.d72 (Chain1Base12.M.d72 (if Chain1Base12.M'.d26 then True else d22))) : Bool -> Bool) (if p1 then d7 else Chain1Base12.M'.d97)
        d35 : if True then if True then Bool else Bool else if False then Bool else Bool
        d35 = if if Chain1Base12.M'.d81 then d18 else p3 then if p1 then d27 else True else if False then True else d14
        d36 : if False then if False then Bool else Bool else if True then Bool else Bool
        d36 = if if d18 then Chain1Base12.M'.d63 else Chain1Base12.M'.d94 then if Chain1Base12.M'.d30 then d11 else p3 else if True then False else p1
        d37 : if True then if False then Bool else Bool else if True then Bool else Bool
        d37 = Chain1Base12.M.d38 (if if Chain1Base12.M'.d2 then p1 else p3 then if True then True else d5 else if Chain1Base12.M'.d94 then d35 else Chain1Base12.M'.d107)
        d38 : (\x40. if True then x40 else x40 : Type -> Type) (if True then Bool else Bool)
        d38 = (\x39. if Chain1Base12.M'.d69 then Chain1Base12.M'.d42 else True : Bool -> Bool) (if Chain1Base12.M'.d71 then Chain1Base12.M'.d69 else True)
        d41 : if False then if False then Bool else Bool else if False then Bool else Bool
        d41 = Chain1Base12.M.d7 (if if True then d18 else False then if p3 then p3 else Chain1Base12.M'.d20 else if Chain1Base12.M'.d13 then d19 else True)
        d42 : if False then if True then Bool else Bool else if True then Bool else Bool
        d42 = (\x43. (\x44. False : Bool -> Bool) d38 : Bool -> Bool) (if p1 then Chain1Base12.M'.d97 else d41)
        d45 : if False then if False then Bool else Bool else if True then Bool else Bool
        d45 = (\x46. Chain1Base12.M.d89 (Chain1Base12.M.d8 (Chain1Base12.M.d53 (if Chain1Base12.M'.d2 then p1 else Chain1Base12.M'.d87))) : Bool -> Bool) (if Chain1Base12.M'.d107 then Chain1Base12.M'.d42 else p1)
        d47 : (\x50. if True then x50 else Bool : Type -> Type) (if True then Bool else Bool)
        d47 = (\x48. (\x49. True : Bool -> Bool) Chain1Base12.M'.d41 : Bool -> Bool) (if d20 then False else Chain1Base12.M'.d7)
        d51 : if False then if False then Bool else Bool else if False then Bool else Bool
        d51 = Chain1Base12.M.d50 (Chain1Base12.M.d63 (Chain1Base12.M.d60 (Chain1Base12.M.d81 (if if True then p1 else Chain1Base12.M'.d38 then if p1 then d27 else False else if Chain1Base12.M'.d73 then Chain1Base12.M'.d41 else d38))))
        d52 : (\x55. if False then x55 else Bool : Type -> Type) (if True then Bool else Bool)
        d52 = Chain1Base12.M.d63 ((\x53. Chain1Base12.M.d53 (Chain1Base12.M.d83 (Chain1Base12.M.d23 ((\x54. Chain1Base12.M'.d30 : Bool -> Bool) Chain1Base12.M'.d23))) : Bool -> Bool) (if p3 then Chain1Base12.M'.d54 else Chain1Base12.M'.d41))
        d56 : (\x57. if False then Bool else x57 : Type -> Type) (if True then Bool else Bool)
        d56 = Chain1Base12.M.d26 (if if Chain1Base12.M'.d64 then Chain1Base12.M'.d29 else p1 then if d42 then Chain1Base12.M'.d60 else Chain1Base12.M'.d55 else if Chain1Base12.M'.d79 then p1 else Chain1Base12.M'.d50)
        d58 : if False then if True then Bool else Bool else if False then Bool else Bool
        d58 = Chain1Base12.M.d47 (if if Chain1Base12.M'.d34 then Chain1Base12.M'.d38 else Chain1Base12.M'.d88 then if Chain1Base12.M'.d23 then d36 else p1 else if p1 then True else d37)
        d59 : if False then if True then Bool else Bool else if False then Bool else Bool
        d59 = Chain1Base12.M.d91 (if if d41 then Chain1Base12.M'.d75 else True then if Chain1Base12.M'.d81 then Chain1Base12.M'.d73 else False else if d8 then Chain1Base12.M'.d100 else False)
        d60 : (\x61. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d60 = Chain1Base12.M.d72 (if if False then True else False then if p1 then d35 else Chain1Base12.M'.d11 else if d25 then Chain1Base12.M'.d100 else True)
        d62 : if True then if False then Bool else Bool else if True then Bool else Bool
        d62 = Chain1Base12.M.d78 (if if True then p1 else Chain1Base12.M'.d60 then if p1 then False else d18 else if p1 then Chain1Base12.M'.d38 else Chain1Base12.M'.d108)
        d63 : if False then if True then Bool else Bool else if True then Bool else Bool
        d63 = (\x64. if p3 then d30 else Chain1Base12.M'.d78 : Bool -> Bool) (if Chain1Base12.M'.d63 then p1 else False)
        d65 : (\x67. (\x68. x67 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d65 = (\x66. Chain1Base12.M.d71 (if d16 then Chain1Base12.M'.d73 else Chain1Base12.M'.d14) : Bool -> Bool) (if False then p1 else d25)
        d69 : (\x70. if False then x70 else Bool : Type -> Type) (if True then Bool else Bool)
        d69 = Chain1Base12.M.d50 (Chain1Base12.M.d2 (if if d62 then p3 else d41 then if d8 then True else True else if False then True else d27))
        d71 : (\x72. if False then x72 else Bool : Type -> Type) (if True then Bool else Bool)
        d71 = if if False then True else False then if d45 then False else d38 else if Chain1Base12.M'.d45 then Chain1Base12.M'.d4 else False
        d73 : if True then if False then Bool else Bool else if True then Bool else Bool
        d73 = if if d65 then True else p1 then if d7 then Chain1Base12.M'.d69 else d51 else if True then Chain1Base12.M'.d75 else d60
        d74 : if True then if True then Bool else Bool else if False then Bool else Bool
        d74 = Chain1Base12.M.d81 (Chain1Base12.M.d93 (Chain1Base12.M.d20 (Chain1Base12.M.d47 ((\x75. Chain1Base12.M.d68 ((\x76. d31 : Bool -> Bool) d73) : Bool -> Bool) (if Chain1Base12.M'.d109 then p3 else Chain1Base12.M'.d41)))))
        d77 : if False then if True then Bool else Bool else if False then Bool else Bool
        d77 = Chain1Base12.M.d97 (Chain1Base12.M.d87 ((\x78. Chain1Base12.M.d68 (Chain1Base12.M.d83 (Chain1Base12.M.d109 (Chain1Base12.M.d64 (Chain1Base12.M.d8 (Chain1Base12.M.d60 (Chain1Base12.M.d14 (if Chain1Base12.M'.d64 then Chain1Base12.M'.d60 else Chain1Base12.M'.d2))))))) : Bool -> Bool) (if p3 then Chain1Base12.M'.d38 else Chain1Base12.M'.d104)))
        d79 : if True then if True then Bool else Bool else if False then Bool else Bool
        d79 = Chain1Base12.M.d81 ((\x80. Chain1Base12.M.d63 (Chain1Base12.M.d13 ((\x81. d22 : Bool -> Bool) True)) : Bool -> Bool) (if Chain1Base12.M'.d69 then p1 else False))
        d82 : if False then if True then Bool else Bool else if True then Bool else Bool
        d82 = Chain1Base12.M.d87 (if if Chain1Base12.M'.d50 then True else True then if Chain1Base12.M'.d8 then True else p3 else if Chain1Base12.M'.d2 then Chain1Base12.M'.d73 else d35)
        d83 : if True then if False then Bool else Bool else if False then Bool else Bool
        d83 = if if d20 then True else Chain1Base12.M'.d2 then if Chain1Base12.M'.d2 then d45 else True else if Chain1Base12.M'.d13 then False else d25
        d84 : if False then if True then Bool else Bool else if False then Bool else Bool
        d84 = Chain1Base12.M.d47 ((\x85. Chain1Base12.M.d86 (Chain1Base12.M.d13 ((\x86. False : Bool -> Bool) p3)) : Bool -> Bool) (if Chain1Base12.M'.d64 then False else d83))
        d87 : (\x90. (\x91. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d87 = (\x88. (\x89. Chain1Base12.M'.d47 : Bool -> Bool) Chain1Base12.M'.d69 : Bool -> Bool) (if d83 then d63 else p1)
        d92 : if False then if True then Bool else Bool else if True then Bool else Bool
        d92 = Chain1Base12.M.d87 (Chain1Base12.M.d69 (Chain1Base12.M.d91 (Chain1Base12.M.d73 (Chain1Base12.M.d42 (Chain1Base12.M.d75 (Chain1Base12.M.d50 ((\x93. Chain1Base12.M.d79 (Chain1Base12.M.d34 (Chain1Base12.M.d38 (Chain1Base12.M.d64 (Chain1Base12.M.d72 (Chain1Base12.M.d108 (if Chain1Base12.M'.d94 then p3 else Chain1Base12.M'.d81)))))) : Bool -> Bool) (if Chain1Base12.M'.d88 then p3 else Chain1Base12.M'.d104))))))))
        d94 : if True then if False then Bool else Bool else if True then Bool else Bool
        d94 = (\x95. Chain1Base12.M.d64 (Chain1Base12.M.d108 (if d59 then Chain1Base12.M'.d73 else d60)) : Bool -> Bool) (if p1 then Chain1Base12.M'.d64 else p3)
        d96 : if True then if False then Bool else Bool else if False then Bool else Bool
        d96 = Chain1Base12.M.d91 ((\x97. (\x98. p3 : Bool -> Bool) p1 : Bool -> Bool) (if d69 then True else p1))
        d99 : if False then if True then Bool else Bool else if True then Bool else Bool
        d99 = Chain1Base12.M.d60 (if if p1 then True else d71 then if Chain1Base12.M'.d104 then Chain1Base12.M'.d97 else d19 else if Chain1Base12.M'.d13 then p3 else Chain1Base12.M'.d64)
        d100 : (\x101. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d100 = if if p3 then d36 else p1 then if Chain1Base12.M'.d26 then Chain1Base12.M'.d71 else d83 else if Chain1Base12.M'.d41 then d14 else Chain1Base12.M'.d20
        d102 : (\x105. (\x106. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d102 = Chain1Base12.M.d17 (Chain1Base12.M.d60 ((\x103. (\x104. d100 : Bool -> Bool) False : Bool -> Bool) (if p1 then Chain1Base12.M'.d80 else p1)))
        d107 : (\x110. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d107 = Chain1Base12.M.d104 (Chain1Base12.M.d93 ((\x108. (\x109. True : Bool -> Bool) Chain1Base12.M'.d72 : Bool -> Bool) (if p3 then Chain1Base12.M'.d100 else True)))