module Chain1Base13 where
    module M(p1: (\x2. if True then Bool else Bool : Type -> Type) Bool) where
        d3 : if False then if False then Bool else Bool else if True then Bool else Bool
        d3 = (\x4. if p1 then p1 else p1 : Bool -> Bool) (if True then p1 else True)
        d5 : if False then if True then Bool else Bool else if False then Bool else Bool
        d5 = (\x6. if x6 then x6 else x6 : Bool -> Bool) (if False then False else d3)
        d7 : (\x8. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d7 = if if d5 then d5 else p1 then if p1 then p1 else False else if d5 then True else False
        d9 : (\x11. if True then x11 else x11 : Type -> Type) (if True then Bool else Bool)
        d9 = (\x10. if p1 then p1 else x10 : Bool -> Bool) (if False then False else d5)
        d12 : (\x13. if False then Bool else x13 : Type -> Type) (if False then Bool else Bool)
        d12 = if if True then p1 else False then if p1 then False else d9 else if False then d3 else p1
        d14 : if False then if False then Bool else Bool else if False then Bool else Bool
        d14 = if if p1 then False else p1 then if d9 then d7 else d9 else if d3 then d3 else d9
        d15 : if True then if False then Bool else Bool else if True then Bool else Bool
        d15 = if if p1 then False else True then if p1 then d5 else True else if d5 then True else False
        d16 : (\x18. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d16 = (\x17. if d7 then True else d9 : Bool -> Bool) (if p1 then d9 else d15)
        d19 : if True then if False then Bool else Bool else if False then Bool else Bool
        d19 = if if False then False else d3 then if p1 then p1 else False else if p1 then p1 else p1
        d20 : (\x21. (\x22. x22 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d20 = if if p1 then True else d15 then if p1 then True else False else if p1 then p1 else False
        d23 : (\x25. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d23 = (\x24. if d5 then x24 else d7 : Bool -> Bool) (if d5 then d16 else p1)
        d26 : (\x27. (\x28. x27 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d26 = if if p1 then d15 else False then if d14 then d15 else False else if p1 then d12 else p1
        d29 : if False then if False then Bool else Bool else if True then Bool else Bool
        d29 = (\x30. if d23 then d14 else True : Bool -> Bool) (if p1 then p1 else False)
        d31 : if True then if False then Bool else Bool else if False then Bool else Bool
        d31 = if if p1 then p1 else d16 then if p1 then p1 else p1 else if d9 then d29 else False
        d32 : if False then if True then Bool else Bool else if True then Bool else Bool
        d32 = (\x33. if d29 then d23 else d26 : Bool -> Bool) (if d12 then True else d19)
        d34 : if True then if True then Bool else Bool else if False then Bool else Bool
        d34 = if if p1 then p1 else p1 then if d29 then True else p1 else if d26 then d15 else p1
        d35 : if False then if True then Bool else Bool else if True then Bool else Bool
        d35 = (\x36. if True then p1 else True : Bool -> Bool) (if p1 then True else False)
        d37 : if True then if True then Bool else Bool else if False then Bool else Bool
        d37 = (\x38. if x38 then True else False : Bool -> Bool) (if p1 then p1 else d32)
        d39 : if False then if False then Bool else Bool else if False then Bool else Bool
        d39 = (\x40. if False then d26 else d20 : Bool -> Bool) (if False then d37 else d31)
        d41 : if False then if True then Bool else Bool else if False then Bool else Bool
        d41 = (\x42. if x42 then False else d35 : Bool -> Bool) (if d34 then p1 else p1)
        d43 : if False then if False then Bool else Bool else if True then Bool else Bool
        d43 = (\x44. if True then True else d32 : Bool -> Bool) (if d19 then False else d35)
        d45 : (\x48. if False then Bool else x48 : Type -> Type) (if True then Bool else Bool)
        d45 = (\x46. (\x47. d26 : Bool -> Bool) True : Bool -> Bool) (if d14 then d16 else False)
        d49 : (\x50. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d49 = if if p1 then d15 else False then if True then p1 else p1 else if p1 then d32 else p1
        d51 : if False then if False then Bool else Bool else if True then Bool else Bool
        d51 = if if True then d19 else d7 then if True then True else p1 else if d49 then d35 else d12
        d52 : (\x55. (\x56. x55 : Type -> Type) x55 : Type -> Type) (if True then Bool else Bool)
        d52 = (\x53. (\x54. False : Bool -> Bool) False : Bool -> Bool) (if d14 then d39 else d31)
        d57 : if True then if False then Bool else Bool else if True then Bool else Bool
        d57 = if if False then p1 else d14 then if True then p1 else d12 else if True then d12 else d51
        d58 : (\x59. if True then Bool else x59 : Type -> Type) (if False then Bool else Bool)
        d58 = if if d3 then p1 else p1 then if True then d19 else False else if d39 then d15 else False
        d60 : if True then if True then Bool else Bool else if False then Bool else Bool
        d60 = if if d15 then d51 else d39 then if True then d12 else p1 else if p1 then d35 else p1
        d61 : (\x62. if True then Bool else x62 : Type -> Type) (if False then Bool else Bool)
        d61 = if if p1 then True else True then if p1 then True else p1 else if False then d12 else p1
        d63 : if False then if False then Bool else Bool else if True then Bool else Bool
        d63 = if if p1 then p1 else d19 then if p1 then d14 else p1 else if True then d5 else p1
        d64 : if False then if True then Bool else Bool else if False then Bool else Bool
        d64 = if if True then p1 else d34 then if d63 then d19 else d63 else if p1 then False else d57
        d65 : if False then if True then Bool else Bool else if True then Bool else Bool
        d65 = (\x66. (\x67. p1 : Bool -> Bool) d49 : Bool -> Bool) (if p1 then p1 else False)
        d68 : if False then if False then Bool else Bool else if True then Bool else Bool
        d68 = if if d35 then False else d7 then if False then p1 else p1 else if d29 then False else d61
        d69 : (\x70. (\x71. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d69 = if if True then d23 else p1 then if p1 then d37 else False else if d7 then True else False
        d72 : (\x74. (\x75. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d72 = (\x73. if True then d69 else False : Bool -> Bool) (if p1 then p1 else False)
        d76 : (\x79. if False then Bool else x79 : Type -> Type) (if True then Bool else Bool)
        d76 = (\x77. (\x78. x78 : Bool -> Bool) True : Bool -> Bool) (if d64 then p1 else p1)
        d80 : (\x82. (\x83. Bool : Type -> Type) x82 : Type -> Type) (if True then Bool else Bool)
        d80 = (\x81. if True then p1 else True : Bool -> Bool) (if p1 then d45 else p1)
        d84 : (\x87. (\x88. Bool : Type -> Type) x87 : Type -> Type) (if True then Bool else Bool)
        d84 = (\x85. (\x86. x85 : Bool -> Bool) True : Bool -> Bool) (if p1 then p1 else d37)
        d89 : (\x92. if False then x92 else Bool : Type -> Type) (if True then Bool else Bool)
        d89 = (\x90. (\x91. d80 : Bool -> Bool) True : Bool -> Bool) (if d7 then False else False)
        d93 : (\x95. if False then Bool else x95 : Type -> Type) (if False then Bool else Bool)
        d93 = (\x94. if d3 then p1 else d45 : Bool -> Bool) (if p1 then d29 else d9)
        d96 : (\x99. (\x100. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d96 = (\x97. (\x98. d68 : Bool -> Bool) x97 : Bool -> Bool) (if False then p1 else False)
        d101 : if False then if False then Bool else Bool else if False then Bool else Bool
        d101 = (\x102. (\x103. x103 : Bool -> Bool) x102 : Bool -> Bool) (if False then False else p1)
        d104 : (\x105. (\x106. x105 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d104 = if if p1 then p1 else True then if p1 then d76 else p1 else if True then p1 else d15
        d107 : if False then if True then Bool else Bool else if False then Bool else Bool
        d107 = if if d9 then p1 else d89 then if True then False else False else if d76 then p1 else d89
        d108 : (\x111. (\x112. x112 : Type -> Type) x111 : Type -> Type) (if False then Bool else Bool)
        d108 = (\x109. (\x110. True : Bool -> Bool) True : Bool -> Bool) (if True then True else d29)
        d113 : (\x114. if True then Bool else x114 : Type -> Type) (if False then Bool else Bool)
        d113 = if if d96 then True else p1 then if True then d89 else d51 else if d63 then d32 else False
        d115 : (\x118. if False then Bool else x118 : Type -> Type) (if True then Bool else Bool)
        d115 = (\x116. (\x117. False : Bool -> Bool) d12 : Bool -> Bool) (if d35 then p1 else True)
        d119 : if False then if False then Bool else Bool else if True then Bool else Bool
        d119 = (\x120. (\x121. x120 : Bool -> Bool) p1 : Bool -> Bool) (if True then False else False)
        d122 : (\x125. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d122 = (\x123. (\x124. p1 : Bool -> Bool) x123 : Bool -> Bool) (if p1 then p1 else True)
        d126 : (\x128. if False then x128 else Bool : Type -> Type) (if False then Bool else Bool)
        d126 = (\x127. if p1 then d41 else x127 : Bool -> Bool) (if d69 then d15 else False)
    module M' = M (False) 