module Chain1Base10 where
    module M(p1: (\x2. if False then Bool else Bool : Type -> Type) Bool) where
        d3 : if True then if False then Bool else Bool else if False then Bool else Bool
        d3 = (\x4. if False then x4 else x4 : Bool -> Bool) (if p1 then p1 else False)
        d5 : if False then if True then Bool else Bool else if True then Bool else Bool
        d5 = (\x6. (\x7. x6 : Bool -> Bool) p1 : Bool -> Bool) (if True then p1 else p1)
        d8 : if True then if False then Bool else Bool else if True then Bool else Bool
        d8 = if if p1 then p1 else d3 then if d5 then True else p1 else if d3 then d5 else p1
        d9 : (\x10. (\x11. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d9 = if if p1 then d8 else d5 then if True then d5 else d3 else if d3 then True else p1
        d12 : if True then if True then Bool else Bool else if True then Bool else Bool
        d12 = if if d3 then True else False then if d8 then True else d5 else if d9 then p1 else p1
        d13 : (\x16. if True then Bool else x16 : Type -> Type) (if True then Bool else Bool)
        d13 = (\x14. (\x15. x14 : Bool -> Bool) True : Bool -> Bool) (if d5 then False else d12)
        d17 : (\x20. (\x21. Bool : Type -> Type) x20 : Type -> Type) (if False then Bool else Bool)
        d17 = (\x18. (\x19. False : Bool -> Bool) False : Bool -> Bool) (if True then p1 else d5)
        d22 : if True then if True then Bool else Bool else if True then Bool else Bool
        d22 = if if True then True else d8 then if p1 then d12 else p1 else if False then p1 else d12
        d23 : if True then if True then Bool else Bool else if True then Bool else Bool
        d23 = (\x24. (\x25. p1 : Bool -> Bool) x24 : Bool -> Bool) (if False then False else d17)
        d26 : (\x29. if False then x29 else Bool : Type -> Type) (if False then Bool else Bool)
        d26 = (\x27. (\x28. x28 : Bool -> Bool) d13 : Bool -> Bool) (if False then p1 else p1)
        d30 : (\x33. (\x34. x33 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d30 = (\x31. (\x32. p1 : Bool -> Bool) False : Bool -> Bool) (if True then p1 else d12)
        d35 : (\x36. if True then Bool else x36 : Type -> Type) (if False then Bool else Bool)
        d35 = if if True then False else p1 then if False then True else d23 else if False then True else p1
        d37 : if True then if False then Bool else Bool else if True then Bool else Bool
        d37 = if if d13 then d23 else p1 then if False then d13 else p1 else if d9 then False else p1
        d38 : (\x40. (\x41. x40 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d38 = (\x39. if True then False else True : Bool -> Bool) (if d3 then True else p1)
        d42 : if True then if True then Bool else Bool else if False then Bool else Bool
        d42 = if if True then p1 else d5 then if d8 then p1 else False else if d12 then d38 else False
        d43 : if False then if True then Bool else Bool else if False then Bool else Bool
        d43 = if if d38 then True else True then if p1 then d12 else True else if d38 then p1 else d8
        d44 : (\x46. (\x47. x46 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d44 = (\x45. if True then d8 else d5 : Bool -> Bool) (if p1 then True else p1)
        d48 : if False then if False then Bool else Bool else if False then Bool else Bool
        d48 = if if p1 then d44 else False then if d17 then p1 else True else if True then p1 else d12
        d49 : if False then if False then Bool else Bool else if False then Bool else Bool
        d49 = if if False then p1 else d9 then if p1 then False else d9 else if False then d12 else False
        d50 : if False then if False then Bool else Bool else if False then Bool else Bool
        d50 = if if p1 then p1 else p1 then if p1 then False else d38 else if d8 then d35 else p1
        d51 : (\x52. if True then x52 else Bool : Type -> Type) (if False then Bool else Bool)
        d51 = if if True then d8 else p1 then if p1 then p1 else True else if d30 then True else True
        d53 : if False then if False then Bool else Bool else if False then Bool else Bool
        d53 = (\x54. (\x55. p1 : Bool -> Bool) x54 : Bool -> Bool) (if True then d42 else True)
        d56 : if True then if False then Bool else Bool else if True then Bool else Bool
        d56 = (\x57. (\x58. d37 : Bool -> Bool) True : Bool -> Bool) (if p1 then d48 else False)
        d59 : (\x60. (\x61. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d59 = if if p1 then p1 else p1 then if p1 then p1 else d22 else if p1 then True else d5
        d62 : (\x65. if False then x65 else x65 : Type -> Type) (if False then Bool else Bool)
        d62 = (\x63. (\x64. True : Bool -> Bool) p1 : Bool -> Bool) (if p1 then d23 else d50)
        d66 : (\x68. if True then x68 else x68 : Type -> Type) (if False then Bool else Bool)
        d66 = (\x67. if d38 then x67 else False : Bool -> Bool) (if True then d5 else False)
        d69 : if False then if True then Bool else Bool else if False then Bool else Bool
        d69 = if if d3 then d22 else d22 then if p1 then d26 else True else if p1 then p1 else d51
        d70 : if False then if False then Bool else Bool else if True then Bool else Bool
        d70 = if if d69 then True else d59 then if d44 then p1 else False else if False then d62 else p1
        d71 : (\x72. (\x73. x73 : Type -> Type) x72 : Type -> Type) (if True then Bool else Bool)
        d71 = if if p1 then False else p1 then if p1 then d22 else p1 else if False then p1 else p1
        d74 : (\x75. if True then x75 else Bool : Type -> Type) (if False then Bool else Bool)
        d74 = if if True then p1 else False then if d53 then True else d70 else if d9 then d17 else p1
        d76 : if False then if False then Bool else Bool else if True then Bool else Bool
        d76 = if if True then True else False then if p1 then p1 else d22 else if False then p1 else p1
        d77 : (\x78. (\x79. Bool : Type -> Type) x78 : Type -> Type) (if True then Bool else Bool)
        d77 = if if True then p1 else False then if d74 then False else p1 else if p1 then p1 else d22
        d80 : (\x81. if True then x81 else Bool : Type -> Type) (if False then Bool else Bool)
        d80 = if if d77 then p1 else p1 then if p1 then p1 else p1 else if d70 then d76 else d23
        d82 : if True then if True then Bool else Bool else if False then Bool else Bool
        d82 = if if p1 then d9 else True then if d8 then False else d23 else if True then False else p1
        d83 : (\x85. (\x86. Bool : Type -> Type) x85 : Type -> Type) (if True then Bool else Bool)
        d83 = (\x84. if d62 then True else x84 : Bool -> Bool) (if d77 then d53 else p1)
        d87 : (\x88. if False then x88 else Bool : Type -> Type) (if True then Bool else Bool)
        d87 = if if True then False else p1 then if p1 then d70 else d37 else if d37 then p1 else False
        d89 : if True then if True then Bool else Bool else if False then Bool else Bool
        d89 = if if d42 then False else p1 then if p1 then p1 else p1 else if d13 then p1 else d53
        d90 : (\x91. (\x92. x91 : Type -> Type) x91 : Type -> Type) (if True then Bool else Bool)
        d90 = if if p1 then p1 else d8 then if p1 then False else False else if d26 then p1 else False
        d93 : if False then if False then Bool else Bool else if True then Bool else Bool
        d93 = (\x94. (\x95. True : Bool -> Bool) d12 : Bool -> Bool) (if False then True else True)
        d96 : (\x97. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d96 = if if True then d93 else d9 then if p1 then True else p1 else if p1 then d51 else False
        d98 : (\x100. (\x101. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d98 = (\x99. if False then False else x99 : Bool -> Bool) (if False then False else True)
        d102 : (\x104. (\x105. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d102 = (\x103. if p1 then d30 else False : Bool -> Bool) (if p1 then p1 else False)
        d106 : (\x107. if False then x107 else Bool : Type -> Type) (if True then Bool else Bool)
        d106 = if if d23 then d83 else p1 then if p1 then p1 else p1 else if False then d66 else True
        d108 : (\x109. if False then x109 else x109 : Type -> Type) (if True then Bool else Bool)
        d108 = if if False then True else p1 then if True then False else d38 else if False then d70 else False
        d110 : (\x111. (\x112. Bool : Type -> Type) x111 : Type -> Type) (if False then Bool else Bool)
        d110 = if if False then d17 else True then if False then d49 else d8 else if False then True else p1
        d113 : (\x115. if False then x115 else x115 : Type -> Type) (if False then Bool else Bool)
        d113 = (\x114. if d76 then d8 else x114 : Bool -> Bool) (if True then p1 else d53)
        d116 : if False then if True then Bool else Bool else if False then Bool else Bool
        d116 = (\x117. (\x118. d38 : Bool -> Bool) d82 : Bool -> Bool) (if True then p1 else d5)
        d119 : if False then if True then Bool else Bool else if True then Bool else Bool
        d119 = if if p1 then True else False then if d102 then p1 else d38 else if False then False else d89
        d120 : if True then if True then Bool else Bool else if False then Bool else Bool
        d120 = if if p1 then d3 else d43 then if d17 then p1 else True else if False then d89 else True
        d121 : (\x122. if False then x122 else x122 : Type -> Type) (if True then Bool else Bool)
        d121 = if if d83 then d93 else d69 then if d23 then p1 else p1 else if p1 then p1 else p1
    module M' = M (False) 