module Chain1Base6 where
    module M(p1: if False then Bool else Bool) where
        d2 : (\x5. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d2 = (\x3. (\x4. False : Bool -> Bool) x3 : Bool -> Bool) (if p1 then p1 else p1)
        d6 : if True then if True then Bool else Bool else if False then Bool else Bool
        d6 = if if False then False else False then if d2 then d2 else d2 else if d2 then True else d2
        d7 : if True then if False then Bool else Bool else if True then Bool else Bool
        d7 = if if False then p1 else False then if True then p1 else d2 else if True then p1 else False
        d8 : if True then if False then Bool else Bool else if False then Bool else Bool
        d8 = (\x9. (\x10. x10 : Bool -> Bool) True : Bool -> Bool) (if p1 then d7 else d6)
        d11 : (\x12. (\x13. x12 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d11 = if if True then p1 else True then if d8 then True else False else if d7 then True else p1
        d14 : if False then if True then Bool else Bool else if True then Bool else Bool
        d14 = if if d11 then d6 else d11 then if True then d11 else p1 else if p1 then p1 else True
        d15 : (\x16. if False then x16 else x16 : Type -> Type) (if False then Bool else Bool)
        d15 = if if False then d11 else p1 then if False then p1 else True else if False then p1 else p1
        d17 : if False then if False then Bool else Bool else if False then Bool else Bool
        d17 = if if p1 then True else p1 then if True then d2 else d2 else if p1 then d2 else d2
        d18 : (\x20. (\x21. x21 : Type -> Type) x20 : Type -> Type) (if False then Bool else Bool)
        d18 = (\x19. if True then d17 else False : Bool -> Bool) (if d15 then d14 else False)
        d22 : if False then if False then Bool else Bool else if False then Bool else Bool
        d22 = if if p1 then d18 else d6 then if False then p1 else d15 else if p1 then True else False
        d23 : if False then if True then Bool else Bool else if True then Bool else Bool
        d23 = if if d14 then d11 else d7 then if d8 then p1 else p1 else if True then d2 else d17
        d24 : (\x25. if True then x25 else x25 : Type -> Type) (if True then Bool else Bool)
        d24 = if if True then True else False then if p1 then p1 else p1 else if False then p1 else d14
        d26 : (\x28. (\x29. x29 : Type -> Type) x28 : Type -> Type) (if False then Bool else Bool)
        d26 = (\x27. if True then p1 else False : Bool -> Bool) (if False then False else False)
        d30 : if False then if False then Bool else Bool else if True then Bool else Bool
        d30 = if if d18 then p1 else d22 then if d26 then d24 else True else if False then p1 else d17
        d31 : (\x32. if True then x32 else x32 : Type -> Type) (if False then Bool else Bool)
        d31 = if if d17 then p1 else False then if p1 then False else True else if False then True else False
        d33 : (\x35. (\x36. x36 : Type -> Type) x35 : Type -> Type) (if True then Bool else Bool)
        d33 = (\x34. if d7 then p1 else x34 : Bool -> Bool) (if p1 then p1 else d24)
        d37 : (\x38. (\x39. x38 : Type -> Type) x38 : Type -> Type) (if False then Bool else Bool)
        d37 = if if p1 then p1 else True then if d30 then d22 else d7 else if d15 then d23 else d6
        d40 : if True then if False then Bool else Bool else if True then Bool else Bool
        d40 = if if p1 then True else p1 then if d14 then False else d17 else if d15 then d18 else p1
        d41 : (\x42. if False then Bool else x42 : Type -> Type) (if True then Bool else Bool)
        d41 = if if p1 then d22 else True then if p1 then True else p1 else if p1 then d6 else d33
        d43 : if False then if True then Bool else Bool else if False then Bool else Bool
        d43 = if if True then d18 else False then if d31 then False else p1 else if p1 then p1 else p1
        d44 : if False then if True then Bool else Bool else if False then Bool else Bool
        d44 = if if d6 then d31 else p1 then if p1 then p1 else p1 else if False then True else p1
        d45 : (\x47. if False then x47 else x47 : Type -> Type) (if True then Bool else Bool)
        d45 = (\x46. if d15 then d8 else d22 : Bool -> Bool) (if p1 then p1 else False)
        d48 : if True then if True then Bool else Bool else if True then Bool else Bool
        d48 = (\x49. if p1 then d37 else True : Bool -> Bool) (if d8 then False else d33)
        d50 : (\x51. (\x52. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d50 = if if True then d7 else p1 then if d40 then d37 else True else if p1 then False else d41
        d53 : (\x56. (\x57. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d53 = (\x54. (\x55. p1 : Bool -> Bool) d33 : Bool -> Bool) (if False then d45 else p1)
        d58 : (\x59. (\x60. x59 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d58 = if if False then d37 else p1 then if d43 then d48 else False else if d45 then True else p1
        d61 : (\x63. if True then x63 else x63 : Type -> Type) (if True then Bool else Bool)
        d61 = (\x62. if p1 then True else x62 : Bool -> Bool) (if True then p1 else d31)
        d64 : (\x65. if True then x65 else Bool : Type -> Type) (if True then Bool else Bool)
        d64 = if if d11 then d45 else d14 then if d17 then False else p1 else if False then d7 else True
        d66 : (\x67. if True then x67 else x67 : Type -> Type) (if False then Bool else Bool)
        d66 = if if d6 then d45 else p1 then if d23 then p1 else d33 else if True then True else False
        d68 : (\x70. (\x71. Bool : Type -> Type) x70 : Type -> Type) (if True then Bool else Bool)
        d68 = (\x69. if p1 then d24 else x69 : Bool -> Bool) (if p1 then True else d53)
        d72 : (\x73. (\x74. x73 : Type -> Type) x73 : Type -> Type) (if True then Bool else Bool)
        d72 = if if d68 then d64 else p1 then if d45 then p1 else p1 else if p1 then d44 else True
        d75 : if True then if True then Bool else Bool else if False then Bool else Bool
        d75 = if if p1 then True else p1 then if False then p1 else True else if p1 then False else d23
        d76 : if True then if False then Bool else Bool else if True then Bool else Bool
        d76 = if if p1 then p1 else d66 then if True then d66 else False else if d23 then d53 else False
        d77 : (\x78. if True then x78 else x78 : Type -> Type) (if False then Bool else Bool)
        d77 = if if p1 then p1 else p1 then if d37 then p1 else False else if True then p1 else d72
        d79 : if True then if True then Bool else Bool else if False then Bool else Bool
        d79 = (\x80. if True then d8 else d58 : Bool -> Bool) (if d2 then p1 else d7)
        d81 : if False then if True then Bool else Bool else if False then Bool else Bool
        d81 = (\x82. if d44 then True else True : Bool -> Bool) (if True then p1 else False)
        d83 : (\x86. if True then x86 else x86 : Type -> Type) (if True then Bool else Bool)
        d83 = (\x84. (\x85. x85 : Bool -> Bool) p1 : Bool -> Bool) (if True then p1 else True)
        d87 : (\x90. (\x91. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d87 = (\x88. (\x89. d37 : Bool -> Bool) p1 : Bool -> Bool) (if True then d7 else d2)
        d92 : (\x95. (\x96. Bool : Type -> Type) x95 : Type -> Type) (if False then Bool else Bool)
        d92 = (\x93. (\x94. False : Bool -> Bool) d76 : Bool -> Bool) (if p1 then d77 else p1)
        d97 : if False then if True then Bool else Bool else if False then Bool else Bool
        d97 = (\x98. if d24 then False else d87 : Bool -> Bool) (if d48 then d23 else p1)
        d99 : if False then if True then Bool else Bool else if True then Bool else Bool
        d99 = (\x100. (\x101. p1 : Bool -> Bool) d68 : Bool -> Bool) (if False then False else False)
        d102 : (\x103. (\x104. x104 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d102 = if if d66 then d61 else p1 then if p1 then d24 else d24 else if d26 then p1 else True
        d105 : (\x107. if True then x107 else x107 : Type -> Type) (if False then Bool else Bool)
        d105 = (\x106. if False then d7 else x106 : Bool -> Bool) (if False then False else False)
        d108 : (\x110. if True then Bool else x110 : Type -> Type) (if False then Bool else Bool)
        d108 = (\x109. if False then False else p1 : Bool -> Bool) (if p1 then p1 else d22)
        d111 : if False then if False then Bool else Bool else if False then Bool else Bool
        d111 = (\x112. (\x113. p1 : Bool -> Bool) d8 : Bool -> Bool) (if d58 then True else d43)
        d114 : (\x115. if True then x115 else x115 : Type -> Type) (if False then Bool else Bool)
        d114 = if if p1 then p1 else False then if d58 then p1 else d68 else if p1 then p1 else p1
        d116 : (\x119. if True then x119 else x119 : Type -> Type) (if False then Bool else Bool)
        d116 = (\x117. (\x118. d18 : Bool -> Bool) True : Bool -> Bool) (if p1 then False else True)
        d120 : if False then if False then Bool else Bool else if True then Bool else Bool
        d120 = if if d79 then True else d31 then if p1 then False else d8 else if p1 then p1 else True
        d121 : (\x122. if True then x122 else Bool : Type -> Type) (if False then Bool else Bool)
        d121 = if if d64 then p1 else p1 then if d37 then p1 else d72 else if p1 then d41 else p1
        d123 : if True then if False then Bool else Bool else if True then Bool else Bool
        d123 = (\x124. if True then True else d41 : Bool -> Bool) (if p1 then True else False)
    module M' = M (False) 