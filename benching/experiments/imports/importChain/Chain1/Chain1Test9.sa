module Chain1Test9 where
    import Chain1Base9
    module M(p1: if False then Bool else Bool)(p2: if True then Bool else Bool) where
        d3 : (\x4. (\x5. Bool : Type -> Type) x4 : Type -> Type) (if True then Bool else Bool)
        d3 = Chain1Base9.M.d24 (if if False then p1 else Chain1Base9.M'.d127 then if p2 then Chain1Base9.M'.d30 else Chain1Base9.M'.d8 else if Chain1Base9.M'.d84 then p2 else p1)
        d6 : if True then if True then Bool else Bool else if True then Bool else Bool
        d6 = Chain1Base9.M.d57 (if if p1 then Chain1Base9.M'.d80 else Chain1Base9.M'.d62 then if d3 then Chain1Base9.M'.d78 else False else if p2 then Chain1Base9.M'.d80 else Chain1Base9.M'.d119)
        d7 : (\x8. if False then Bool else x8 : Type -> Type) (if True then Bool else Bool)
        d7 = if if Chain1Base9.M'.d47 then Chain1Base9.M'.d51 else d6 then if Chain1Base9.M'.d127 then Chain1Base9.M'.d30 else Chain1Base9.M'.d47 else if d3 then Chain1Base9.M'.d35 else p2
        d9 : if False then if True then Bool else Bool else if True then Bool else Bool
        d9 = Chain1Base9.M.d10 (Chain1Base9.M.d62 ((\x10. (\x11. p2 : Bool -> Bool) Chain1Base9.M'.d97 : Bool -> Bool) (if d6 then False else Chain1Base9.M'.d51)))
        d12 : (\x14. if True then x14 else x14 : Type -> Type) (if True then Bool else Bool)
        d12 = (\x13. Chain1Base9.M.d8 (Chain1Base9.M.d42 (if Chain1Base9.M'.d127 then Chain1Base9.M'.d73 else Chain1Base9.M'.d59)) : Bool -> Bool) (if True then False else Chain1Base9.M'.d76)
        d15 : (\x18. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d15 = (\x16. Chain1Base9.M.d10 ((\x17. Chain1Base9.M'.d68 : Bool -> Bool) p1) : Bool -> Bool) (if Chain1Base9.M'.d89 then Chain1Base9.M'.d10 else Chain1Base9.M'.d57)
        d19 : if False then if False then Bool else Bool else if False then Bool else Bool
        d19 = if if Chain1Base9.M'.d116 then p2 else Chain1Base9.M'.d65 then if p1 then Chain1Base9.M'.d6 else d12 else if d9 then Chain1Base9.M'.d38 else d6
        d20 : if True then if False then Bool else Bool else if True then Bool else Bool
        d20 = (\x21. Chain1Base9.M.d112 ((\x22. Chain1Base9.M'.d93 : Bool -> Bool) False) : Bool -> Bool) (if Chain1Base9.M'.d89 then Chain1Base9.M'.d63 else Chain1Base9.M'.d127)
        d23 : if False then if False then Bool else Bool else if False then Bool else Bool
        d23 = Chain1Base9.M.d8 ((\x24. Chain1Base9.M.d70 ((\x25. d6 : Bool -> Bool) False) : Bool -> Bool) (if p2 then Chain1Base9.M'.d93 else Chain1Base9.M'.d51))
        d26 : (\x27. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d26 = if if Chain1Base9.M'.d56 then Chain1Base9.M'.d35 else Chain1Base9.M'.d125 then if p1 then p2 else Chain1Base9.M'.d97 else if d6 then Chain1Base9.M'.d38 else p1
        d28 : if True then if False then Bool else Bool else if False then Bool else Bool
        d28 = (\x29. Chain1Base9.M.d116 (if Chain1Base9.M'.d54 then p2 else d23) : Bool -> Bool) (if True then Chain1Base9.M'.d6 else Chain1Base9.M'.d125)
        d30 : if True then if True then Bool else Bool else if True then Bool else Bool
        d30 = (\x31. if d3 then Chain1Base9.M'.d65 else True : Bool -> Bool) (if Chain1Base9.M'.d30 then d9 else Chain1Base9.M'.d57)
        d32 : if True then if False then Bool else Bool else if False then Bool else Bool
        d32 = if if False then d26 else d6 then if Chain1Base9.M'.d7 then d19 else True else if True then d12 else False
        d33 : if False then if True then Bool else Bool else if False then Bool else Bool
        d33 = Chain1Base9.M.d47 ((\x34. if Chain1Base9.M'.d95 then Chain1Base9.M'.d10 else False : Bool -> Bool) (if Chain1Base9.M'.d95 then Chain1Base9.M'.d95 else d30))
        d35 : (\x37. (\x38. Bool : Type -> Type) x37 : Type -> Type) (if False then Bool else Bool)
        d35 = (\x36. if Chain1Base9.M'.d34 then True else d3 : Bool -> Bool) (if Chain1Base9.M'.d102 then d6 else d20)
        d39 : (\x40. (\x41. Bool : Type -> Type) x40 : Type -> Type) (if True then Bool else Bool)
        d39 = if if p1 then True else d33 then if Chain1Base9.M'.d129 then p1 else p1 else if Chain1Base9.M'.d73 then p2 else Chain1Base9.M'.d54
        d42 : (\x44. (\x45. x44 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d42 = Chain1Base9.M.d125 ((\x43. if Chain1Base9.M'.d122 then d23 else p2 : Bool -> Bool) (if Chain1Base9.M'.d62 then True else Chain1Base9.M'.d35))
        d46 : if True then if True then Bool else Bool else if True then Bool else Bool
        d46 = if if d15 then Chain1Base9.M'.d68 else Chain1Base9.M'.d6 then if d33 then Chain1Base9.M'.d10 else Chain1Base9.M'.d63 else if d26 then Chain1Base9.M'.d19 else Chain1Base9.M'.d99
        d47 : (\x50. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d47 = (\x48. (\x49. d35 : Bool -> Bool) Chain1Base9.M'.d24 : Bool -> Bool) (if p2 then True else True)
        d51 : (\x52. (\x53. x53 : Type -> Type) x52 : Type -> Type) (if False then Bool else Bool)
        d51 = if if Chain1Base9.M'.d102 then p2 else d42 then if p2 then True else d30 else if Chain1Base9.M'.d8 then Chain1Base9.M'.d5 else False
        d54 : if True then if False then Bool else Bool else if False then Bool else Bool
        d54 = if if False then True else Chain1Base9.M'.d89 then if Chain1Base9.M'.d99 then d47 else p1 else if d51 then d35 else Chain1Base9.M'.d99
        d55 : (\x57. (\x58. x57 : Type -> Type) x57 : Type -> Type) (if False then Bool else Bool)
        d55 = (\x56. if p2 then False else Chain1Base9.M'.d50 : Bool -> Bool) (if d6 then p1 else Chain1Base9.M'.d47)
        d59 : if True then if False then Bool else Bool else if False then Bool else Bool
        d59 = Chain1Base9.M.d7 (Chain1Base9.M.d99 (Chain1Base9.M.d125 ((\x60. if Chain1Base9.M'.d2 then Chain1Base9.M'.d70 else Chain1Base9.M'.d10 : Bool -> Bool) (if p1 then Chain1Base9.M'.d2 else Chain1Base9.M'.d63))))
        d61 : if True then if True then Bool else Bool else if False then Bool else Bool
        d61 = if if Chain1Base9.M'.d10 then True else d59 then if p2 then Chain1Base9.M'.d47 else Chain1Base9.M'.d102 else if d55 then Chain1Base9.M'.d127 else Chain1Base9.M'.d85
        d62 : if False then if False then Bool else Bool else if False then Bool else Bool
        d62 = if if True then p2 else p1 then if Chain1Base9.M'.d67 then True else Chain1Base9.M'.d63 else if p2 then p2 else Chain1Base9.M'.d70
        d63 : (\x65. if True then x65 else Bool : Type -> Type) (if True then Bool else Bool)
        d63 = (\x64. Chain1Base9.M.d57 (if True then p1 else d28) : Bool -> Bool) (if p2 then Chain1Base9.M'.d116 else d35)
        d66 : if True then if False then Bool else Bool else if True then Bool else Bool
        d66 = Chain1Base9.M.d47 (Chain1Base9.M.d116 ((\x67. (\x68. True : Bool -> Bool) p1 : Bool -> Bool) (if p1 then Chain1Base9.M'.d105 else d47)))
        d69 : (\x71. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d69 = (\x70. Chain1Base9.M.d67 (Chain1Base9.M.d6 (Chain1Base9.M.d93 (Chain1Base9.M.d2 (Chain1Base9.M.d5 (if False then p2 else Chain1Base9.M'.d7))))) : Bool -> Bool) (if Chain1Base9.M'.d27 then d6 else True)
        d72 : (\x74. (\x75. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d72 = (\x73. Chain1Base9.M.d59 (if d7 then d54 else d35) : Bool -> Bool) (if d59 then True else True)
        d76 : (\x78. (\x79. x79 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d76 = Chain1Base9.M.d65 (Chain1Base9.M.d116 ((\x77. if False then Chain1Base9.M'.d59 else d19 : Bool -> Bool) (if d62 then Chain1Base9.M'.d112 else Chain1Base9.M'.d8)))
        d80 : (\x81. if True then Bool else x81 : Type -> Type) (if False then Bool else Bool)
        d80 = Chain1Base9.M.d70 (Chain1Base9.M.d85 (if if Chain1Base9.M'.d76 then False else Chain1Base9.M'.d5 then if p2 then False else True else if d55 then p1 else d42))
        d82 : (\x84. (\x85. x84 : Type -> Type) x84 : Type -> Type) (if True then Bool else Bool)
        d82 = Chain1Base9.M.d70 (Chain1Base9.M.d8 (Chain1Base9.M.d116 ((\x83. Chain1Base9.M.d5 (if d66 then Chain1Base9.M'.d105 else x83) : Bool -> Bool) (if Chain1Base9.M'.d42 then d55 else Chain1Base9.M'.d122))))
        d86 : (\x87. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d86 = if if Chain1Base9.M'.d112 then p2 else d12 then if Chain1Base9.M'.d65 then Chain1Base9.M'.d129 else Chain1Base9.M'.d47 else if Chain1Base9.M'.d35 then Chain1Base9.M'.d15 else p2
        d88 : if True then if False then Bool else Bool else if True then Bool else Bool
        d88 = Chain1Base9.M.d85 (Chain1Base9.M.d8 ((\x89. (\x90. p2 : Bool -> Bool) p2 : Bool -> Bool) (if d33 then True else Chain1Base9.M'.d10)))
        d91 : if False then if False then Bool else Bool else if True then Bool else Bool
        d91 = Chain1Base9.M.d30 ((\x92. if Chain1Base9.M'.d109 then Chain1Base9.M'.d119 else d55 : Bool -> Bool) (if Chain1Base9.M'.d38 then True else Chain1Base9.M'.d89))
        d93 : if True then if False then Bool else Bool else if False then Bool else Bool
        d93 = Chain1Base9.M.d84 (if if Chain1Base9.M'.d38 then True else False then if True then False else p2 else if d20 then p1 else p1)
        d94 : if True then if False then Bool else Bool else if False then Bool else Bool
        d94 = if if Chain1Base9.M'.d57 then True else d39 then if d82 then p1 else Chain1Base9.M'.d116 else if Chain1Base9.M'.d102 then d33 else p2
        d95 : if True then if False then Bool else Bool else if True then Bool else Bool
        d95 = if if False then d51 else Chain1Base9.M'.d57 then if Chain1Base9.M'.d125 then Chain1Base9.M'.d105 else True else if p1 then True else Chain1Base9.M'.d65
        d96 : (\x99. (\x100. Bool : Type -> Type) x99 : Type -> Type) (if False then Bool else Bool)
        d96 = Chain1Base9.M.d30 (Chain1Base9.M.d57 ((\x97. (\x98. Chain1Base9.M'.d38 : Bool -> Bool) Chain1Base9.M'.d105 : Bool -> Bool) (if p2 then True else Chain1Base9.M'.d116)))
        d101 : (\x102. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d101 = if if p2 then d35 else d62 then if d9 then Chain1Base9.M'.d97 else p1 else if Chain1Base9.M'.d95 then d23 else False
        d103 : if True then if True then Bool else Bool else if False then Bool else Bool
        d103 = Chain1Base9.M.d129 (Chain1Base9.M.d8 (if if False then Chain1Base9.M'.d78 else d62 then if p1 then d69 else False else if d93 then p1 else True))
        d104 : if True then if False then Bool else Bool else if True then Bool else Bool
        d104 = if if p1 then d82 else p1 then if False then Chain1Base9.M'.d5 else p1 else if Chain1Base9.M'.d24 then p1 else True
        d105 : (\x106. (\x107. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d105 = if if d54 then False else True then if Chain1Base9.M'.d50 then Chain1Base9.M'.d127 else d30 else if Chain1Base9.M'.d65 then Chain1Base9.M'.d112 else p2
        d108 : if True then if False then Bool else Bool else if True then Bool else Bool
        d108 = (\x109. (\x110. p2 : Bool -> Bool) p2 : Bool -> Bool) (if d59 then True else d91)
        d111 : (\x114. (\x115. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d111 = (\x112. (\x113. p2 : Bool -> Bool) True : Bool -> Bool) (if Chain1Base9.M'.d84 then Chain1Base9.M'.d42 else True)
        d116 : (\x117. (\x118. x117 : Type -> Type) x117 : Type -> Type) (if True then Bool else Bool)
        d116 = Chain1Base9.M.d97 (if if False then Chain1Base9.M'.d10 else False then if d55 then p2 else Chain1Base9.M'.d30 else if Chain1Base9.M'.d42 then Chain1Base9.M'.d93 else Chain1Base9.M'.d15)
        d119 : (\x120. (\x121. x121 : Type -> Type) x120 : Type -> Type) (if False then Bool else Bool)
        d119 = if if False then p2 else True then if d12 then p2 else d116 else if d91 then True else d35
        d122 : if True then if True then Bool else Bool else if True then Bool else Bool
        d122 = (\x123. if True then True else p2 : Bool -> Bool) (if d88 then Chain1Base9.M'.d6 else p2)
        d124 : if False then if False then Bool else Bool else if False then Bool else Bool
        d124 = Chain1Base9.M.d76 (Chain1Base9.M.d119 ((\x125. Chain1Base9.M.d65 (if p2 then d95 else d108) : Bool -> Bool) (if d72 then Chain1Base9.M'.d56 else Chain1Base9.M'.d80)))
        d126 : if False then if False then Bool else Bool else if True then Bool else Bool
        d126 = (\x127. Chain1Base9.M.d122 ((\x128. Chain1Base9.M'.d105 : Bool -> Bool) p2) : Bool -> Bool) (if False then False else Chain1Base9.M'.d122)