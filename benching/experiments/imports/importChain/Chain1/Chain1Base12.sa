module Chain1Base12 where
    module M(p1: if True then Bool else Bool) where
        d2 : if False then if False then Bool else Bool else if False then Bool else Bool
        d2 = (\x3. if True then p1 else True : Bool -> Bool) (if False then p1 else p1)
        d4 : (\x5. (\x6. x6 : Type -> Type) x5 : Type -> Type) (if True then Bool else Bool)
        d4 = if if p1 then False else d2 then if True then p1 else True else if False then p1 else d2
        d7 : if True then if True then Bool else Bool else if False then Bool else Bool
        d7 = if if True then False else p1 then if d2 then p1 else True else if p1 then False else True
        d8 : if True then if False then Bool else Bool else if True then Bool else Bool
        d8 = (\x9. (\x10. x10 : Bool -> Bool) d4 : Bool -> Bool) (if d7 then d4 else False)
        d11 : if True then if True then Bool else Bool else if False then Bool else Bool
        d11 = (\x12. if True then False else True : Bool -> Bool) (if d7 then d8 else d8)
        d13 : if True then if False then Bool else Bool else if True then Bool else Bool
        d13 = if if True then p1 else p1 then if p1 then p1 else d8 else if d11 then d7 else d8
        d14 : if True then if True then Bool else Bool else if False then Bool else Bool
        d14 = (\x15. (\x16. x16 : Bool -> Bool) False : Bool -> Bool) (if p1 then False else d7)
        d17 : (\x19. if True then Bool else x19 : Type -> Type) (if True then Bool else Bool)
        d17 = (\x18. if d7 then p1 else d2 : Bool -> Bool) (if d8 then p1 else False)
        d20 : (\x21. (\x22. x21 : Type -> Type) x21 : Type -> Type) (if True then Bool else Bool)
        d20 = if if p1 then p1 else False then if False then p1 else p1 else if False then p1 else p1
        d23 : (\x25. if True then Bool else x25 : Type -> Type) (if False then Bool else Bool)
        d23 = (\x24. if d8 then d14 else p1 : Bool -> Bool) (if True then p1 else p1)
        d26 : if False then if False then Bool else Bool else if False then Bool else Bool
        d26 = (\x27. (\x28. x27 : Bool -> Bool) False : Bool -> Bool) (if p1 then p1 else True)
        d29 : if False then if False then Bool else Bool else if False then Bool else Bool
        d29 = if if p1 then p1 else p1 then if p1 then d7 else True else if d26 then p1 else False
        d30 : (\x32. (\x33. Bool : Type -> Type) x32 : Type -> Type) (if True then Bool else Bool)
        d30 = (\x31. if x31 then False else p1 : Bool -> Bool) (if p1 then False else False)
        d34 : (\x37. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d34 = (\x35. (\x36. d11 : Bool -> Bool) p1 : Bool -> Bool) (if False then p1 else d7)
        d38 : if True then if False then Bool else Bool else if True then Bool else Bool
        d38 = (\x39. (\x40. True : Bool -> Bool) True : Bool -> Bool) (if d29 then p1 else True)
        d41 : if False then if True then Bool else Bool else if False then Bool else Bool
        d41 = if if p1 then p1 else d34 then if p1 then d29 else d2 else if True then d14 else True
        d42 : if False then if False then Bool else Bool else if True then Bool else Bool
        d42 = (\x43. (\x44. d13 : Bool -> Bool) d4 : Bool -> Bool) (if d29 then False else p1)
        d45 : (\x46. if False then x46 else x46 : Type -> Type) (if False then Bool else Bool)
        d45 = if if False then False else False then if p1 then d26 else True else if d26 then d34 else p1
        d47 : (\x48. (\x49. Bool : Type -> Type) x48 : Type -> Type) (if False then Bool else Bool)
        d47 = if if d17 then d29 else p1 then if d34 then d30 else p1 else if d4 then d38 else d4
        d50 : (\x51. (\x52. x51 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d50 = if if False then True else p1 then if d42 then d23 else p1 else if p1 then p1 else d13
        d53 : if True then if False then Bool else Bool else if True then Bool else Bool
        d53 = if if d34 then False else False then if p1 then d23 else p1 else if p1 then p1 else False
        d54 : if False then if True then Bool else Bool else if True then Bool else Bool
        d54 = if if d53 then d14 else p1 then if d17 then p1 else d14 else if p1 then False else True
        d55 : (\x58. (\x59. x58 : Type -> Type) x58 : Type -> Type) (if False then Bool else Bool)
        d55 = (\x56. (\x57. d23 : Bool -> Bool) d50 : Bool -> Bool) (if p1 then d4 else p1)
        d60 : (\x61. (\x62. x61 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d60 = if if False then False else False then if True then p1 else p1 else if False then p1 else p1
        d63 : if False then if False then Bool else Bool else if False then Bool else Bool
        d63 = if if True then p1 else False then if d55 then False else p1 else if p1 then True else p1
        d64 : (\x67. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d64 = (\x65. (\x66. False : Bool -> Bool) x65 : Bool -> Bool) (if d23 then False else False)
        d68 : if False then if True then Bool else Bool else if False then Bool else Bool
        d68 = if if p1 then p1 else p1 then if d8 then p1 else d7 else if p1 then p1 else True
        d69 : if True then if True then Bool else Bool else if False then Bool else Bool
        d69 = (\x70. if True then p1 else d20 : Bool -> Bool) (if d45 then d45 else d64)
        d71 : if True then if True then Bool else Bool else if True then Bool else Bool
        d71 = if if d20 then d38 else False then if True then d29 else True else if p1 then p1 else p1
        d72 : if True then if False then Bool else Bool else if False then Bool else Bool
        d72 = if if False then False else p1 then if False then p1 else False else if d45 then d60 else d38
        d73 : (\x74. if False then x74 else x74 : Type -> Type) (if True then Bool else Bool)
        d73 = if if p1 then True else p1 then if p1 then d47 else False else if d14 then p1 else True
        d75 : if False then if True then Bool else Bool else if True then Bool else Bool
        d75 = (\x76. (\x77. p1 : Bool -> Bool) d2 : Bool -> Bool) (if False then False else d42)
        d78 : if True then if True then Bool else Bool else if False then Bool else Bool
        d78 = if if p1 then True else False then if p1 then p1 else d54 else if d63 then True else False
        d79 : if False then if True then Bool else Bool else if False then Bool else Bool
        d79 = if if False then True else d60 then if p1 then p1 else d34 else if d4 then p1 else d73
        d80 : if False then if False then Bool else Bool else if True then Bool else Bool
        d80 = if if d38 then p1 else d75 then if True then d42 else d30 else if d26 then p1 else True
        d81 : if False then if False then Bool else Bool else if False then Bool else Bool
        d81 = (\x82. if d38 then d69 else d20 : Bool -> Bool) (if p1 then p1 else p1)
        d83 : if False then if True then Bool else Bool else if False then Bool else Bool
        d83 = (\x84. (\x85. True : Bool -> Bool) False : Bool -> Bool) (if p1 then p1 else True)
        d86 : if False then if True then Bool else Bool else if True then Bool else Bool
        d86 = if if p1 then d83 else True then if p1 then False else d4 else if False then True else True
        d87 : if True then if False then Bool else Bool else if True then Bool else Bool
        d87 = if if p1 then True else p1 then if False then p1 else False else if p1 then p1 else p1
        d88 : if True then if False then Bool else Bool else if False then Bool else Bool
        d88 = if if d41 then True else p1 then if d75 then False else d26 else if d81 then False else p1
        d89 : (\x90. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d89 = if if False then p1 else d73 then if d45 then False else d14 else if d75 then d8 else p1
        d91 : if False then if True then Bool else Bool else if False then Bool else Bool
        d91 = (\x92. if False then d4 else d55 : Bool -> Bool) (if d72 then True else True)
        d93 : if True then if True then Bool else Bool else if True then Bool else Bool
        d93 = if if d11 then d54 else d26 then if p1 then p1 else p1 else if True then p1 else p1
        d94 : (\x96. if True then x96 else Bool : Type -> Type) (if True then Bool else Bool)
        d94 = (\x95. if x95 then True else False : Bool -> Bool) (if d78 then d79 else d81)
        d97 : if False then if True then Bool else Bool else if True then Bool else Bool
        d97 = (\x98. (\x99. d17 : Bool -> Bool) x98 : Bool -> Bool) (if p1 then d88 else d83)
        d100 : (\x102. (\x103. x102 : Type -> Type) x102 : Type -> Type) (if True then Bool else Bool)
        d100 = (\x101. if True then x101 else x101 : Bool -> Bool) (if p1 then p1 else p1)
        d104 : if True then if False then Bool else Bool else if False then Bool else Bool
        d104 = (\x105. (\x106. x105 : Bool -> Bool) d29 : Bool -> Bool) (if p1 then d80 else d78)
        d107 : if True then if True then Bool else Bool else if False then Bool else Bool
        d107 = if if p1 then d93 else d97 then if p1 then True else p1 else if p1 then False else False
        d108 : if False then if False then Bool else Bool else if True then Bool else Bool
        d108 = if if d107 then False else p1 then if d7 then p1 else True else if p1 then d89 else d26
        d109 : (\x110. if True then x110 else x110 : Type -> Type) (if False then Bool else Bool)
        d109 = if if True then d94 else False then if True then p1 else d55 else if True then p1 else p1
    module M' = M (False) 