module Chain1Base2 where
    module M(p1: if False then Bool else Bool) where
        d2 : (\x3. (\x4. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d2 = if if p1 then True else False then if p1 then p1 else False else if True then False else p1
        d5 : if False then if True then Bool else Bool else if True then Bool else Bool
        d5 = (\x6. (\x7. d2 : Bool -> Bool) d2 : Bool -> Bool) (if p1 then d2 else d2)
        d8 : if False then if True then Bool else Bool else if True then Bool else Bool
        d8 = if if d2 then p1 else p1 then if p1 then p1 else d5 else if p1 then p1 else p1
        d9 : (\x10. if True then x10 else x10 : Type -> Type) (if False then Bool else Bool)
        d9 = if if d2 then p1 else p1 then if p1 then d8 else p1 else if False then True else p1
        d11 : if True then if True then Bool else Bool else if True then Bool else Bool
        d11 = (\x12. if d9 then x12 else d9 : Bool -> Bool) (if p1 then d2 else p1)
        d13 : if False then if False then Bool else Bool else if True then Bool else Bool
        d13 = (\x14. (\x15. d11 : Bool -> Bool) False : Bool -> Bool) (if True then d5 else d8)
        d16 : if True then if True then Bool else Bool else if True then Bool else Bool
        d16 = (\x17. (\x18. p1 : Bool -> Bool) p1 : Bool -> Bool) (if d2 then False else p1)
        d19 : (\x20. (\x21. x21 : Type -> Type) x20 : Type -> Type) (if False then Bool else Bool)
        d19 = if if True then True else True then if True then False else p1 else if False then True else True
        d22 : if True then if True then Bool else Bool else if True then Bool else Bool
        d22 = (\x23. (\x24. d13 : Bool -> Bool) p1 : Bool -> Bool) (if p1 then True else p1)
        d25 : if False then if False then Bool else Bool else if True then Bool else Bool
        d25 = if if p1 then d13 else True then if d11 then False else d9 else if d22 then False else d22
        d26 : (\x29. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d26 = (\x27. (\x28. d2 : Bool -> Bool) p1 : Bool -> Bool) (if False then p1 else d11)
        d30 : if True then if False then Bool else Bool else if False then Bool else Bool
        d30 = (\x31. (\x32. False : Bool -> Bool) x31 : Bool -> Bool) (if d26 then d2 else p1)
        d33 : (\x36. if False then x36 else Bool : Type -> Type) (if False then Bool else Bool)
        d33 = (\x34. (\x35. d16 : Bool -> Bool) x34 : Bool -> Bool) (if d5 then d9 else True)
        d37 : (\x38. if False then Bool else x38 : Type -> Type) (if False then Bool else Bool)
        d37 = if if d5 then p1 else p1 then if d13 then d33 else False else if False then d11 else d11
        d39 : (\x42. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d39 = (\x40. (\x41. True : Bool -> Bool) x40 : Bool -> Bool) (if d9 then False else p1)
        d43 : if False then if True then Bool else Bool else if False then Bool else Bool
        d43 = if if False then d39 else p1 then if True then d13 else p1 else if p1 then d11 else False
        d44 : if True then if False then Bool else Bool else if True then Bool else Bool
        d44 = if if p1 then d13 else p1 then if True then p1 else p1 else if False then True else p1
        d45 : (\x47. if True then Bool else x47 : Type -> Type) (if False then Bool else Bool)
        d45 = (\x46. if False then False else p1 : Bool -> Bool) (if p1 then p1 else True)
        d48 : if False then if False then Bool else Bool else if False then Bool else Bool
        d48 = (\x49. (\x50. False : Bool -> Bool) x49 : Bool -> Bool) (if d30 then d16 else d22)
        d51 : if True then if False then Bool else Bool else if False then Bool else Bool
        d51 = if if p1 then d44 else False then if False then False else d25 else if True then d25 else d33
        d52 : (\x53. (\x54. Bool : Type -> Type) x53 : Type -> Type) (if False then Bool else Bool)
        d52 = if if True then d19 else p1 then if p1 then d26 else d45 else if True then False else d51
        d55 : (\x56. (\x57. x56 : Type -> Type) x56 : Type -> Type) (if True then Bool else Bool)
        d55 = if if p1 then p1 else d13 then if d30 then p1 else p1 else if d22 then d43 else d2
        d58 : if True then if False then Bool else Bool else if True then Bool else Bool
        d58 = if if False then p1 else p1 then if False then p1 else d25 else if d37 then True else p1
        d59 : (\x62. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d59 = (\x60. (\x61. p1 : Bool -> Bool) p1 : Bool -> Bool) (if p1 then p1 else p1)
        d63 : if True then if True then Bool else Bool else if False then Bool else Bool
        d63 = if if p1 then d30 else p1 then if d39 then p1 else False else if d44 then d8 else True
        d64 : if True then if False then Bool else Bool else if True then Bool else Bool
        d64 = (\x65. (\x66. x66 : Bool -> Bool) False : Bool -> Bool) (if p1 then False else d63)
        d67 : (\x68. if True then x68 else x68 : Type -> Type) (if True then Bool else Bool)
        d67 = if if d55 then True else False then if d37 then p1 else False else if True then False else d9
        d69 : (\x70. (\x71. x71 : Type -> Type) x70 : Type -> Type) (if True then Bool else Bool)
        d69 = if if p1 then d59 else p1 then if p1 then p1 else False else if True then d44 else False
        d72 : (\x74. if False then x74 else Bool : Type -> Type) (if False then Bool else Bool)
        d72 = (\x73. if True then p1 else x73 : Bool -> Bool) (if True then p1 else True)
        d75 : (\x76. if True then x76 else Bool : Type -> Type) (if True then Bool else Bool)
        d75 = if if True then p1 else d43 then if d48 then p1 else p1 else if False then p1 else True
        d77 : (\x78. if True then x78 else Bool : Type -> Type) (if False then Bool else Bool)
        d77 = if if p1 then p1 else False then if d30 then p1 else p1 else if p1 then d16 else d75
        d79 : if True then if False then Bool else Bool else if True then Bool else Bool
        d79 = if if p1 then False else p1 then if p1 then d16 else p1 else if p1 then True else True
        d80 : (\x82. if False then Bool else x82 : Type -> Type) (if False then Bool else Bool)
        d80 = (\x81. if p1 then d55 else True : Bool -> Bool) (if p1 then d64 else False)
        d83 : (\x84. (\x85. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d83 = if if p1 then False else False then if d2 then p1 else p1 else if d80 then False else p1
        d86 : (\x87. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d86 = if if True then False else d5 then if p1 then p1 else False else if False then d80 else p1
        d88 : if False then if False then Bool else Bool else if True then Bool else Bool
        d88 = if if True then d26 else d39 then if p1 then d33 else True else if p1 then d55 else d37
        d89 : if True then if False then Bool else Bool else if True then Bool else Bool
        d89 = (\x90. (\x91. d30 : Bool -> Bool) p1 : Bool -> Bool) (if True then d86 else p1)
        d92 : if False then if False then Bool else Bool else if False then Bool else Bool
        d92 = if if d48 then True else d51 then if True then True else p1 else if d86 then d19 else d45
        d93 : (\x94. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d93 = if if p1 then True else d69 then if p1 then False else True else if d77 then True else d83
        d95 : if True then if False then Bool else Bool else if False then Bool else Bool
        d95 = (\x96. if False then p1 else False : Bool -> Bool) (if p1 then p1 else p1)
        d97 : if True then if True then Bool else Bool else if True then Bool else Bool
        d97 = (\x98. (\x99. True : Bool -> Bool) True : Bool -> Bool) (if True then False else True)
        d100 : if False then if True then Bool else Bool else if False then Bool else Bool
        d100 = if if False then d83 else d55 then if d55 then p1 else d33 else if p1 then d44 else d16
        d101 : if True then if False then Bool else Bool else if False then Bool else Bool
        d101 = if if d86 then False else p1 then if p1 then True else p1 else if p1 then d48 else True
        d102 : (\x103. if True then x103 else x103 : Type -> Type) (if False then Bool else Bool)
        d102 = if if d55 then d25 else d59 then if d95 then True else False else if p1 then d67 else d26
        d104 : if False then if False then Bool else Bool else if False then Bool else Bool
        d104 = if if True then d72 else True then if True then False else p1 else if False then p1 else True
        d105 : (\x106. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d105 = if if p1 then p1 else p1 then if p1 then False else d8 else if p1 then d88 else d19
        d107 : if False then if True then Bool else Bool else if True then Bool else Bool
        d107 = if if True then False else d75 then if d72 then d5 else p1 else if d37 then d22 else d9
        d108 : if True then if False then Bool else Bool else if False then Bool else Bool
        d108 = if if True then False else d86 then if p1 then p1 else p1 else if True then d102 else p1
        d109 : (\x111. if True then Bool else x111 : Type -> Type) (if False then Bool else Bool)
        d109 = (\x110. if x110 then x110 else x110 : Bool -> Bool) (if p1 then p1 else d105)
        d112 : if True then if True then Bool else Bool else if True then Bool else Bool
        d112 = if if p1 then d22 else p1 then if d39 then p1 else False else if d9 then True else p1
    module M' = M (True) 