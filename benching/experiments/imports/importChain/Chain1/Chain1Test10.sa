module Chain1Test10 where
    import Chain1Base10
    module M(p1: (\x2. if True then x2 else x2 : Type -> Type) Bool)(p3: (\x4. if False then x4 else Bool : Type -> Type) Bool) where
        d5 : (\x8. if False then x8 else Bool : Type -> Type) (if True then Bool else Bool)
        d5 = (\x6. Chain1Base10.M.d120 (Chain1Base10.M.d50 (Chain1Base10.M.d90 (Chain1Base10.M.d110 ((\x7. Chain1Base10.M'.d83 : Bool -> Bool) x6)))) : Bool -> Bool) (if True then Chain1Base10.M'.d87 else Chain1Base10.M'.d30)
        d9 : (\x12. if False then x12 else Bool : Type -> Type) (if False then Bool else Bool)
        d9 = Chain1Base10.M.d44 ((\x10. Chain1Base10.M.d106 (Chain1Base10.M.d12 (Chain1Base10.M.d119 ((\x11. d5 : Bool -> Bool) d5))) : Bool -> Bool) (if p3 then d5 else d5))
        d13 : (\x14. if True then x14 else x14 : Type -> Type) (if False then Bool else Bool)
        d13 = Chain1Base10.M.d49 (if if p1 then p1 else p1 then if d9 then Chain1Base10.M'.d49 else Chain1Base10.M'.d96 else if Chain1Base10.M'.d89 then Chain1Base10.M'.d48 else d5)
        d15 : if False then if True then Bool else Bool else if False then Bool else Bool
        d15 = if if d13 then p1 else d5 then if p1 then d13 else d9 else if Chain1Base10.M'.d93 then p1 else Chain1Base10.M'.d108
        d16 : (\x19. (\x20. x20 : Type -> Type) x19 : Type -> Type) (if True then Bool else Bool)
        d16 = (\x17. Chain1Base10.M.d5 (Chain1Base10.M.d96 (Chain1Base10.M.d53 (Chain1Base10.M.d26 (Chain1Base10.M.d87 (Chain1Base10.M.d12 ((\x18. p3 : Bool -> Bool) Chain1Base10.M'.d44)))))) : Bool -> Bool) (if d5 then p1 else d13)
        d21 : if True then if False then Bool else Bool else if False then Bool else Bool
        d21 = if if Chain1Base10.M'.d102 then p1 else d16 then if Chain1Base10.M'.d106 then False else Chain1Base10.M'.d77 else if False then Chain1Base10.M'.d22 else False
        d22 : (\x23. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d22 = Chain1Base10.M.d3 (if if Chain1Base10.M'.d43 then True else False then if p3 then p1 else False else if p1 then Chain1Base10.M'.d98 else Chain1Base10.M'.d13)
        d24 : if False then if False then Bool else Bool else if True then Bool else Bool
        d24 = Chain1Base10.M.d50 ((\x25. if d9 then Chain1Base10.M'.d30 else x25 : Bool -> Bool) (if Chain1Base10.M'.d110 then Chain1Base10.M'.d83 else Chain1Base10.M'.d48))
        d26 : if False then if False then Bool else Bool else if True then Bool else Bool
        d26 = Chain1Base10.M.d89 (Chain1Base10.M.d74 (Chain1Base10.M.d42 (if if False then p3 else Chain1Base10.M'.d38 then if d21 then False else Chain1Base10.M'.d13 else if True then Chain1Base10.M'.d120 else Chain1Base10.M'.d26)))
        d27 : if True then if False then Bool else Bool else if False then Bool else Bool
        d27 = if if p1 then Chain1Base10.M'.d44 else Chain1Base10.M'.d35 then if d9 then d13 else d21 else if d16 then d5 else Chain1Base10.M'.d50
        d28 : if True then if True then Bool else Bool else if False then Bool else Bool
        d28 = Chain1Base10.M.d121 (Chain1Base10.M.d35 ((\x29. if d21 then False else Chain1Base10.M'.d38 : Bool -> Bool) (if d26 then Chain1Base10.M'.d9 else Chain1Base10.M'.d62)))
        d30 : (\x31. (\x32. x31 : Type -> Type) x31 : Type -> Type) (if False then Bool else Bool)
        d30 = Chain1Base10.M.d8 (if if Chain1Base10.M'.d70 then p1 else p1 then if p3 then False else Chain1Base10.M'.d8 else if Chain1Base10.M'.d108 then True else Chain1Base10.M'.d66)
        d33 : if False then if True then Bool else Bool else if False then Bool else Bool
        d33 = (\x34. Chain1Base10.M.d8 (Chain1Base10.M.d113 (Chain1Base10.M.d121 (if p1 then True else False))) : Bool -> Bool) (if Chain1Base10.M'.d26 then p1 else p1)
        d35 : if True then if True then Bool else Bool else if True then Bool else Bool
        d35 = Chain1Base10.M.d62 (if if Chain1Base10.M'.d5 then Chain1Base10.M'.d38 else Chain1Base10.M'.d98 then if p3 then p3 else p1 else if d30 then Chain1Base10.M'.d108 else p3)
        d36 : if False then if True then Bool else Bool else if False then Bool else Bool
        d36 = Chain1Base10.M.d22 (Chain1Base10.M.d56 (Chain1Base10.M.d83 (if if Chain1Base10.M'.d89 then Chain1Base10.M'.d89 else Chain1Base10.M'.d22 then if Chain1Base10.M'.d3 then p3 else False else if Chain1Base10.M'.d3 then Chain1Base10.M'.d8 else Chain1Base10.M'.d13)))
        d37 : if True then if False then Bool else Bool else if True then Bool else Bool
        d37 = if if d22 then Chain1Base10.M'.d120 else Chain1Base10.M'.d49 then if Chain1Base10.M'.d49 then Chain1Base10.M'.d23 else Chain1Base10.M'.d116 else if Chain1Base10.M'.d83 then d15 else Chain1Base10.M'.d70
        d38 : (\x40. if False then x40 else x40 : Type -> Type) (if False then Bool else Bool)
        d38 = (\x39. if d13 then Chain1Base10.M'.d76 else p3 : Bool -> Bool) (if p1 then d16 else Chain1Base10.M'.d51)
        d41 : (\x44. (\x45. x45 : Type -> Type) x44 : Type -> Type) (if True then Bool else Bool)
        d41 = Chain1Base10.M.d30 (Chain1Base10.M.d113 ((\x42. Chain1Base10.M.d80 (Chain1Base10.M.d98 (Chain1Base10.M.d77 ((\x43. True : Bool -> Bool) True))) : Bool -> Bool) (if False then d16 else Chain1Base10.M'.d89)))
        d46 : if False then if False then Bool else Bool else if True then Bool else Bool
        d46 = Chain1Base10.M.d69 (Chain1Base10.M.d13 (if if False then Chain1Base10.M'.d3 else False then if p1 then Chain1Base10.M'.d53 else p3 else if True then p3 else Chain1Base10.M'.d35))
        d47 : if True then if True then Bool else Bool else if True then Bool else Bool
        d47 = (\x48. Chain1Base10.M.d110 ((\x49. Chain1Base10.M'.d35 : Bool -> Bool) p1) : Bool -> Bool) (if d15 then Chain1Base10.M'.d121 else Chain1Base10.M'.d71)
        d50 : if True then if True then Bool else Bool else if False then Bool else Bool
        d50 = (\x51. Chain1Base10.M.d116 (if Chain1Base10.M'.d37 then True else Chain1Base10.M'.d74) : Bool -> Bool) (if p3 then Chain1Base10.M'.d77 else p3)
        d52 : if True then if True then Bool else Bool else if False then Bool else Bool
        d52 = Chain1Base10.M.d37 (Chain1Base10.M.d56 (Chain1Base10.M.d17 (if if Chain1Base10.M'.d48 then Chain1Base10.M'.d37 else Chain1Base10.M'.d69 then if d21 then p1 else Chain1Base10.M'.d116 else if False then False else Chain1Base10.M'.d87)))
        d53 : (\x55. (\x56. x56 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d53 = Chain1Base10.M.d50 (Chain1Base10.M.d22 ((\x54. Chain1Base10.M.d74 (if Chain1Base10.M'.d116 then Chain1Base10.M'.d74 else False) : Bool -> Bool) (if Chain1Base10.M'.d69 then False else True)))
        d57 : if True then if True then Bool else Bool else if True then Bool else Bool
        d57 = (\x58. Chain1Base10.M.d9 (Chain1Base10.M.d35 ((\x59. Chain1Base10.M'.d48 : Bool -> Bool) Chain1Base10.M'.d5)) : Bool -> Bool) (if Chain1Base10.M'.d74 then True else Chain1Base10.M'.d26)
        d60 : (\x63. if True then x63 else Bool : Type -> Type) (if False then Bool else Bool)
        d60 = (\x61. Chain1Base10.M.d62 (Chain1Base10.M.d26 ((\x62. Chain1Base10.M'.d56 : Bool -> Bool) p3)) : Bool -> Bool) (if d28 then Chain1Base10.M'.d38 else d37)
        d64 : if False then if True then Bool else Bool else if False then Bool else Bool
        d64 = Chain1Base10.M.d121 (if if p3 then Chain1Base10.M'.d90 else False then if Chain1Base10.M'.d71 then p1 else Chain1Base10.M'.d50 else if True then Chain1Base10.M'.d96 else Chain1Base10.M'.d43)
        d65 : (\x67. if False then x67 else x67 : Type -> Type) (if False then Bool else Bool)
        d65 = (\x66. if Chain1Base10.M'.d49 then x66 else p3 : Bool -> Bool) (if d5 then d15 else p3)
        d68 : if False then if False then Bool else Bool else if False then Bool else Bool
        d68 = Chain1Base10.M.d37 (Chain1Base10.M.d69 (Chain1Base10.M.d30 (Chain1Base10.M.d53 ((\x69. Chain1Base10.M.d51 (Chain1Base10.M.d113 ((\x70. Chain1Base10.M'.d8 : Bool -> Bool) True)) : Bool -> Bool) (if Chain1Base10.M'.d108 then Chain1Base10.M'.d5 else p3)))))
        d71 : (\x72. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d71 = Chain1Base10.M.d110 (if if Chain1Base10.M'.d82 then d52 else p1 then if p3 then Chain1Base10.M'.d70 else Chain1Base10.M'.d90 else if True then True else p3)
        d73 : if True then if False then Bool else Bool else if True then Bool else Bool
        d73 = if if Chain1Base10.M'.d80 then False else p1 then if Chain1Base10.M'.d56 then d36 else p1 else if p3 then Chain1Base10.M'.d80 else Chain1Base10.M'.d51
        d74 : (\x77. (\x78. x77 : Type -> Type) x77 : Type -> Type) (if True then Bool else Bool)
        d74 = Chain1Base10.M.d8 ((\x75. (\x76. x75 : Bool -> Bool) Chain1Base10.M'.d56 : Bool -> Bool) (if Chain1Base10.M'.d98 then Chain1Base10.M'.d90 else True))
        d79 : (\x82. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d79 = (\x80. Chain1Base10.M.d89 ((\x81. p3 : Bool -> Bool) Chain1Base10.M'.d38) : Bool -> Bool) (if Chain1Base10.M'.d116 then Chain1Base10.M'.d74 else Chain1Base10.M'.d37)
        d83 : if True then if True then Bool else Bool else if False then Bool else Bool
        d83 = (\x84. (\x85. True : Bool -> Bool) False : Bool -> Bool) (if Chain1Base10.M'.d42 then True else p1)
        d86 : if True then if True then Bool else Bool else if False then Bool else Bool
        d86 = Chain1Base10.M.d102 (Chain1Base10.M.d96 (if if d9 then True else d46 then if True then d68 else True else if Chain1Base10.M'.d87 then Chain1Base10.M'.d93 else p1))
        d87 : (\x89. (\x90. x90 : Type -> Type) x89 : Type -> Type) (if False then Bool else Bool)
        d87 = Chain1Base10.M.d98 (Chain1Base10.M.d9 (Chain1Base10.M.d23 ((\x88. Chain1Base10.M.d22 (Chain1Base10.M.d69 (if p3 then False else Chain1Base10.M'.d90)) : Bool -> Bool) (if d86 then False else p1))))
        d91 : (\x92. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d91 = if if False then d33 else Chain1Base10.M'.d87 then if Chain1Base10.M'.d56 then d24 else True else if True then Chain1Base10.M'.d71 else Chain1Base10.M'.d17
        d93 : if False then if False then Bool else Bool else if False then Bool else Bool
        d93 = (\x94. if x94 then d35 else Chain1Base10.M'.d3 : Bool -> Bool) (if d41 then Chain1Base10.M'.d110 else Chain1Base10.M'.d59)
        d95 : (\x97. if True then x97 else x97 : Type -> Type) (if False then Bool else Bool)
        d95 = Chain1Base10.M.d113 ((\x96. Chain1Base10.M.d116 (Chain1Base10.M.d98 (if x96 then d36 else True)) : Bool -> Bool) (if d9 then Chain1Base10.M'.d71 else d71))
        d98 : if True then if False then Bool else Bool else if True then Bool else Bool
        d98 = Chain1Base10.M.d17 (if if False then Chain1Base10.M'.d22 else Chain1Base10.M'.d62 then if Chain1Base10.M'.d69 then True else d9 else if Chain1Base10.M'.d35 then d22 else Chain1Base10.M'.d106)
        d99 : if True then if True then Bool else Bool else if False then Bool else Bool
        d99 = (\x100. if d91 then True else Chain1Base10.M'.d26 : Bool -> Bool) (if Chain1Base10.M'.d8 then False else Chain1Base10.M'.d44)
        d101 : if True then if False then Bool else Bool else if False then Bool else Bool
        d101 = Chain1Base10.M.d82 ((\x102. Chain1Base10.M.d22 (if Chain1Base10.M'.d80 then d68 else Chain1Base10.M'.d38) : Bool -> Bool) (if Chain1Base10.M'.d76 then Chain1Base10.M'.d106 else Chain1Base10.M'.d23))
        d103 : if True then if True then Bool else Bool else if True then Bool else Bool
        d103 = (\x104. if Chain1Base10.M'.d43 then Chain1Base10.M'.d42 else Chain1Base10.M'.d69 : Bool -> Bool) (if Chain1Base10.M'.d76 then Chain1Base10.M'.d90 else Chain1Base10.M'.d43)
        d105 : if False then if False then Bool else Bool else if True then Bool else Bool
        d105 = (\x106. Chain1Base10.M.d26 ((\x107. d103 : Bool -> Bool) False) : Bool -> Bool) (if p3 then False else Chain1Base10.M'.d89)
        d108 : if False then if False then Bool else Bool else if True then Bool else Bool
        d108 = Chain1Base10.M.d12 (Chain1Base10.M.d42 ((\x109. (\x110. Chain1Base10.M'.d96 : Bool -> Bool) p3 : Bool -> Bool) (if False then p1 else Chain1Base10.M'.d98)))
        d111 : (\x112. (\x113. x112 : Type -> Type) x112 : Type -> Type) (if False then Bool else Bool)
        d111 = Chain1Base10.M.d37 (if if Chain1Base10.M'.d49 then Chain1Base10.M'.d96 else Chain1Base10.M'.d8 then if False then p1 else d50 else if p1 then d27 else False)
        d114 : if True then if True then Bool else Bool else if False then Bool else Bool
        d114 = Chain1Base10.M.d8 (if if d60 then d111 else Chain1Base10.M'.d121 then if Chain1Base10.M'.d53 then False else d41 else if d35 then Chain1Base10.M'.d38 else Chain1Base10.M'.d53)
        d115 : (\x117. if True then Bool else x117 : Type -> Type) (if False then Bool else Bool)
        d115 = Chain1Base10.M.d80 ((\x116. Chain1Base10.M.d9 (Chain1Base10.M.d62 (Chain1Base10.M.d3 (if p3 then True else Chain1Base10.M'.d76))) : Bool -> Bool) (if p1 then p1 else d41))
        d118 : if True then if True then Bool else Bool else if False then Bool else Bool
        d118 = Chain1Base10.M.d44 (Chain1Base10.M.d9 (Chain1Base10.M.d22 (if if False then Chain1Base10.M'.d30 else True then if Chain1Base10.M'.d119 then Chain1Base10.M'.d44 else False else if d99 then d93 else p3)))
        d119 : if False then if True then Bool else Bool else if True then Bool else Bool
        d119 = if if p1 then d41 else p1 then if p3 then False else d114 else if Chain1Base10.M'.d102 then p3 else p3
        d120 : if False then if False then Bool else Bool else if False then Bool else Bool
        d120 = if if True then Chain1Base10.M'.d53 else d74 then if Chain1Base10.M'.d119 then True else Chain1Base10.M'.d93 else if Chain1Base10.M'.d83 then d87 else p3