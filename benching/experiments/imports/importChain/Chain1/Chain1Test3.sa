module Chain1Test3 where
    import Chain1Base3
    module M(p1: if False then Bool else Bool)(p2: (\x3. if False then x3 else Bool : Type -> Type) Bool) where
        d4 : (\x6. if False then Bool else x6 : Type -> Type) (if False then Bool else Bool)
        d4 = Chain1Base3.M.d3 (Chain1Base3.M.d108 (Chain1Base3.M.d19 (Chain1Base3.M.d50 ((\x5. Chain1Base3.M.d108 (if False then p1 else Chain1Base3.M'.d86) : Bool -> Bool) (if False then Chain1Base3.M'.d43 else p2)))))
        d7 : (\x9. if True then x9 else Bool : Type -> Type) (if True then Bool else Bool)
        d7 = Chain1Base3.M.d34 ((\x8. Chain1Base3.M.d82 (Chain1Base3.M.d17 (if False then d4 else d4)) : Bool -> Bool) (if Chain1Base3.M'.d75 then d4 else d4))
        d10 : if True then if False then Bool else Bool else if False then Bool else Bool
        d10 = if if d4 then d4 else d4 then if d4 then Chain1Base3.M'.d75 else d4 else if d7 then Chain1Base3.M'.d75 else Chain1Base3.M'.d66
        d11 : if True then if False then Bool else Bool else if False then Bool else Bool
        d11 = Chain1Base3.M.d115 ((\x12. (\x13. d7 : Bool -> Bool) True : Bool -> Bool) (if Chain1Base3.M'.d71 then True else False))
        d14 : (\x15. (\x16. x15 : Type -> Type) x15 : Type -> Type) (if True then Bool else Bool)
        d14 = Chain1Base3.M.d28 (Chain1Base3.M.d108 (if if False then True else Chain1Base3.M'.d111 then if True then d7 else True else if True then Chain1Base3.M'.d42 else Chain1Base3.M'.d103))
        d17 : if False then if True then Bool else Bool else if True then Bool else Bool
        d17 = if if False then p1 else False then if Chain1Base3.M'.d68 then d10 else d4 else if Chain1Base3.M'.d115 then p1 else d4
        d18 : (\x21. if False then x21 else x21 : Type -> Type) (if False then Bool else Bool)
        d18 = (\x19. Chain1Base3.M.d32 ((\x20. Chain1Base3.M'.d46 : Bool -> Bool) Chain1Base3.M'.d32) : Bool -> Bool) (if p1 then p1 else True)
        d22 : (\x23. if False then x23 else Bool : Type -> Type) (if True then Bool else Bool)
        d22 = Chain1Base3.M.d108 (if if d17 then p1 else True then if d18 then d10 else Chain1Base3.M'.d76 else if p2 then Chain1Base3.M'.d23 else True)
        d24 : if True then if False then Bool else Bool else if True then Bool else Bool
        d24 = if if Chain1Base3.M'.d3 then d11 else Chain1Base3.M'.d89 then if Chain1Base3.M'.d86 then False else False else if d10 then True else p1
        d25 : if False then if True then Bool else Bool else if False then Bool else Bool
        d25 = if if False then p2 else True then if Chain1Base3.M'.d108 then d10 else False else if Chain1Base3.M'.d23 then d10 else Chain1Base3.M'.d17
        d26 : if True then if True then Bool else Bool else if True then Bool else Bool
        d26 = if if Chain1Base3.M'.d41 then Chain1Base3.M'.d93 else p1 then if Chain1Base3.M'.d44 then p1 else Chain1Base3.M'.d76 else if Chain1Base3.M'.d118 then False else p2
        d27 : if True then if False then Bool else Bool else if False then Bool else Bool
        d27 = if if Chain1Base3.M'.d80 then Chain1Base3.M'.d71 else p1 then if Chain1Base3.M'.d62 then Chain1Base3.M'.d10 else p2 else if False then d4 else Chain1Base3.M'.d50
        d28 : if True then if True then Bool else Bool else if True then Bool else Bool
        d28 = if if True then Chain1Base3.M'.d19 else Chain1Base3.M'.d103 then if d11 then p1 else d11 else if p2 then p1 else Chain1Base3.M'.d44
        d29 : if False then if True then Bool else Bool else if False then Bool else Bool
        d29 = if if Chain1Base3.M'.d112 then True else True then if True then d7 else Chain1Base3.M'.d105 else if Chain1Base3.M'.d23 then p1 else p1
        d30 : if True then if False then Bool else Bool else if True then Bool else Bool
        d30 = Chain1Base3.M.d71 (if if d17 then p1 else Chain1Base3.M'.d72 then if d10 then p2 else Chain1Base3.M'.d80 else if p1 then d10 else False)
        d31 : (\x34. if False then x34 else x34 : Type -> Type) (if True then Bool else Bool)
        d31 = Chain1Base3.M.d86 (Chain1Base3.M.d31 (Chain1Base3.M.d17 ((\x32. (\x33. Chain1Base3.M'.d89 : Bool -> Bool) d27 : Bool -> Bool) (if p2 then p2 else Chain1Base3.M'.d105))))
        d35 : if True then if False then Bool else Bool else if True then Bool else Bool
        d35 = (\x36. Chain1Base3.M.d111 (Chain1Base3.M.d43 (if d27 then Chain1Base3.M'.d23 else Chain1Base3.M'.d22)) : Bool -> Bool) (if p2 then Chain1Base3.M'.d22 else Chain1Base3.M'.d82)
        d37 : if False then if False then Bool else Bool else if True then Bool else Bool
        d37 = (\x38. Chain1Base3.M.d118 (if p2 then p1 else False) : Bool -> Bool) (if Chain1Base3.M'.d23 then Chain1Base3.M'.d42 else p1)
        d39 : if True then if False then Bool else Bool else if False then Bool else Bool
        d39 = (\x40. if Chain1Base3.M'.d118 then p2 else p1 : Bool -> Bool) (if Chain1Base3.M'.d80 then Chain1Base3.M'.d108 else p2)
        d41 : (\x44. (\x45. x45 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d41 = (\x42. Chain1Base3.M.d111 (Chain1Base3.M.d3 (Chain1Base3.M.d69 (Chain1Base3.M.d80 (Chain1Base3.M.d75 (Chain1Base3.M.d49 (Chain1Base3.M.d82 (Chain1Base3.M.d80 ((\x43. False : Bool -> Bool) Chain1Base3.M'.d68)))))))) : Bool -> Bool) (if d28 then Chain1Base3.M'.d44 else False)
        d46 : if True then if False then Bool else Bool else if True then Bool else Bool
        d46 = Chain1Base3.M.d66 ((\x47. if True then Chain1Base3.M'.d32 else Chain1Base3.M'.d81 : Bool -> Bool) (if Chain1Base3.M'.d65 then Chain1Base3.M'.d59 else Chain1Base3.M'.d112))
        d48 : if False then if False then Bool else Bool else if True then Bool else Bool
        d48 = Chain1Base3.M.d34 (if if Chain1Base3.M'.d41 then d10 else p1 then if p2 then p2 else Chain1Base3.M'.d56 else if True then Chain1Base3.M'.d118 else Chain1Base3.M'.d14)
        d49 : (\x51. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d49 = Chain1Base3.M.d98 (Chain1Base3.M.d34 (Chain1Base3.M.d71 ((\x50. Chain1Base3.M.d5 (Chain1Base3.M.d86 (Chain1Base3.M.d19 (Chain1Base3.M.d28 (if False then p2 else p1)))) : Bool -> Bool) (if p2 then p1 else Chain1Base3.M'.d53))))
        d52 : (\x53. if True then x53 else x53 : Type -> Type) (if True then Bool else Bool)
        d52 = if if Chain1Base3.M'.d22 then Chain1Base3.M'.d35 else Chain1Base3.M'.d31 then if True then True else p1 else if p2 then d17 else Chain1Base3.M'.d65
        d54 : if False then if True then Bool else Bool else if True then Bool else Bool
        d54 = (\x55. (\x56. False : Bool -> Bool) d27 : Bool -> Bool) (if Chain1Base3.M'.d118 then Chain1Base3.M'.d75 else d4)
        d57 : (\x58. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d57 = if if d52 then d30 else p2 then if Chain1Base3.M'.d76 then False else Chain1Base3.M'.d20 else if Chain1Base3.M'.d65 then Chain1Base3.M'.d38 else d11
        d59 : (\x62. if True then x62 else Bool : Type -> Type) (if False then Bool else Bool)
        d59 = (\x60. (\x61. True : Bool -> Bool) p2 : Bool -> Bool) (if True then p2 else Chain1Base3.M'.d60)
        d63 : (\x65. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d63 = (\x64. if Chain1Base3.M'.d111 then d4 else x64 : Bool -> Bool) (if p1 then d28 else Chain1Base3.M'.d42)
        d66 : (\x67. if True then Bool else x67 : Type -> Type) (if False then Bool else Bool)
        d66 = Chain1Base3.M.d68 (if if Chain1Base3.M'.d72 then Chain1Base3.M'.d43 else Chain1Base3.M'.d62 then if True then Chain1Base3.M'.d71 else Chain1Base3.M'.d115 else if Chain1Base3.M'.d89 then Chain1Base3.M'.d82 else Chain1Base3.M'.d19)
        d68 : (\x69. (\x70. x70 : Type -> Type) x69 : Type -> Type) (if False then Bool else Bool)
        d68 = if if d39 then p1 else True then if Chain1Base3.M'.d66 then Chain1Base3.M'.d14 else Chain1Base3.M'.d66 else if True then True else p2
        d71 : if False then if True then Bool else Bool else if False then Bool else Bool
        d71 = Chain1Base3.M.d66 (Chain1Base3.M.d19 (Chain1Base3.M.d50 (if if p1 then Chain1Base3.M'.d49 else Chain1Base3.M'.d86 then if d17 then Chain1Base3.M'.d93 else Chain1Base3.M'.d19 else if Chain1Base3.M'.d72 then Chain1Base3.M'.d20 else Chain1Base3.M'.d42)))
        d72 : if True then if True then Bool else Bool else if False then Bool else Bool
        d72 = (\x73. if d39 then x73 else p2 : Bool -> Bool) (if p1 then Chain1Base3.M'.d20 else p2)
        d74 : (\x75. if False then x75 else Bool : Type -> Type) (if True then Bool else Bool)
        d74 = Chain1Base3.M.d62 (if if Chain1Base3.M'.d66 then d68 else Chain1Base3.M'.d89 then if True then d63 else True else if Chain1Base3.M'.d22 then p2 else Chain1Base3.M'.d59)
        d76 : (\x79. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d76 = (\x77. Chain1Base3.M.d92 ((\x78. p2 : Bool -> Bool) x77) : Bool -> Bool) (if Chain1Base3.M'.d22 then d18 else Chain1Base3.M'.d14)
        d80 : if False then if True then Bool else Bool else if False then Bool else Bool
        d80 = (\x81. Chain1Base3.M.d46 ((\x82. False : Bool -> Bool) x81) : Bool -> Bool) (if Chain1Base3.M'.d82 then True else Chain1Base3.M'.d92)
        d83 : if False then if True then Bool else Bool else if True then Bool else Bool
        d83 = (\x84. (\x85. p2 : Bool -> Bool) False : Bool -> Bool) (if p2 then Chain1Base3.M'.d32 else Chain1Base3.M'.d82)
        d86 : (\x87. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d86 = if if d57 then False else p2 then if Chain1Base3.M'.d23 then d57 else p2 else if p1 then Chain1Base3.M'.d68 else True
        d88 : (\x91. if False then x91 else Bool : Type -> Type) (if True then Bool else Bool)
        d88 = Chain1Base3.M.d98 ((\x89. Chain1Base3.M.d35 (Chain1Base3.M.d35 (Chain1Base3.M.d89 (Chain1Base3.M.d108 ((\x90. Chain1Base3.M'.d80 : Bool -> Bool) False)))) : Bool -> Bool) (if Chain1Base3.M'.d22 then p1 else d54))
        d92 : (\x95. (\x96. x96 : Type -> Type) x95 : Type -> Type) (if False then Bool else Bool)
        d92 = Chain1Base3.M.d43 (Chain1Base3.M.d32 ((\x93. Chain1Base3.M.d65 ((\x94. d52 : Bool -> Bool) True) : Bool -> Bool) (if False then True else Chain1Base3.M'.d14)))
        d97 : (\x98. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d97 = if if p2 then Chain1Base3.M'.d38 else True then if d86 then p1 else Chain1Base3.M'.d50 else if Chain1Base3.M'.d3 then d63 else p2
        d99 : (\x101. (\x102. Bool : Type -> Type) x101 : Type -> Type) (if False then Bool else Bool)
        d99 = Chain1Base3.M.d38 ((\x100. Chain1Base3.M.d82 (Chain1Base3.M.d81 (if Chain1Base3.M'.d75 then True else Chain1Base3.M'.d71)) : Bool -> Bool) (if d63 then Chain1Base3.M'.d89 else Chain1Base3.M'.d108))
        d103 : (\x104. (\x105. Bool : Type -> Type) x104 : Type -> Type) (if True then Bool else Bool)
        d103 = Chain1Base3.M.d111 (Chain1Base3.M.d80 (Chain1Base3.M.d20 (Chain1Base3.M.d103 (Chain1Base3.M.d32 (Chain1Base3.M.d38 (if if False then Chain1Base3.M'.d31 else Chain1Base3.M'.d111 then if True then p2 else False else if d68 then d25 else p2))))))
        d106 : if True then if True then Bool else Bool else if True then Bool else Bool
        d106 = if if Chain1Base3.M'.d22 then Chain1Base3.M'.d82 else False then if True then True else Chain1Base3.M'.d81 else if Chain1Base3.M'.d5 then Chain1Base3.M'.d111 else Chain1Base3.M'.d44
        d107 : (\x108. (\x109. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d107 = if if False then False else Chain1Base3.M'.d42 then if Chain1Base3.M'.d53 then True else Chain1Base3.M'.d75 else if d41 then d66 else True
        d110 : if True then if True then Bool else Bool else if True then Bool else Bool
        d110 = Chain1Base3.M.d20 ((\x111. Chain1Base3.M.d34 (Chain1Base3.M.d86 ((\x112. False : Bool -> Bool) d72)) : Bool -> Bool) (if Chain1Base3.M'.d60 then Chain1Base3.M'.d82 else d80))
        d113 : (\x115. (\x116. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d113 = (\x114. if True then Chain1Base3.M'.d81 else d10 : Bool -> Bool) (if p1 then True else True)
        d117 : (\x120. if False then Bool else x120 : Type -> Type) (if True then Bool else Bool)
        d117 = Chain1Base3.M.d59 ((\x118. Chain1Base3.M.d17 (Chain1Base3.M.d46 (Chain1Base3.M.d19 (Chain1Base3.M.d5 ((\x119. Chain1Base3.M'.d71 : Bool -> Bool) p1)))) : Bool -> Bool) (if False then p1 else False))
        d121 : (\x123. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d121 = (\x122. Chain1Base3.M.d112 (Chain1Base3.M.d60 (Chain1Base3.M.d105 (if Chain1Base3.M'.d49 then False else p2))) : Bool -> Bool) (if d83 then p1 else Chain1Base3.M'.d23)
        d124 : if False then if False then Bool else Bool else if False then Bool else Bool
        d124 = Chain1Base3.M.d81 (if if p2 then Chain1Base3.M'.d3 else p2 then if d14 then Chain1Base3.M'.d41 else d29 else if True then Chain1Base3.M'.d31 else d7)
        d125 : (\x128. (\x129. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d125 = Chain1Base3.M.d5 ((\x126. Chain1Base3.M.d10 ((\x127. True : Bool -> Bool) d49) : Bool -> Bool) (if d66 then Chain1Base3.M'.d41 else Chain1Base3.M'.d53))