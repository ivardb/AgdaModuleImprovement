module Chain3Base3 where
    module M(p1: (\x2. if True then x2 else Bool : Type -> Type) Bool)(p3: (\x4. if True then x4 else x4 : Type -> Type) Bool)(p5: if False then Bool else Bool) where
        d6 : (\x7. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d6 = if if p1 then p3 else False then if True then True else False else if False then p5 else p1
        d8 : (\x9. if False then x9 else x9 : Type -> Type) (if True then Bool else Bool)
        d8 = if if d6 then True else True then if False then False else False else if True then p3 else True
        d10 : (\x11. (\x12. x11 : Type -> Type) x11 : Type -> Type) (if True then Bool else Bool)
        d10 = if if d6 then p3 else False then if p3 then p3 else p1 else if d8 then p1 else p3
        d13 : if False then if True then Bool else Bool else if False then Bool else Bool
        d13 = if if True then False else p5 then if p3 then p1 else p3 else if d6 then d8 else p3
        d14 : if False then if False then Bool else Bool else if False then Bool else Bool
        d14 = if if True then d6 else p1 then if p5 then d10 else p1 else if p5 then d10 else d8
        d15 : if True then if True then Bool else Bool else if False then Bool else Bool
        d15 = (\x16. if d10 then x16 else d10 : Bool -> Bool) (if True then d6 else False)
        d17 : if True then if False then Bool else Bool else if True then Bool else Bool
        d17 = if if p1 then d15 else d15 then if True then d14 else d15 else if d13 then p5 else True
        d18 : (\x19. if True then x19 else x19 : Type -> Type) (if True then Bool else Bool)
        d18 = if if False then d13 else True then if p5 then False else True else if p5 then True else p5
        d20 : (\x21. if True then x21 else Bool : Type -> Type) (if False then Bool else Bool)
        d20 = if if d18 then d10 else True then if d18 then p5 else p1 else if True then True else False
        d22 : (\x23. if True then x23 else Bool : Type -> Type) (if True then Bool else Bool)
        d22 = if if p5 then False else False then if p1 then False else d17 else if d15 then d14 else True
        d24 : (\x25. (\x26. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d24 = if if True then p3 else p5 then if d18 then d22 else d17 else if d20 then True else False
        d27 : if False then if True then Bool else Bool else if False then Bool else Bool
        d27 = (\x28. if d6 then d22 else False : Bool -> Bool) (if p1 then True else d20)
        d29 : if True then if False then Bool else Bool else if True then Bool else Bool
        d29 = if if True then d24 else p1 then if p5 then d6 else p5 else if p1 then True else p3
        d30 : (\x33. (\x34. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d30 = (\x31. (\x32. x32 : Bool -> Bool) d18 : Bool -> Bool) (if p3 then p1 else d18)
        d35 : if False then if False then Bool else Bool else if True then Bool else Bool
        d35 = (\x36. (\x37. True : Bool -> Bool) p1 : Bool -> Bool) (if True then p5 else p5)
        d38 : (\x39. (\x40. Bool : Type -> Type) x39 : Type -> Type) (if True then Bool else Bool)
        d38 = if if d24 then True else d10 then if d15 then p5 else True else if False then p5 else True
        d41 : (\x43. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d41 = (\x42. if False then d6 else d17 : Bool -> Bool) (if d24 then False else False)
        d44 : if False then if False then Bool else Bool else if False then Bool else Bool
        d44 = (\x45. (\x46. False : Bool -> Bool) p5 : Bool -> Bool) (if d22 then d15 else d35)
        d47 : (\x49. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d47 = (\x48. if False then p3 else d10 : Bool -> Bool) (if p5 then p5 else d15)
        d50 : (\x53. if False then x53 else Bool : Type -> Type) (if True then Bool else Bool)
        d50 = (\x51. (\x52. False : Bool -> Bool) p3 : Bool -> Bool) (if p1 then p5 else p1)
        d54 : (\x57. if True then Bool else x57 : Type -> Type) (if False then Bool else Bool)
        d54 = (\x55. (\x56. d41 : Bool -> Bool) d15 : Bool -> Bool) (if p1 then True else p1)
        d58 : if False then if False then Bool else Bool else if True then Bool else Bool
        d58 = if if d38 then p1 else p5 then if d18 then False else p5 else if True then d27 else d13
        d59 : if True then if False then Bool else Bool else if False then Bool else Bool
        d59 = if if p1 then True else d22 then if d38 then d13 else p1 else if d6 then p1 else d47
        d60 : if True then if False then Bool else Bool else if False then Bool else Bool
        d60 = (\x61. if d54 then False else d50 : Bool -> Bool) (if p5 then p1 else False)
        d62 : (\x63. if True then Bool else x63 : Type -> Type) (if False then Bool else Bool)
        d62 = if if p5 then True else d44 then if p5 then p5 else d58 else if p5 then False else p1
        d64 : if True then if False then Bool else Bool else if True then Bool else Bool
        d64 = (\x65. (\x66. True : Bool -> Bool) True : Bool -> Bool) (if p3 then True else p1)
        d67 : if True then if False then Bool else Bool else if True then Bool else Bool
        d67 = if if d38 then p3 else False then if d20 then False else False else if p1 then d60 else p3
        d68 : if True then if True then Bool else Bool else if True then Bool else Bool
        d68 = (\x69. (\x70. True : Bool -> Bool) True : Bool -> Bool) (if p5 then True else True)
        d71 : (\x74. if False then x74 else x74 : Type -> Type) (if False then Bool else Bool)
        d71 = (\x72. (\x73. d35 : Bool -> Bool) d44 : Bool -> Bool) (if d29 then p3 else d29)
        d75 : if False then if True then Bool else Bool else if True then Bool else Bool
        d75 = (\x76. if p3 then p3 else d68 : Bool -> Bool) (if d59 then p3 else p3)
        d77 : if False then if True then Bool else Bool else if False then Bool else Bool
        d77 = (\x78. (\x79. p1 : Bool -> Bool) True : Bool -> Bool) (if p3 then False else True)
        d80 : (\x81. (\x82. x81 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d80 = if if d67 then p3 else p5 then if False then d20 else True else if True then True else False
        d83 : if True then if True then Bool else Bool else if True then Bool else Bool
        d83 = if if p3 then d60 else True then if d29 then True else False else if True then p3 else p1
        d84 : (\x85. if True then x85 else Bool : Type -> Type) (if False then Bool else Bool)
        d84 = if if True then False else False then if p3 then p3 else p5 else if p3 then False else d83
        d86 : if True then if True then Bool else Bool else if False then Bool else Bool
        d86 = (\x87. if d80 then d67 else p1 : Bool -> Bool) (if p5 then False else d80)
        d88 : if False then if True then Bool else Bool else if True then Bool else Bool
        d88 = (\x89. if p3 then d18 else d64 : Bool -> Bool) (if p3 then True else d64)
        d90 : (\x92. (\x93. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d90 = (\x91. if d10 then x91 else p5 : Bool -> Bool) (if d29 then p3 else d50)
        d94 : if True then if False then Bool else Bool else if False then Bool else Bool
        d94 = if if False then True else d8 then if p3 then d41 else False else if True then False else d38
        d95 : if False then if False then Bool else Bool else if False then Bool else Bool
        d95 = (\x96. if False then d84 else False : Bool -> Bool) (if True then d59 else True)
        d97 : if True then if True then Bool else Bool else if False then Bool else Bool
        d97 = if if True then True else False then if d22 then True else d22 else if p5 then d77 else d80
        d98 : if False then if True then Bool else Bool else if True then Bool else Bool
        d98 = if if False then p1 else True then if p1 then True else p1 else if p1 then False else True
        d99 : (\x102. (\x103. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d99 = (\x100. (\x101. True : Bool -> Bool) x100 : Bool -> Bool) (if p5 then d67 else True)
        d104 : if False then if True then Bool else Bool else if False then Bool else Bool
        d104 = if if d50 then False else False then if p5 then d62 else d35 else if d58 then d64 else False
        d105 : if False then if False then Bool else Bool else if False then Bool else Bool
        d105 = if if p3 then True else p1 then if p5 then d18 else d18 else if d104 then p3 else d47
        d106 : if True then if True then Bool else Bool else if True then Bool else Bool
        d106 = if if True then False else p3 then if d47 then d84 else p3 else if p5 then p1 else p1
        d107 : if True then if False then Bool else Bool else if False then Bool else Bool
        d107 = (\x108. if d60 then d30 else d29 : Bool -> Bool) (if True then p1 else False)
        d109 : (\x110. if False then x110 else x110 : Type -> Type) (if True then Bool else Bool)
        d109 = if if False then p3 else False then if d98 then d27 else d107 else if p3 then p5 else True
        d111 : (\x112. if False then Bool else x112 : Type -> Type) (if False then Bool else Bool)
        d111 = if if False then d6 else d94 then if p5 then d94 else p1 else if d88 then d17 else True
        d113 : (\x114. if False then x114 else Bool : Type -> Type) (if False then Bool else Bool)
        d113 = if if d18 then d106 else False then if d107 then True else p5 else if p3 then True else p5
        d115 : (\x116. if False then x116 else x116 : Type -> Type) (if False then Bool else Bool)
        d115 = if if p3 then False else True then if p5 then d105 else True else if d95 then p5 else True
    module M' = M (False) 