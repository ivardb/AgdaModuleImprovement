module Chain3Test9 where
    import Chain3Step29
    module M(p1: if False then Bool else Bool)(p2: if True then Bool else Bool) where
        d3 : (\x6. if False then Bool else x6 : Type -> Type) (if True then Bool else Bool)
        d3 = (\x4. (\x5. x4 : Bool -> Bool) Chain3Step29.M'.d125 : Bool -> Bool) (if True then Chain3Step29.M'.d26 else p1)
        d7 : if True then if False then Bool else Bool else if False then Bool else Bool
        d7 = if if d3 then p2 else d3 then if p1 then Chain3Step29.M'.d131 else d3 else if Chain3Step29.M'.d131 then Chain3Step29.M'.d34 else p2
        d8 : (\x10. (\x11. x10 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d8 = (\x9. if p1 then Chain3Step29.M'.d111 else False : Bool -> Bool) (if Chain3Step29.M'.d42 then True else True)
        d12 : (\x13. if True then x13 else x13 : Type -> Type) (if False then Bool else Bool)
        d12 = if if d7 then d8 else True then if d3 then d8 else p1 else if True then p2 else d8
        d14 : (\x16. if True then x16 else Bool : Type -> Type) (if False then Bool else Bool)
        d14 = (\x15. if d12 then d7 else d7 : Bool -> Bool) (if Chain3Step29.M'.d10 then p2 else Chain3Step29.M'.d73)
        d17 : (\x20. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d17 = (\x18. (\x19. Chain3Step29.M'.d86 : Bool -> Bool) Chain3Step29.M'.d125 : Bool -> Bool) (if p1 then p1 else Chain3Step29.M'.d39)
        d21 : if False then if False then Bool else Bool else if False then Bool else Bool
        d21 = (\x22. (\x23. True : Bool -> Bool) Chain3Step29.M'.d10 : Bool -> Bool) (if Chain3Step29.M'.d122 then Chain3Step29.M'.d7 else p1)
        d24 : (\x25. (\x26. x26 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d24 = if if d12 then False else False then if Chain3Step29.M'.d31 then Chain3Step29.M'.d79 else False else if Chain3Step29.M'.d53 then False else d7
        d27 : if True then if True then Bool else Bool else if False then Bool else Bool
        d27 = if if d8 then True else False then if Chain3Step29.M'.d35 then Chain3Step29.M'.d83 else d14 else if False then Chain3Step29.M'.d62 else False
        d28 : if True then if True then Bool else Bool else if True then Bool else Bool
        d28 = if if False then False else Chain3Step29.M'.d111 then if p1 then p1 else d8 else if Chain3Step29.M'.d105 then Chain3Step29.M'.d38 else Chain3Step29.M'.d116
        d29 : if False then if True then Bool else Bool else if False then Bool else Bool
        d29 = (\x30. if p1 then Chain3Step29.M'.d35 else False : Bool -> Bool) (if False then d12 else d17)
        d31 : if True then if True then Bool else Bool else if False then Bool else Bool
        d31 = if if Chain3Step29.M'.d74 then d14 else False then if Chain3Step29.M'.d24 then Chain3Step29.M'.d66 else Chain3Step29.M'.d79 else if True then p2 else False
        d32 : if False then if True then Bool else Bool else if False then Bool else Bool
        d32 = (\x33. if Chain3Step29.M'.d83 then Chain3Step29.M'.d39 else p2 : Bool -> Bool) (if Chain3Step29.M'.d21 then d31 else True)
        d34 : if False then if False then Bool else Bool else if True then Bool else Bool
        d34 = (\x35. (\x36. d7 : Bool -> Bool) p2 : Bool -> Bool) (if p1 then False else True)
        d37 : (\x40. if False then Bool else x40 : Type -> Type) (if False then Bool else Bool)
        d37 = (\x38. (\x39. d29 : Bool -> Bool) p1 : Bool -> Bool) (if False then d34 else d28)
        d41 : if False then if False then Bool else Bool else if True then Bool else Bool
        d41 = if if Chain3Step29.M'.d50 then Chain3Step29.M'.d34 else Chain3Step29.M'.d120 then if Chain3Step29.M'.d77 then Chain3Step29.M'.d31 else Chain3Step29.M'.d131 else if Chain3Step29.M'.d102 then d21 else Chain3Step29.M'.d63
        d42 : (\x43. (\x44. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d42 = if if d14 then Chain3Step29.M'.d77 else Chain3Step29.M'.d104 then if p1 then Chain3Step29.M'.d99 else p1 else if d17 then Chain3Step29.M'.d128 else d28
        d45 : (\x46. (\x47. x47 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d45 = if if p2 then Chain3Step29.M'.d69 else Chain3Step29.M'.d27 then if d24 then True else p2 else if Chain3Step29.M'.d58 then d27 else Chain3Step29.M'.d73
        d48 : if False then if True then Bool else Bool else if False then Bool else Bool
        d48 = if if d24 then False else d12 then if Chain3Step29.M'.d45 then Chain3Step29.M'.d97 else d34 else if Chain3Step29.M'.d134 then True else Chain3Step29.M'.d104
        d49 : if True then if False then Bool else Bool else if True then Bool else Bool
        d49 = if if Chain3Step29.M'.d131 then Chain3Step29.M'.d79 else d8 then if d14 then Chain3Step29.M'.d94 else Chain3Step29.M'.d27 else if Chain3Step29.M'.d94 then True else Chain3Step29.M'.d128
        d50 : if False then if True then Bool else Bool else if True then Bool else Bool
        d50 = (\x51. if p2 then False else Chain3Step29.M'.d63 : Bool -> Bool) (if d21 then Chain3Step29.M'.d108 else p1)
        d52 : if True then if True then Bool else Bool else if False then Bool else Bool
        d52 = (\x53. (\x54. Chain3Step29.M'.d17 : Bool -> Bool) d49 : Bool -> Bool) (if p1 then Chain3Step29.M'.d38 else True)
        d55 : (\x56. (\x57. x57 : Type -> Type) x56 : Type -> Type) (if False then Bool else Bool)
        d55 = if if Chain3Step29.M'.d39 then Chain3Step29.M'.d77 else d24 then if d29 then Chain3Step29.M'.d42 else d29 else if p1 then Chain3Step29.M'.d13 else p1
        d58 : if False then if False then Bool else Bool else if True then Bool else Bool
        d58 = if if p1 then Chain3Step29.M'.d128 else False then if p1 then p2 else True else if Chain3Step29.M'.d11 then True else True
        d59 : if True then if True then Bool else Bool else if False then Bool else Bool
        d59 = if if Chain3Step29.M'.d63 then Chain3Step29.M'.d58 else False then if Chain3Step29.M'.d77 then p2 else Chain3Step29.M'.d13 else if Chain3Step29.M'.d134 then d14 else p1
        d60 : (\x63. (\x64. Bool : Type -> Type) x63 : Type -> Type) (if True then Bool else Bool)
        d60 = (\x61. (\x62. Chain3Step29.M'.d83 : Bool -> Bool) True : Bool -> Bool) (if d58 then Chain3Step29.M'.d21 else d49)
        d65 : if True then if True then Bool else Bool else if True then Bool else Bool
        d65 = (\x66. if Chain3Step29.M'.d21 then Chain3Step29.M'.d120 else True : Bool -> Bool) (if True then p1 else False)
        d67 : (\x68. (\x69. x68 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d67 = if if Chain3Step29.M'.d86 then Chain3Step29.M'.d17 else True then if True then Chain3Step29.M'.d92 else Chain3Step29.M'.d27 else if d52 then p2 else Chain3Step29.M'.d50
        d70 : (\x72. if True then Bool else x72 : Type -> Type) (if False then Bool else Bool)
        d70 = (\x71. if x71 then False else p1 : Bool -> Bool) (if False then Chain3Step29.M'.d105 else Chain3Step29.M'.d27)
        d73 : (\x76. if True then Bool else x76 : Type -> Type) (if True then Bool else Bool)
        d73 = (\x74. (\x75. Chain3Step29.M'.d102 : Bool -> Bool) Chain3Step29.M'.d24 : Bool -> Bool) (if Chain3Step29.M'.d39 then d58 else Chain3Step29.M'.d58)
        d77 : if False then if True then Bool else Bool else if False then Bool else Bool
        d77 = if if p2 then d28 else p1 then if False then d21 else False else if Chain3Step29.M'.d125 then p2 else True
        d78 : if False then if False then Bool else Bool else if True then Bool else Bool
        d78 = if if True then Chain3Step29.M'.d21 else p1 then if Chain3Step29.M'.d102 then d67 else Chain3Step29.M'.d79 else if Chain3Step29.M'.d31 then False else Chain3Step29.M'.d79
        d79 : if True then if False then Bool else Bool else if False then Bool else Bool
        d79 = (\x80. (\x81. Chain3Step29.M'.d31 : Bool -> Bool) Chain3Step29.M'.d53 : Bool -> Bool) (if p2 then d65 else Chain3Step29.M'.d66)
        d82 : if True then if True then Bool else Bool else if True then Bool else Bool
        d82 = (\x83. (\x84. True : Bool -> Bool) d37 : Bool -> Bool) (if Chain3Step29.M'.d35 then Chain3Step29.M'.d125 else Chain3Step29.M'.d131)
        d85 : if False then if False then Bool else Bool else if False then Bool else Bool
        d85 = (\x86. (\x87. p2 : Bool -> Bool) p2 : Bool -> Bool) (if False then d7 else p2)
        d88 : if False then if False then Bool else Bool else if False then Bool else Bool
        d88 = (\x89. (\x90. p1 : Bool -> Bool) True : Bool -> Bool) (if Chain3Step29.M'.d66 then True else True)
        d91 : (\x94. (\x95. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d91 = (\x92. (\x93. Chain3Step29.M'.d35 : Bool -> Bool) False : Bool -> Bool) (if Chain3Step29.M'.d86 then Chain3Step29.M'.d102 else d78)
        d96 : (\x97. if True then x97 else Bool : Type -> Type) (if False then Bool else Bool)
        d96 = if if Chain3Step29.M'.d24 then False else Chain3Step29.M'.d120 then if Chain3Step29.M'.d83 then False else Chain3Step29.M'.d108 else if Chain3Step29.M'.d32 then Chain3Step29.M'.d131 else Chain3Step29.M'.d26
        d98 : (\x101. (\x102. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d98 = (\x99. (\x100. Chain3Step29.M'.d97 : Bool -> Bool) False : Bool -> Bool) (if p2 then p1 else Chain3Step29.M'.d58)
        d103 : (\x104. (\x105. Bool : Type -> Type) x104 : Type -> Type) (if True then Bool else Bool)
        d103 = if if Chain3Step29.M'.d97 then Chain3Step29.M'.d102 else Chain3Step29.M'.d31 then if True then True else d91 else if p1 then Chain3Step29.M'.d35 else Chain3Step29.M'.d118
        d106 : (\x107. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d106 = if if Chain3Step29.M'.d77 then p2 else True then if p1 then d17 else d60 else if False then True else Chain3Step29.M'.d102
        d108 : (\x109. (\x110. x109 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d108 = if if d70 then d65 else p2 then if False then Chain3Step29.M'.d34 else Chain3Step29.M'.d62 else if Chain3Step29.M'.d35 then p1 else d65
        d111 : if True then if False then Bool else Bool else if True then Bool else Bool
        d111 = (\x112. if Chain3Step29.M'.d74 then d8 else d41 : Bool -> Bool) (if False then False else False)
        d113 : if False then if True then Bool else Bool else if False then Bool else Bool
        d113 = (\x114. if False then Chain3Step29.M'.d13 else Chain3Step29.M'.d118 : Bool -> Bool) (if d82 then Chain3Step29.M'.d63 else False)
        d115 : (\x116. (\x117. Bool : Type -> Type) x116 : Type -> Type) (if False then Bool else Bool)
        d115 = if if Chain3Step29.M'.d116 then True else Chain3Step29.M'.d94 then if Chain3Step29.M'.d58 then p2 else Chain3Step29.M'.d74 else if Chain3Step29.M'.d134 then Chain3Step29.M'.d21 else Chain3Step29.M'.d58
        d118 : if True then if True then Bool else Bool else if True then Bool else Bool
        d118 = if if p2 then p1 else Chain3Step29.M'.d11 then if d29 then Chain3Step29.M'.d79 else Chain3Step29.M'.d10 else if Chain3Step29.M'.d83 then True else Chain3Step29.M'.d39
        d119 : if True then if True then Bool else Bool else if True then Bool else Bool
        d119 = (\x120. (\x121. Chain3Step29.M'.d58 : Bool -> Bool) Chain3Step29.M'.d39 : Bool -> Bool) (if p1 then Chain3Step29.M'.d134 else Chain3Step29.M'.d50)
        d122 : if True then if False then Bool else Bool else if False then Bool else Bool
        d122 = (\x123. (\x124. Chain3Step29.M'.d27 : Bool -> Bool) Chain3Step29.M'.d104 : Bool -> Bool) (if Chain3Step29.M'.d105 then Chain3Step29.M'.d125 else p2)
        d125 : if False then if False then Bool else Bool else if False then Bool else Bool
        d125 = if if False then p1 else Chain3Step29.M'.d72 then if p2 then Chain3Step29.M'.d128 else d32 else if Chain3Step29.M'.d38 then Chain3Step29.M'.d38 else True
        d126 : if False then if True then Bool else Bool else if False then Bool else Bool
        d126 = if if p2 then p2 else True then if p2 then Chain3Step29.M'.d125 else Chain3Step29.M'.d39 else if p1 then d41 else Chain3Step29.M'.d92