module Chain3Base11 where
    module M(p1: (\x2. if False then Bool else Bool : Type -> Type) Bool)(p3: (\x4. if True then x4 else x4 : Type -> Type) Bool)(p5: if True then Bool else Bool) where
        d6 : (\x7. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d6 = if if p3 then False else True then if p5 then True else True else if p3 then p3 else p5
        d8 : if False then if True then Bool else Bool else if True then Bool else Bool
        d8 = if if True then p1 else p5 then if True then p3 else p5 else if True then False else d6
        d9 : (\x10. if True then x10 else x10 : Type -> Type) (if False then Bool else Bool)
        d9 = if if True then d8 else p5 then if d8 then False else False else if False then p5 else p5
        d11 : (\x12. if False then Bool else x12 : Type -> Type) (if False then Bool else Bool)
        d11 = if if True then p1 else d6 then if p1 then d6 else p1 else if True then d9 else d9
        d13 : if False then if False then Bool else Bool else if True then Bool else Bool
        d13 = (\x14. if d9 then d6 else d8 : Bool -> Bool) (if d9 then p5 else p5)
        d15 : (\x18. (\x19. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d15 = (\x16. (\x17. p1 : Bool -> Bool) x16 : Bool -> Bool) (if False then p5 else d13)
        d20 : (\x23. if False then x23 else x23 : Type -> Type) (if False then Bool else Bool)
        d20 = (\x21. (\x22. p1 : Bool -> Bool) x21 : Bool -> Bool) (if d6 then p5 else d6)
        d24 : if False then if True then Bool else Bool else if False then Bool else Bool
        d24 = if if False then True else p5 then if d20 then p5 else False else if True then False else d8
        d25 : if True then if False then Bool else Bool else if False then Bool else Bool
        d25 = (\x26. if p1 then True else d9 : Bool -> Bool) (if d20 then False else p5)
        d27 : if False then if False then Bool else Bool else if True then Bool else Bool
        d27 = (\x28. (\x29. d8 : Bool -> Bool) True : Bool -> Bool) (if p5 then True else d20)
        d30 : (\x31. (\x32. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d30 = if if p5 then p5 else False then if p3 then p3 else d8 else if p5 then p5 else False
        d33 : (\x34. (\x35. Bool : Type -> Type) x34 : Type -> Type) (if False then Bool else Bool)
        d33 = if if False then d6 else d25 then if d11 then p3 else False else if True then p3 else d6
        d36 : (\x38. (\x39. x39 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d36 = (\x37. if False then x37 else True : Bool -> Bool) (if d11 then d11 else d30)
        d40 : (\x43. (\x44. x43 : Type -> Type) x43 : Type -> Type) (if True then Bool else Bool)
        d40 = (\x41. (\x42. p1 : Bool -> Bool) x41 : Bool -> Bool) (if d13 then p3 else False)
        d45 : if True then if False then Bool else Bool else if True then Bool else Bool
        d45 = if if d24 then p3 else d9 then if False then False else p1 else if d20 then False else d15
        d46 : (\x49. if False then x49 else x49 : Type -> Type) (if True then Bool else Bool)
        d46 = (\x47. (\x48. d24 : Bool -> Bool) x47 : Bool -> Bool) (if p5 then p5 else p3)
        d50 : if False then if True then Bool else Bool else if False then Bool else Bool
        d50 = if if p3 then True else p5 then if False then d46 else p1 else if d36 then d6 else True
        d51 : if True then if False then Bool else Bool else if True then Bool else Bool
        d51 = (\x52. (\x53. d8 : Bool -> Bool) d30 : Bool -> Bool) (if d11 then d40 else True)
        d54 : (\x55. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d54 = if if True then True else False then if p3 then p1 else True else if p3 then d15 else p3
        d56 : (\x57. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d56 = if if False then False else d54 then if d51 then p3 else p1 else if d54 then d50 else False
        d58 : if False then if False then Bool else Bool else if False then Bool else Bool
        d58 = if if d27 then d15 else True then if d36 then d33 else d25 else if p1 then d51 else True
        d59 : if True then if False then Bool else Bool else if True then Bool else Bool
        d59 = if if True then p3 else p5 then if d15 then p5 else d46 else if p1 then p5 else True
        d60 : if True then if True then Bool else Bool else if True then Bool else Bool
        d60 = if if p1 then p3 else d50 then if p3 then True else False else if p5 then p1 else p1
        d61 : if True then if True then Bool else Bool else if False then Bool else Bool
        d61 = if if False then p3 else True then if True then p1 else d58 else if p5 then False else False
        d62 : if False then if True then Bool else Bool else if True then Bool else Bool
        d62 = if if d60 then False else p1 then if True then p5 else True else if p3 then p1 else True
        d63 : (\x65. (\x66. Bool : Type -> Type) x65 : Type -> Type) (if False then Bool else Bool)
        d63 = (\x64. if d9 then True else d11 : Bool -> Bool) (if True then True else False)
        d67 : if True then if False then Bool else Bool else if False then Bool else Bool
        d67 = (\x68. (\x69. x69 : Bool -> Bool) True : Bool -> Bool) (if d61 then False else p5)
        d70 : (\x73. (\x74. x74 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d70 = (\x71. (\x72. False : Bool -> Bool) p3 : Bool -> Bool) (if d36 then True else False)
        d75 : if False then if False then Bool else Bool else if True then Bool else Bool
        d75 = (\x76. if d70 then x76 else p3 : Bool -> Bool) (if d54 then p3 else d11)
        d77 : if True then if True then Bool else Bool else if False then Bool else Bool
        d77 = (\x78. if False then True else False : Bool -> Bool) (if d67 then d60 else d11)
        d79 : (\x80. (\x81. x81 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d79 = if if d40 then False else p1 then if True then True else d60 else if True then d33 else d60
        d82 : if True then if True then Bool else Bool else if True then Bool else Bool
        d82 = if if d6 then True else p1 then if False then d6 else False else if p5 then p1 else False
        d83 : (\x85. if True then x85 else Bool : Type -> Type) (if False then Bool else Bool)
        d83 = (\x84. if False then False else d75 : Bool -> Bool) (if p5 then d36 else p1)
        d86 : (\x89. (\x90. x89 : Type -> Type) x89 : Type -> Type) (if True then Bool else Bool)
        d86 = (\x87. (\x88. d46 : Bool -> Bool) d62 : Bool -> Bool) (if p1 then d58 else True)
        d91 : if False then if False then Bool else Bool else if True then Bool else Bool
        d91 = (\x92. if p5 then d61 else d83 : Bool -> Bool) (if True then True else p1)
        d93 : (\x96. (\x97. Bool : Type -> Type) x96 : Type -> Type) (if True then Bool else Bool)
        d93 = (\x94. (\x95. p5 : Bool -> Bool) d9 : Bool -> Bool) (if True then d86 else d51)
        d98 : (\x99. (\x100. x99 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d98 = if if True then False else p5 then if False then d25 else p3 else if p1 then p5 else True
        d101 : if False then if True then Bool else Bool else if True then Bool else Bool
        d101 = (\x102. if p1 then False else p1 : Bool -> Bool) (if False then p3 else p3)
        d103 : if True then if True then Bool else Bool else if False then Bool else Bool
        d103 = if if False then d30 else p3 then if d11 then d62 else d82 else if False then d11 else True
        d104 : (\x105. if False then x105 else Bool : Type -> Type) (if True then Bool else Bool)
        d104 = if if d63 then p5 else p1 then if d91 then True else True else if d45 then p1 else False
        d106 : (\x107. (\x108. x107 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d106 = if if p3 then d25 else p3 then if False then d60 else p3 else if True then False else False
        d109 : (\x110. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d109 = if if p3 then p1 else True then if p5 then d63 else p3 else if True then d8 else True
        d111 : (\x112. (\x113. x112 : Type -> Type) x112 : Type -> Type) (if True then Bool else Bool)
        d111 = if if p5 then p5 else p5 then if d45 then False else p1 else if True then p1 else True
        d114 : if True then if True then Bool else Bool else if True then Bool else Bool
        d114 = (\x115. (\x116. p5 : Bool -> Bool) p1 : Bool -> Bool) (if p3 then d109 else p3)
        d117 : (\x119. (\x120. x120 : Type -> Type) x119 : Type -> Type) (if False then Bool else Bool)
        d117 = (\x118. if p1 then p5 else d33 : Bool -> Bool) (if True then p3 else d50)
        d121 : (\x122. if True then x122 else Bool : Type -> Type) (if False then Bool else Bool)
        d121 = if if d79 then True else p1 then if d67 then d13 else p5 else if d27 then p1 else p1
        d123 : (\x125. if False then Bool else x125 : Type -> Type) (if False then Bool else Bool)
        d123 = (\x124. if False then d36 else d70 : Bool -> Bool) (if d70 then d117 else p1)
        d126 : if True then if False then Bool else Bool else if False then Bool else Bool
        d126 = if if p3 then False else p1 then if p1 then d46 else False else if d27 then p3 else d27
        d127 : if False then if False then Bool else Bool else if True then Bool else Bool
        d127 = if if d77 then True else p1 then if d86 then False else d98 else if p3 then p5 else False
        d128 : if True then if True then Bool else Bool else if False then Bool else Bool
        d128 = if if True then p5 else p5 then if d62 then False else d9 else if p1 then False else p3
    module M' = M (False) 