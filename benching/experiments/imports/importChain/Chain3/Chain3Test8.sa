module Chain3Test8 where
    import Chain3Step28
    module M(p1: (\x2. if False then Bool else Bool : Type -> Type) Bool)(p3: (\x4. if False then x4 else Bool : Type -> Type) Bool) where
        d5 : if False then if False then Bool else Bool else if True then Bool else Bool
        d5 = if if Chain3Step28.M'.d76 then True else p3 then if Chain3Step28.M'.d24 then Chain3Step28.M'.d53 else True else if Chain3Step28.M'.d87 then p3 else p3
        d6 : (\x8. if False then x8 else Bool : Type -> Type) (if False then Bool else Bool)
        d6 = (\x7. if d5 then Chain3Step28.M'.d101 else True : Bool -> Bool) (if Chain3Step28.M'.d5 then Chain3Step28.M'.d53 else p1)
        d9 : if False then if True then Bool else Bool else if True then Bool else Bool
        d9 = (\x10. (\x11. Chain3Step28.M'.d16 : Bool -> Bool) True : Bool -> Bool) (if d6 then p1 else Chain3Step28.M'.d87)
        d12 : if False then if False then Bool else Bool else if False then Bool else Bool
        d12 = (\x13. if d9 then d9 else Chain3Step28.M'.d66 : Bool -> Bool) (if d9 then True else Chain3Step28.M'.d137)
        d14 : (\x15. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d14 = if if d6 then Chain3Step28.M'.d87 else Chain3Step28.M'.d78 then if Chain3Step28.M'.d9 then Chain3Step28.M'.d66 else p3 else if d6 then p1 else p3
        d16 : if True then if False then Bool else Bool else if True then Bool else Bool
        d16 = if if d9 then d12 else p1 then if p1 then p1 else False else if d12 then p1 else Chain3Step28.M'.d62
        d17 : if False then if True then Bool else Bool else if True then Bool else Bool
        d17 = (\x18. if False then Chain3Step28.M'.d24 else False : Bool -> Bool) (if True then p1 else Chain3Step28.M'.d122)
        d19 : if True then if False then Bool else Bool else if True then Bool else Bool
        d19 = if if Chain3Step28.M'.d66 then Chain3Step28.M'.d98 else p1 then if Chain3Step28.M'.d35 then Chain3Step28.M'.d107 else False else if p1 then p3 else d5
        d20 : (\x22. if False then Bool else x22 : Type -> Type) (if False then Bool else Bool)
        d20 = (\x21. if x21 then Chain3Step28.M'.d62 else d14 : Bool -> Bool) (if False then Chain3Step28.M'.d66 else p1)
        d23 : if True then if True then Bool else Bool else if True then Bool else Bool
        d23 = (\x24. if Chain3Step28.M'.d72 then p1 else Chain3Step28.M'.d26 : Bool -> Bool) (if p3 then p1 else False)
        d25 : if True then if False then Bool else Bool else if False then Bool else Bool
        d25 = (\x26. if Chain3Step28.M'.d71 then Chain3Step28.M'.d48 else Chain3Step28.M'.d119 : Bool -> Bool) (if True then Chain3Step28.M'.d14 else Chain3Step28.M'.d10)
        d27 : if False then if True then Bool else Bool else if True then Bool else Bool
        d27 = (\x28. if d16 then Chain3Step28.M'.d129 else Chain3Step28.M'.d48 : Bool -> Bool) (if False then True else Chain3Step28.M'.d132)
        d29 : if True then if False then Bool else Bool else if True then Bool else Bool
        d29 = if if Chain3Step28.M'.d78 then Chain3Step28.M'.d73 else d16 then if p3 then Chain3Step28.M'.d76 else False else if Chain3Step28.M'.d68 then p1 else False
        d30 : (\x31. if True then Bool else x31 : Type -> Type) (if True then Bool else Bool)
        d30 = if if Chain3Step28.M'.d101 then p3 else Chain3Step28.M'.d33 then if Chain3Step28.M'.d48 then d14 else d12 else if Chain3Step28.M'.d66 then d20 else d16
        d32 : if True then if True then Bool else Bool else if True then Bool else Bool
        d32 = (\x33. if True then Chain3Step28.M'.d30 else Chain3Step28.M'.d127 : Bool -> Bool) (if d6 then p3 else Chain3Step28.M'.d34)
        d34 : (\x37. (\x38. x37 : Type -> Type) x37 : Type -> Type) (if True then Bool else Bool)
        d34 = (\x35. (\x36. Chain3Step28.M'.d76 : Bool -> Bool) Chain3Step28.M'.d55 : Bool -> Bool) (if p3 then False else d12)
        d39 : if True then if False then Bool else Bool else if True then Bool else Bool
        d39 = if if Chain3Step28.M'.d76 then Chain3Step28.M'.d35 else False then if d19 then Chain3Step28.M'.d53 else Chain3Step28.M'.d73 else if p3 then d12 else False
        d40 : if False then if True then Bool else Bool else if True then Bool else Bool
        d40 = if if Chain3Step28.M'.d107 then True else d19 then if Chain3Step28.M'.d87 then True else d25 else if d14 then p3 else Chain3Step28.M'.d107
        d41 : if False then if True then Bool else Bool else if True then Bool else Bool
        d41 = if if True then False else Chain3Step28.M'.d98 then if d39 then p1 else p3 else if p3 then Chain3Step28.M'.d35 else p3
        d42 : if True then if False then Bool else Bool else if True then Bool else Bool
        d42 = (\x43. if False then p1 else Chain3Step28.M'.d62 : Bool -> Bool) (if True then p1 else p3)
        d44 : (\x46. (\x47. Bool : Type -> Type) x46 : Type -> Type) (if True then Bool else Bool)
        d44 = (\x45. if False then p1 else Chain3Step28.M'.d122 : Bool -> Bool) (if Chain3Step28.M'.d25 then d34 else False)
        d48 : if True then if False then Bool else Bool else if False then Bool else Bool
        d48 = (\x49. (\x50. d34 : Bool -> Bool) p3 : Bool -> Bool) (if p1 then False else True)
        d51 : (\x52. (\x53. Bool : Type -> Type) x52 : Type -> Type) (if True then Bool else Bool)
        d51 = if if Chain3Step28.M'.d110 then Chain3Step28.M'.d26 else p3 then if Chain3Step28.M'.d105 then Chain3Step28.M'.d137 else p1 else if Chain3Step28.M'.d72 then False else Chain3Step28.M'.d98
        d54 : if True then if True then Bool else Bool else if True then Bool else Bool
        d54 = (\x55. (\x56. Chain3Step28.M'.d114 : Bool -> Bool) d30 : Bool -> Bool) (if Chain3Step28.M'.d13 then Chain3Step28.M'.d84 else True)
        d57 : if False then if False then Bool else Bool else if False then Bool else Bool
        d57 = (\x58. if Chain3Step28.M'.d34 then Chain3Step28.M'.d53 else Chain3Step28.M'.d55 : Bool -> Bool) (if Chain3Step28.M'.d38 then d20 else p3)
        d59 : if True then if False then Bool else Bool else if True then Bool else Bool
        d59 = if if d29 then Chain3Step28.M'.d105 else p1 then if d51 then Chain3Step28.M'.d24 else p3 else if p1 then Chain3Step28.M'.d16 else Chain3Step28.M'.d16
        d60 : if True then if False then Bool else Bool else if False then Bool else Bool
        d60 = (\x61. (\x62. p1 : Bool -> Bool) d19 : Bool -> Bool) (if Chain3Step28.M'.d98 then True else p1)
        d63 : if True then if False then Bool else Bool else if True then Bool else Bool
        d63 = (\x64. (\x65. d5 : Bool -> Bool) Chain3Step28.M'.d114 : Bool -> Bool) (if d32 then d5 else Chain3Step28.M'.d68)
        d66 : (\x69. (\x70. Bool : Type -> Type) x69 : Type -> Type) (if False then Bool else Bool)
        d66 = (\x67. (\x68. False : Bool -> Bool) True : Bool -> Bool) (if False then Chain3Step28.M'.d53 else p1)
        d71 : if False then if True then Bool else Bool else if True then Bool else Bool
        d71 = if if d57 then True else p1 then if Chain3Step28.M'.d129 then d16 else Chain3Step28.M'.d84 else if d34 then False else False
        d72 : if False then if True then Bool else Bool else if True then Bool else Bool
        d72 = (\x73. (\x74. x73 : Bool -> Bool) p1 : Bool -> Bool) (if True then True else p1)
        d75 : if True then if False then Bool else Bool else if False then Bool else Bool
        d75 = if if p3 then d19 else False then if d63 then False else Chain3Step28.M'.d93 else if Chain3Step28.M'.d34 then p1 else Chain3Step28.M'.d66
        d76 : if True then if True then Bool else Bool else if True then Bool else Bool
        d76 = if if False then p1 else p1 then if Chain3Step28.M'.d68 then Chain3Step28.M'.d5 else Chain3Step28.M'.d39 else if Chain3Step28.M'.d16 then d41 else False
        d77 : if True then if True then Bool else Bool else if False then Bool else Bool
        d77 = if if Chain3Step28.M'.d39 then p1 else d19 then if Chain3Step28.M'.d91 then d42 else p1 else if p3 then False else Chain3Step28.M'.d6
        d78 : (\x81. (\x82. Bool : Type -> Type) x81 : Type -> Type) (if True then Bool else Bool)
        d78 = (\x79. (\x80. Chain3Step28.M'.d34 : Bool -> Bool) True : Bool -> Bool) (if d17 then False else p1)
        d83 : if False then if False then Bool else Bool else if False then Bool else Bool
        d83 = if if Chain3Step28.M'.d10 then p1 else Chain3Step28.M'.d43 then if Chain3Step28.M'.d13 then True else Chain3Step28.M'.d114 else if p1 then False else True
        d84 : if True then if True then Bool else Bool else if False then Bool else Bool
        d84 = (\x85. if Chain3Step28.M'.d132 then True else Chain3Step28.M'.d48 : Bool -> Bool) (if Chain3Step28.M'.d84 then Chain3Step28.M'.d127 else Chain3Step28.M'.d33)
        d86 : (\x89. if True then Bool else x89 : Type -> Type) (if False then Bool else Bool)
        d86 = (\x87. (\x88. Chain3Step28.M'.d105 : Bool -> Bool) d63 : Bool -> Bool) (if p3 then p1 else Chain3Step28.M'.d81)
        d90 : (\x91. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d90 = if if Chain3Step28.M'.d39 then p1 else d27 then if Chain3Step28.M'.d33 then Chain3Step28.M'.d30 else p1 else if d23 then Chain3Step28.M'.d127 else d83
        d92 : (\x95. (\x96. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d92 = (\x93. (\x94. Chain3Step28.M'.d33 : Bool -> Bool) Chain3Step28.M'.d81 : Bool -> Bool) (if p3 then True else Chain3Step28.M'.d30)
        d97 : if True then if False then Bool else Bool else if True then Bool else Bool
        d97 = (\x98. (\x99. Chain3Step28.M'.d38 : Bool -> Bool) Chain3Step28.M'.d53 : Bool -> Bool) (if d75 then Chain3Step28.M'.d30 else Chain3Step28.M'.d68)
        d100 : (\x103. if True then Bool else x103 : Type -> Type) (if True then Bool else Bool)
        d100 = (\x101. (\x102. d40 : Bool -> Bool) Chain3Step28.M'.d13 : Bool -> Bool) (if Chain3Step28.M'.d6 then Chain3Step28.M'.d72 else True)
        d104 : (\x105. if False then x105 else x105 : Type -> Type) (if True then Bool else Bool)
        d104 = if if d71 then p3 else d40 then if True then p3 else p1 else if Chain3Step28.M'.d10 then p3 else Chain3Step28.M'.d26
        d106 : if False then if True then Bool else Bool else if True then Bool else Bool
        d106 = if if Chain3Step28.M'.d73 then Chain3Step28.M'.d101 else d32 then if d6 then p1 else d34 else if p1 then Chain3Step28.M'.d73 else p1
        d107 : (\x109. if True then Bool else x109 : Type -> Type) (if False then Bool else Bool)
        d107 = (\x108. if p3 then p3 else p3 : Bool -> Bool) (if False then d6 else p1)
        d110 : (\x112. (\x113. x113 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d110 = (\x111. if True then Chain3Step28.M'.d129 else x111 : Bool -> Bool) (if d19 then p1 else True)
        d114 : (\x115. (\x116. x115 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d114 = if if d63 then d41 else False then if True then Chain3Step28.M'.d91 else p3 else if Chain3Step28.M'.d16 then Chain3Step28.M'.d16 else Chain3Step28.M'.d93
        d117 : if True then if False then Bool else Bool else if False then Bool else Bool
        d117 = if if Chain3Step28.M'.d9 then d107 else Chain3Step28.M'.d33 then if d34 then Chain3Step28.M'.d71 else p3 else if Chain3Step28.M'.d101 then d16 else Chain3Step28.M'.d71
        d118 : (\x119. (\x120. x119 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d118 = if if False then Chain3Step28.M'.d59 else d6 then if d110 then Chain3Step28.M'.d105 else Chain3Step28.M'.d5 else if p3 then Chain3Step28.M'.d81 else True
        d121 : (\x122. (\x123. x123 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d121 = if if Chain3Step28.M'.d34 then Chain3Step28.M'.d30 else Chain3Step28.M'.d14 then if p1 then Chain3Step28.M'.d39 else Chain3Step28.M'.d34 else if d30 then p1 else True