module Chain3Test7 where
    import Chain3Step27
    module M(p1: if True then Bool else Bool)(p2: if False then Bool else Bool) where
        d3 : (\x4. (\x5. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d3 = if if False then True else p2 then if False then p2 else False else if True then Chain3Step27.M'.d110 else False
        d6 : if False then if True then Bool else Bool else if True then Bool else Bool
        d6 = if if d3 then Chain3Step27.M'.d60 else False then if d3 then Chain3Step27.M'.d28 else Chain3Step27.M'.d23 else if Chain3Step27.M'.d108 then Chain3Step27.M'.d69 else Chain3Step27.M'.d36
        d7 : (\x8. if False then x8 else Bool : Type -> Type) (if False then Bool else Bool)
        d7 = if if Chain3Step27.M'.d110 then d3 else Chain3Step27.M'.d84 then if Chain3Step27.M'.d30 then Chain3Step27.M'.d64 else d3 else if False then p2 else True
        d9 : (\x12. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d9 = (\x10. (\x11. d7 : Bool -> Bool) Chain3Step27.M'.d69 : Bool -> Bool) (if d6 then True else d7)
        d13 : if True then if True then Bool else Bool else if True then Bool else Bool
        d13 = (\x14. if Chain3Step27.M'.d26 then False else x14 : Bool -> Bool) (if p1 then Chain3Step27.M'.d114 else False)
        d15 : if True then if True then Bool else Bool else if True then Bool else Bool
        d15 = (\x16. if Chain3Step27.M'.d6 then Chain3Step27.M'.d20 else p1 : Bool -> Bool) (if False then False else Chain3Step27.M'.d120)
        d17 : (\x18. (\x19. x18 : Type -> Type) x18 : Type -> Type) (if False then Bool else Bool)
        d17 = if if d3 then p1 else Chain3Step27.M'.d26 then if p1 then Chain3Step27.M'.d64 else p1 else if Chain3Step27.M'.d23 then Chain3Step27.M'.d74 else Chain3Step27.M'.d123
        d20 : (\x22. if True then Bool else x22 : Type -> Type) (if True then Bool else Bool)
        d20 = (\x21. if d6 then p2 else Chain3Step27.M'.d47 : Bool -> Bool) (if Chain3Step27.M'.d123 then p2 else Chain3Step27.M'.d67)
        d23 : if True then if False then Bool else Bool else if True then Bool else Bool
        d23 = if if Chain3Step27.M'.d64 then p1 else d15 then if d7 then p1 else False else if Chain3Step27.M'.d84 then True else False
        d24 : (\x25. (\x26. x25 : Type -> Type) x25 : Type -> Type) (if False then Bool else Bool)
        d24 = if if True then p2 else Chain3Step27.M'.d17 then if p1 then Chain3Step27.M'.d80 else p2 else if Chain3Step27.M'.d92 then d23 else d15
        d27 : if False then if True then Bool else Bool else if True then Bool else Bool
        d27 = if if Chain3Step27.M'.d117 then Chain3Step27.M'.d100 else Chain3Step27.M'.d14 then if False then p1 else d9 else if Chain3Step27.M'.d64 then d3 else d23
        d28 : (\x29. if True then x29 else Bool : Type -> Type) (if False then Bool else Bool)
        d28 = if if Chain3Step27.M'.d52 then d13 else d6 then if d7 then d27 else p2 else if Chain3Step27.M'.d84 then d6 else True
        d30 : (\x31. if False then x31 else Bool : Type -> Type) (if False then Bool else Bool)
        d30 = if if Chain3Step27.M'.d76 then False else Chain3Step27.M'.d117 then if d13 then p2 else p1 else if Chain3Step27.M'.d74 then Chain3Step27.M'.d100 else False
        d32 : (\x34. if False then x34 else Bool : Type -> Type) (if False then Bool else Bool)
        d32 = (\x33. if True then False else p2 : Bool -> Bool) (if d23 then p1 else Chain3Step27.M'.d28)
        d35 : (\x38. (\x39. Bool : Type -> Type) x38 : Type -> Type) (if True then Bool else Bool)
        d35 = (\x36. (\x37. Chain3Step27.M'.d23 : Bool -> Bool) True : Bool -> Bool) (if Chain3Step27.M'.d32 then Chain3Step27.M'.d67 else False)
        d40 : if False then if False then Bool else Bool else if True then Bool else Bool
        d40 = (\x41. if d28 then False else p2 : Bool -> Bool) (if Chain3Step27.M'.d100 then Chain3Step27.M'.d100 else Chain3Step27.M'.d94)
        d42 : if True then if True then Bool else Bool else if True then Bool else Bool
        d42 = if if Chain3Step27.M'.d48 then Chain3Step27.M'.d53 else Chain3Step27.M'.d6 then if True then Chain3Step27.M'.d48 else p1 else if d30 then p2 else Chain3Step27.M'.d97
        d43 : if False then if False then Bool else Bool else if True then Bool else Bool
        d43 = (\x44. (\x45. False : Bool -> Bool) True : Bool -> Bool) (if Chain3Step27.M'.d6 then False else Chain3Step27.M'.d60)
        d46 : (\x47. (\x48. x48 : Type -> Type) x47 : Type -> Type) (if True then Bool else Bool)
        d46 = if if Chain3Step27.M'.d28 then Chain3Step27.M'.d103 else Chain3Step27.M'.d64 then if Chain3Step27.M'.d81 then Chain3Step27.M'.d52 else d35 else if d42 then Chain3Step27.M'.d73 else True
        d49 : if False then if False then Bool else Bool else if False then Bool else Bool
        d49 = (\x50. (\x51. Chain3Step27.M'.d69 : Bool -> Bool) Chain3Step27.M'.d9 : Bool -> Bool) (if d23 then Chain3Step27.M'.d17 else Chain3Step27.M'.d20)
        d52 : (\x55. (\x56. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d52 = (\x53. (\x54. Chain3Step27.M'.d72 : Bool -> Bool) False : Bool -> Bool) (if d30 then Chain3Step27.M'.d81 else d32)
        d57 : if True then if True then Bool else Bool else if True then Bool else Bool
        d57 = if if False then p2 else False then if False then Chain3Step27.M'.d94 else True else if Chain3Step27.M'.d123 then d3 else Chain3Step27.M'.d12
        d58 : (\x59. (\x60. x59 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d58 = if if Chain3Step27.M'.d20 then Chain3Step27.M'.d92 else p2 then if Chain3Step27.M'.d103 then True else Chain3Step27.M'.d96 else if d17 then False else Chain3Step27.M'.d23
        d61 : if False then if True then Bool else Bool else if False then Bool else Bool
        d61 = if if Chain3Step27.M'.d84 then Chain3Step27.M'.d55 else Chain3Step27.M'.d72 then if p2 then False else d46 else if p2 then Chain3Step27.M'.d123 else d57
        d62 : (\x65. (\x66. x66 : Type -> Type) x65 : Type -> Type) (if True then Bool else Bool)
        d62 = (\x63. (\x64. d61 : Bool -> Bool) Chain3Step27.M'.d23 : Bool -> Bool) (if d43 then p1 else d58)
        d67 : (\x70. if False then x70 else x70 : Type -> Type) (if True then Bool else Bool)
        d67 = (\x68. (\x69. Chain3Step27.M'.d96 : Bool -> Bool) Chain3Step27.M'.d14 : Bool -> Bool) (if p2 then d3 else False)
        d71 : (\x73. if False then x73 else x73 : Type -> Type) (if True then Bool else Bool)
        d71 = (\x72. if True then d28 else d9 : Bool -> Bool) (if p2 then Chain3Step27.M'.d114 else p1)
        d74 : if False then if True then Bool else Bool else if False then Bool else Bool
        d74 = if if False then p2 else True then if p2 then Chain3Step27.M'.d114 else Chain3Step27.M'.d114 else if True then False else p1
        d75 : (\x76. if False then x76 else Bool : Type -> Type) (if False then Bool else Bool)
        d75 = if if Chain3Step27.M'.d78 then Chain3Step27.M'.d81 else False then if Chain3Step27.M'.d28 then d15 else Chain3Step27.M'.d60 else if False then True else d24
        d77 : if True then if True then Bool else Bool else if False then Bool else Bool
        d77 = if if False then Chain3Step27.M'.d26 else d3 then if Chain3Step27.M'.d81 then p2 else d17 else if d24 then True else False
        d78 : if False then if False then Bool else Bool else if True then Bool else Bool
        d78 = if if Chain3Step27.M'.d36 then False else p1 then if Chain3Step27.M'.d56 then p2 else Chain3Step27.M'.d110 else if p1 then p2 else d35
        d79 : if True then if False then Bool else Bool else if False then Bool else Bool
        d79 = if if False then Chain3Step27.M'.d60 else p1 then if d77 then p1 else True else if Chain3Step27.M'.d81 then d52 else d24
        d80 : (\x83. (\x84. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d80 = (\x81. (\x82. d67 : Bool -> Bool) Chain3Step27.M'.d64 : Bool -> Bool) (if p2 then Chain3Step27.M'.d30 else d43)
        d85 : (\x87. (\x88. x87 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d85 = (\x86. if Chain3Step27.M'.d32 then Chain3Step27.M'.d96 else Chain3Step27.M'.d76 : Bool -> Bool) (if True then True else Chain3Step27.M'.d14)
        d89 : if False then if True then Bool else Bool else if False then Bool else Bool
        d89 = if if Chain3Step27.M'.d32 then Chain3Step27.M'.d94 else True then if Chain3Step27.M'.d96 then p2 else True else if Chain3Step27.M'.d123 then d78 else p1
        d90 : (\x91. (\x92. Bool : Type -> Type) x91 : Type -> Type) (if False then Bool else Bool)
        d90 = if if p1 then Chain3Step27.M'.d53 else True then if d62 then p2 else Chain3Step27.M'.d14 else if Chain3Step27.M'.d32 then Chain3Step27.M'.d87 else p2
        d93 : if True then if True then Bool else Bool else if False then Bool else Bool
        d93 = if if d27 then p2 else p1 then if p2 then Chain3Step27.M'.d6 else Chain3Step27.M'.d52 else if False then Chain3Step27.M'.d74 else Chain3Step27.M'.d26
        d94 : if False then if False then Bool else Bool else if False then Bool else Bool
        d94 = if if Chain3Step27.M'.d14 then d77 else d28 then if Chain3Step27.M'.d39 then Chain3Step27.M'.d114 else d24 else if d46 then False else Chain3Step27.M'.d80
        d95 : (\x97. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d95 = (\x96. if True then True else Chain3Step27.M'.d102 : Bool -> Bool) (if Chain3Step27.M'.d78 then p1 else Chain3Step27.M'.d23)
        d98 : (\x99. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d98 = if if Chain3Step27.M'.d103 then d77 else d15 then if d3 then p2 else Chain3Step27.M'.d84 else if True then d7 else Chain3Step27.M'.d97
        d100 : if True then if True then Bool else Bool else if False then Bool else Bool
        d100 = (\x101. (\x102. Chain3Step27.M'.d9 : Bool -> Bool) d77 : Bool -> Bool) (if Chain3Step27.M'.d96 then Chain3Step27.M'.d114 else p1)
        d103 : if False then if False then Bool else Bool else if False then Bool else Bool
        d103 = if if True then Chain3Step27.M'.d96 else Chain3Step27.M'.d96 then if Chain3Step27.M'.d44 then Chain3Step27.M'.d114 else d7 else if True then True else Chain3Step27.M'.d74
        d104 : (\x106. if False then x106 else x106 : Type -> Type) (if False then Bool else Bool)
        d104 = (\x105. if p2 then p1 else x105 : Bool -> Bool) (if Chain3Step27.M'.d32 then False else d85)
        d107 : (\x108. if True then x108 else Bool : Type -> Type) (if False then Bool else Bool)
        d107 = if if Chain3Step27.M'.d48 then d40 else Chain3Step27.M'.d32 then if p2 then p1 else False else if True then Chain3Step27.M'.d120 else Chain3Step27.M'.d20
        d109 : (\x110. if False then Bool else x110 : Type -> Type) (if True then Bool else Bool)
        d109 = if if d49 then False else Chain3Step27.M'.d30 then if p2 then Chain3Step27.M'.d117 else p2 else if Chain3Step27.M'.d50 then Chain3Step27.M'.d56 else p2
        d111 : if False then if True then Bool else Bool else if True then Bool else Bool
        d111 = if if Chain3Step27.M'.d55 then p1 else p2 then if d71 then Chain3Step27.M'.d81 else d109 else if d85 then p1 else True
        d112 : if False then if False then Bool else Bool else if False then Bool else Bool
        d112 = (\x113. if x113 then Chain3Step27.M'.d110 else d52 : Bool -> Bool) (if p2 then Chain3Step27.M'.d84 else p2)
        d114 : if True then if True then Bool else Bool else if True then Bool else Bool
        d114 = if if d58 then Chain3Step27.M'.d108 else False then if p2 then Chain3Step27.M'.d114 else Chain3Step27.M'.d100 else if d15 then True else True
        d115 : if False then if False then Bool else Bool else if True then Bool else Bool
        d115 = (\x116. if Chain3Step27.M'.d92 then x116 else False : Bool -> Bool) (if True then True else d52)
        d117 : (\x118. if True then Bool else x118 : Type -> Type) (if False then Bool else Bool)
        d117 = if if Chain3Step27.M'.d117 then p1 else d13 then if p2 then False else Chain3Step27.M'.d39 else if d89 then Chain3Step27.M'.d84 else True