module Chain3Test4 where
    import Chain3Step24
    module M(p1: (\x2. if True then Bool else Bool : Type -> Type) Bool)(p3: (\x4. if True then Bool else Bool : Type -> Type) Bool) where
        d5 : if False then if False then Bool else Bool else if True then Bool else Bool
        d5 = (\x6. (\x7. True : Bool -> Bool) p3 : Bool -> Bool) (if Chain3Step24.M'.d113 then True else Chain3Step24.M'.d83)
        d8 : if False then if False then Bool else Bool else if True then Bool else Bool
        d8 = (\x9. (\x10. Chain3Step24.M'.d111 : Bool -> Bool) Chain3Step24.M'.d113 : Bool -> Bool) (if p3 then d5 else p3)
        d11 : (\x13. if False then x13 else x13 : Type -> Type) (if False then Bool else Bool)
        d11 = (\x12. if True then Chain3Step24.M'.d65 else False : Bool -> Bool) (if p1 then Chain3Step24.M'.d61 else d8)
        d14 : if False then if True then Bool else Bool else if False then Bool else Bool
        d14 = if if Chain3Step24.M'.d75 then True else d5 then if Chain3Step24.M'.d73 then Chain3Step24.M'.d15 else d11 else if True then d5 else Chain3Step24.M'.d88
        d15 : (\x18. (\x19. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d15 = (\x16. (\x17. Chain3Step24.M'.d59 : Bool -> Bool) False : Bool -> Bool) (if d8 then Chain3Step24.M'.d15 else Chain3Step24.M'.d56)
        d20 : (\x23. (\x24. Bool : Type -> Type) x23 : Type -> Type) (if True then Bool else Bool)
        d20 = (\x21. (\x22. Chain3Step24.M'.d33 : Bool -> Bool) Chain3Step24.M'.d54 : Bool -> Bool) (if d11 then Chain3Step24.M'.d16 else p1)
        d25 : (\x26. (\x27. Bool : Type -> Type) x26 : Type -> Type) (if True then Bool else Bool)
        d25 = if if True then Chain3Step24.M'.d78 else d5 then if False then Chain3Step24.M'.d111 else d14 else if Chain3Step24.M'.d86 then True else Chain3Step24.M'.d16
        d28 : (\x29. if True then x29 else Bool : Type -> Type) (if True then Bool else Bool)
        d28 = if if Chain3Step24.M'.d7 then Chain3Step24.M'.d20 else Chain3Step24.M'.d40 then if p1 then Chain3Step24.M'.d64 else Chain3Step24.M'.d15 else if Chain3Step24.M'.d15 then Chain3Step24.M'.d88 else p1
        d30 : if True then if True then Bool else Bool else if False then Bool else Bool
        d30 = if if Chain3Step24.M'.d16 then Chain3Step24.M'.d78 else d5 then if True then Chain3Step24.M'.d54 else d25 else if True then d14 else Chain3Step24.M'.d20
        d31 : if False then if True then Bool else Bool else if False then Bool else Bool
        d31 = if if Chain3Step24.M'.d54 then Chain3Step24.M'.d88 else Chain3Step24.M'.d83 then if Chain3Step24.M'.d83 then p1 else d11 else if p3 then True else Chain3Step24.M'.d93
        d32 : (\x35. (\x36. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d32 = (\x33. (\x34. x34 : Bool -> Bool) Chain3Step24.M'.d30 : Bool -> Bool) (if Chain3Step24.M'.d15 then Chain3Step24.M'.d16 else p1)
        d37 : if False then if False then Bool else Bool else if False then Bool else Bool
        d37 = if if p3 then Chain3Step24.M'.d78 else p3 then if p3 then True else Chain3Step24.M'.d96 else if False then Chain3Step24.M'.d117 else Chain3Step24.M'.d86
        d38 : (\x40. (\x41. x40 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d38 = (\x39. if True then Chain3Step24.M'.d68 else d5 : Bool -> Bool) (if Chain3Step24.M'.d97 then p1 else False)
        d42 : (\x43. (\x44. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d42 = if if d31 then Chain3Step24.M'.d114 else p3 then if Chain3Step24.M'.d114 then Chain3Step24.M'.d29 else d8 else if Chain3Step24.M'.d26 then Chain3Step24.M'.d74 else False
        d45 : if False then if True then Bool else Bool else if True then Bool else Bool
        d45 = if if d5 then Chain3Step24.M'.d36 else Chain3Step24.M'.d44 then if Chain3Step24.M'.d44 then p3 else Chain3Step24.M'.d96 else if Chain3Step24.M'.d11 then d30 else d20
        d46 : (\x47. if False then x47 else Bool : Type -> Type) (if True then Bool else Bool)
        d46 = if if Chain3Step24.M'.d118 then d20 else True then if True then Chain3Step24.M'.d70 else Chain3Step24.M'.d113 else if d30 then p3 else Chain3Step24.M'.d40
        d48 : if False then if False then Bool else Bool else if False then Bool else Bool
        d48 = (\x49. if d5 then p3 else Chain3Step24.M'.d96 : Bool -> Bool) (if True then d46 else Chain3Step24.M'.d79)
        d50 : (\x53. (\x54. Bool : Type -> Type) x53 : Type -> Type) (if True then Bool else Bool)
        d50 = (\x51. (\x52. x52 : Bool -> Bool) x51 : Bool -> Bool) (if p3 then d42 else False)
        d55 : if True then if True then Bool else Bool else if False then Bool else Bool
        d55 = if if p3 then True else Chain3Step24.M'.d26 then if d14 then d15 else False else if d31 then p1 else Chain3Step24.M'.d75
        d56 : (\x58. if True then x58 else Bool : Type -> Type) (if True then Bool else Bool)
        d56 = (\x57. if Chain3Step24.M'.d12 then Chain3Step24.M'.d118 else p1 : Bool -> Bool) (if Chain3Step24.M'.d30 then p1 else d48)
        d59 : (\x60. if True then x60 else x60 : Type -> Type) (if False then Bool else Bool)
        d59 = if if False then p3 else Chain3Step24.M'.d71 then if Chain3Step24.M'.d61 then d38 else Chain3Step24.M'.d78 else if Chain3Step24.M'.d30 then True else Chain3Step24.M'.d24
        d61 : if False then if True then Bool else Bool else if False then Bool else Bool
        d61 = (\x62. if False then Chain3Step24.M'.d24 else p3 : Bool -> Bool) (if False then True else p1)
        d63 : (\x66. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d63 = (\x64. (\x65. Chain3Step24.M'.d97 : Bool -> Bool) d32 : Bool -> Bool) (if p3 then Chain3Step24.M'.d65 else True)
        d67 : if False then if False then Bool else Bool else if False then Bool else Bool
        d67 = if if Chain3Step24.M'.d7 then p3 else p1 then if d15 then d45 else d55 else if Chain3Step24.M'.d105 then False else d48
        d68 : (\x69. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d68 = if if Chain3Step24.M'.d109 then Chain3Step24.M'.d114 else Chain3Step24.M'.d111 then if Chain3Step24.M'.d85 then d46 else Chain3Step24.M'.d24 else if d11 then Chain3Step24.M'.d95 else Chain3Step24.M'.d73
        d70 : if False then if False then Bool else Bool else if True then Bool else Bool
        d70 = if if p1 then Chain3Step24.M'.d36 else d38 then if Chain3Step24.M'.d70 then d32 else Chain3Step24.M'.d45 else if p3 then Chain3Step24.M'.d16 else Chain3Step24.M'.d73
        d71 : if False then if True then Bool else Bool else if True then Bool else Bool
        d71 = (\x72. if False then d46 else Chain3Step24.M'.d117 : Bool -> Bool) (if True then Chain3Step24.M'.d97 else d56)
        d73 : if True then if True then Bool else Bool else if False then Bool else Bool
        d73 = (\x74. if Chain3Step24.M'.d107 then False else x74 : Bool -> Bool) (if p3 then d46 else Chain3Step24.M'.d99)
        d75 : if False then if False then Bool else Bool else if False then Bool else Bool
        d75 = if if Chain3Step24.M'.d99 then True else d68 then if d48 then Chain3Step24.M'.d36 else Chain3Step24.M'.d79 else if Chain3Step24.M'.d33 then Chain3Step24.M'.d79 else Chain3Step24.M'.d111
        d76 : if False then if False then Bool else Bool else if False then Bool else Bool
        d76 = (\x77. if d42 then Chain3Step24.M'.d36 else Chain3Step24.M'.d79 : Bool -> Bool) (if Chain3Step24.M'.d26 then True else False)
        d78 : (\x80. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d78 = (\x79. if Chain3Step24.M'.d45 then Chain3Step24.M'.d30 else Chain3Step24.M'.d74 : Bool -> Bool) (if d8 then Chain3Step24.M'.d26 else d71)
        d81 : if False then if True then Bool else Bool else if False then Bool else Bool
        d81 = if if d73 then d68 else Chain3Step24.M'.d45 then if True then d73 else p1 else if Chain3Step24.M'.d105 then Chain3Step24.M'.d117 else d15
        d82 : (\x83. (\x84. x84 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d82 = if if True then Chain3Step24.M'.d12 else False then if Chain3Step24.M'.d59 then Chain3Step24.M'.d86 else True else if p3 then p3 else Chain3Step24.M'.d51
        d85 : (\x86. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d85 = if if Chain3Step24.M'.d105 then Chain3Step24.M'.d79 else d20 then if Chain3Step24.M'.d44 then d8 else Chain3Step24.M'.d68 else if p1 then p1 else p3
        d87 : (\x88. (\x89. x88 : Type -> Type) x88 : Type -> Type) (if False then Bool else Bool)
        d87 = if if Chain3Step24.M'.d33 then Chain3Step24.M'.d85 else d48 then if Chain3Step24.M'.d61 then d75 else Chain3Step24.M'.d73 else if d78 then False else Chain3Step24.M'.d79
        d90 : if False then if False then Bool else Bool else if False then Bool else Bool
        d90 = if if d81 then d30 else Chain3Step24.M'.d73 then if Chain3Step24.M'.d90 then True else False else if Chain3Step24.M'.d71 then Chain3Step24.M'.d99 else p3
        d91 : if True then if True then Bool else Bool else if True then Bool else Bool
        d91 = (\x92. if Chain3Step24.M'.d68 then False else p3 : Bool -> Bool) (if Chain3Step24.M'.d24 then Chain3Step24.M'.d118 else Chain3Step24.M'.d78)
        d93 : (\x94. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d93 = if if True then p3 else Chain3Step24.M'.d88 then if d25 then Chain3Step24.M'.d33 else p3 else if Chain3Step24.M'.d114 then d31 else Chain3Step24.M'.d107
        d95 : if True then if False then Bool else Bool else if False then Bool else Bool
        d95 = (\x96. (\x97. d61 : Bool -> Bool) p1 : Bool -> Bool) (if True then p3 else d90)
        d98 : if True then if True then Bool else Bool else if False then Bool else Bool
        d98 = if if d50 then True else False then if Chain3Step24.M'.d47 then True else False else if False then Chain3Step24.M'.d95 else d15
        d99 : (\x102. if True then Bool else x102 : Type -> Type) (if True then Bool else Bool)
        d99 = (\x100. (\x101. x100 : Bool -> Bool) d31 : Bool -> Bool) (if d31 then d14 else Chain3Step24.M'.d96)
        d103 : (\x104. (\x105. x104 : Type -> Type) x104 : Type -> Type) (if False then Bool else Bool)
        d103 = if if Chain3Step24.M'.d97 then Chain3Step24.M'.d118 else Chain3Step24.M'.d59 then if Chain3Step24.M'.d15 then Chain3Step24.M'.d101 else p1 else if False then Chain3Step24.M'.d26 else False
        d106 : (\x107. (\x108. Bool : Type -> Type) x107 : Type -> Type) (if True then Bool else Bool)
        d106 = if if Chain3Step24.M'.d73 then p1 else True then if d25 then p3 else Chain3Step24.M'.d117 else if Chain3Step24.M'.d93 then Chain3Step24.M'.d68 else Chain3Step24.M'.d114
        d109 : (\x112. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d109 = (\x110. (\x111. False : Bool -> Bool) True : Bool -> Bool) (if d8 then Chain3Step24.M'.d47 else Chain3Step24.M'.d65)
        d113 : if True then if False then Bool else Bool else if True then Bool else Bool
        d113 = if if Chain3Step24.M'.d86 then d8 else d95 then if Chain3Step24.M'.d99 then Chain3Step24.M'.d33 else p1 else if Chain3Step24.M'.d78 then Chain3Step24.M'.d54 else True
        d114 : if False then if False then Bool else Bool else if False then Bool else Bool
        d114 = (\x115. if Chain3Step24.M'.d30 then Chain3Step24.M'.d7 else True : Bool -> Bool) (if Chain3Step24.M'.d54 then Chain3Step24.M'.d90 else d32)
        d116 : (\x119. if True then x119 else Bool : Type -> Type) (if True then Bool else Bool)
        d116 = (\x117. (\x118. x118 : Bool -> Bool) Chain3Step24.M'.d51 : Bool -> Bool) (if Chain3Step24.M'.d64 then Chain3Step24.M'.d26 else d56)
        d120 : (\x121. if True then x121 else Bool : Type -> Type) (if False then Bool else Bool)
        d120 = if if True then Chain3Step24.M'.d74 else d28 then if Chain3Step24.M'.d59 then p3 else d63 else if True then d32 else p3
        d122 : (\x124. if False then x124 else x124 : Type -> Type) (if False then Bool else Bool)
        d122 = (\x123. if d46 then Chain3Step24.M'.d111 else d76 : Bool -> Bool) (if Chain3Step24.M'.d59 then d93 else d106)
        d125 : if False then if True then Bool else Bool else if True then Bool else Bool
        d125 = if if p1 then Chain3Step24.M'.d105 else Chain3Step24.M'.d45 then if Chain3Step24.M'.d95 then True else Chain3Step24.M'.d90 else if p1 then p3 else d8