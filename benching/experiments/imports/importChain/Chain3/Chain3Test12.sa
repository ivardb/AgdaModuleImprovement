module Chain3Test12 where
    import Chain3Step212
    module M(p1: if True then Bool else Bool)(p2: (\x3. if True then Bool else x3 : Type -> Type) Bool) where
        d4 : if True then if False then Bool else Bool else if False then Bool else Bool
        d4 = if if Chain3Step212.M'.d45 then p1 else Chain3Step212.M'.d68 then if p2 then False else Chain3Step212.M'.d58 else if p1 then False else Chain3Step212.M'.d68
        d5 : (\x6. if True then Bool else x6 : Type -> Type) (if True then Bool else Bool)
        d5 = if if p2 then Chain3Step212.M'.d50 else True then if p1 then d4 else Chain3Step212.M'.d18 else if p2 then p2 else d4
        d7 : (\x10. (\x11. x11 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d7 = (\x8. (\x9. p1 : Bool -> Bool) p2 : Bool -> Bool) (if d4 then Chain3Step212.M'.d90 else d4)
        d12 : if False then if True then Bool else Bool else if False then Bool else Bool
        d12 = if if p1 then d4 else d7 then if p1 then d4 else d7 else if d4 then d4 else p2
        d13 : if False then if False then Bool else Bool else if True then Bool else Bool
        d13 = (\x14. (\x15. True : Bool -> Bool) d12 : Bool -> Bool) (if d12 then p2 else d5)
        d16 : (\x17. if False then x17 else x17 : Type -> Type) (if True then Bool else Bool)
        d16 = if if True then p1 else d5 then if Chain3Step212.M'.d24 then Chain3Step212.M'.d30 else Chain3Step212.M'.d97 else if False then d7 else Chain3Step212.M'.d109
        d18 : if True then if True then Bool else Bool else if True then Bool else Bool
        d18 = if if d12 then p1 else p2 then if Chain3Step212.M'.d53 then Chain3Step212.M'.d9 else Chain3Step212.M'.d49 else if Chain3Step212.M'.d53 then p1 else p1
        d19 : (\x22. (\x23. x23 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d19 = (\x20. (\x21. Chain3Step212.M'.d9 : Bool -> Bool) p1 : Bool -> Bool) (if False then p1 else Chain3Step212.M'.d33)
        d24 : if True then if False then Bool else Bool else if True then Bool else Bool
        d24 = if if Chain3Step212.M'.d95 then False else d5 then if Chain3Step212.M'.d99 then p2 else Chain3Step212.M'.d74 else if Chain3Step212.M'.d98 then True else Chain3Step212.M'.d59
        d25 : if False then if True then Bool else Bool else if True then Bool else Bool
        d25 = (\x26. if True then Chain3Step212.M'.d33 else p1 : Bool -> Bool) (if p2 then d13 else d16)
        d27 : if True then if False then Bool else Bool else if True then Bool else Bool
        d27 = (\x28. if Chain3Step212.M'.d114 then Chain3Step212.M'.d27 else False : Bool -> Bool) (if Chain3Step212.M'.d74 then True else p1)
        d29 : if False then if False then Bool else Bool else if True then Bool else Bool
        d29 = (\x30. (\x31. Chain3Step212.M'.d74 : Bool -> Bool) False : Bool -> Bool) (if p1 then Chain3Step212.M'.d114 else Chain3Step212.M'.d78)
        d32 : (\x34. (\x35. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d32 = (\x33. if x33 then Chain3Step212.M'.d74 else False : Bool -> Bool) (if p1 then True else Chain3Step212.M'.d53)
        d36 : (\x37. (\x38. x38 : Type -> Type) x37 : Type -> Type) (if False then Bool else Bool)
        d36 = if if Chain3Step212.M'.d104 then p2 else Chain3Step212.M'.d63 then if False then d25 else Chain3Step212.M'.d83 else if Chain3Step212.M'.d27 then Chain3Step212.M'.d74 else Chain3Step212.M'.d85
        d39 : (\x40. if True then x40 else Bool : Type -> Type) (if False then Bool else Bool)
        d39 = if if Chain3Step212.M'.d25 then d36 else Chain3Step212.M'.d56 then if True then Chain3Step212.M'.d45 else Chain3Step212.M'.d72 else if Chain3Step212.M'.d101 then p1 else p2
        d41 : if False then if True then Bool else Bool else if False then Bool else Bool
        d41 = if if p1 then Chain3Step212.M'.d12 else True then if False then Chain3Step212.M'.d63 else p2 else if Chain3Step212.M'.d13 then p2 else False
        d42 : if True then if True then Bool else Bool else if False then Bool else Bool
        d42 = (\x43. (\x44. Chain3Step212.M'.d85 : Bool -> Bool) x43 : Bool -> Bool) (if Chain3Step212.M'.d87 then p2 else True)
        d45 : if True then if False then Bool else Bool else if False then Bool else Bool
        d45 = (\x46. if p2 then p1 else p2 : Bool -> Bool) (if Chain3Step212.M'.d34 then d16 else p1)
        d47 : if False then if True then Bool else Bool else if False then Bool else Bool
        d47 = if if Chain3Step212.M'.d87 then d32 else Chain3Step212.M'.d18 then if p2 then d27 else p1 else if d29 then Chain3Step212.M'.d50 else p1
        d48 : if False then if False then Bool else Bool else if True then Bool else Bool
        d48 = (\x49. (\x50. Chain3Step212.M'.d36 : Bool -> Bool) Chain3Step212.M'.d54 : Bool -> Bool) (if False then Chain3Step212.M'.d97 else p1)
        d51 : if False then if True then Bool else Bool else if True then Bool else Bool
        d51 = (\x52. (\x53. Chain3Step212.M'.d45 : Bool -> Bool) p2 : Bool -> Bool) (if Chain3Step212.M'.d87 then True else Chain3Step212.M'.d25)
        d54 : if True then if True then Bool else Bool else if True then Bool else Bool
        d54 = if if True then p2 else d5 then if d13 then False else True else if p2 then False else d12
        d55 : (\x57. if True then x57 else Bool : Type -> Type) (if True then Bool else Bool)
        d55 = (\x56. if False then False else Chain3Step212.M'.d72 : Bool -> Bool) (if d12 then Chain3Step212.M'.d59 else p1)
        d58 : (\x59. (\x60. Bool : Type -> Type) x59 : Type -> Type) (if False then Bool else Bool)
        d58 = if if p2 then p1 else p1 then if False then d48 else Chain3Step212.M'.d58 else if Chain3Step212.M'.d52 then d54 else p1
        d61 : if False then if False then Bool else Bool else if True then Bool else Bool
        d61 = (\x62. (\x63. Chain3Step212.M'.d44 : Bool -> Bool) False : Bool -> Bool) (if d42 then p1 else Chain3Step212.M'.d94)
        d64 : (\x65. (\x66. Bool : Type -> Type) x65 : Type -> Type) (if True then Bool else Bool)
        d64 = if if Chain3Step212.M'.d83 then False else p2 then if Chain3Step212.M'.d45 then False else Chain3Step212.M'.d90 else if Chain3Step212.M'.d85 then False else p1
        d67 : (\x70. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d67 = (\x68. (\x69. False : Bool -> Bool) Chain3Step212.M'.d72 : Bool -> Bool) (if False then True else p1)
        d71 : if True then if False then Bool else Bool else if True then Bool else Bool
        d71 = if if Chain3Step212.M'.d112 then Chain3Step212.M'.d36 else True then if Chain3Step212.M'.d18 then Chain3Step212.M'.d116 else False else if p1 then Chain3Step212.M'.d94 else True
        d72 : if False then if True then Bool else Bool else if False then Bool else Bool
        d72 = (\x73. (\x74. d25 : Bool -> Bool) Chain3Step212.M'.d25 : Bool -> Bool) (if p1 then p1 else Chain3Step212.M'.d53)
        d75 : (\x76. if True then x76 else Bool : Type -> Type) (if False then Bool else Bool)
        d75 = if if p1 then p1 else Chain3Step212.M'.d53 then if Chain3Step212.M'.d24 then Chain3Step212.M'.d33 else p1 else if Chain3Step212.M'.d35 then d12 else Chain3Step212.M'.d109
        d77 : if False then if True then Bool else Bool else if True then Bool else Bool
        d77 = if if False then p2 else p1 then if Chain3Step212.M'.d95 then Chain3Step212.M'.d83 else Chain3Step212.M'.d74 else if p2 then p2 else p2
        d78 : (\x79. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d78 = if if p1 then Chain3Step212.M'.d85 else p2 then if d24 then Chain3Step212.M'.d94 else False else if Chain3Step212.M'.d87 then Chain3Step212.M'.d36 else p2
        d80 : if True then if True then Bool else Bool else if True then Bool else Bool
        d80 = (\x81. (\x82. False : Bool -> Bool) d58 : Bool -> Bool) (if Chain3Step212.M'.d45 then Chain3Step212.M'.d50 else Chain3Step212.M'.d12)
        d83 : (\x85. if True then x85 else x85 : Type -> Type) (if False then Bool else Bool)
        d83 = (\x84. if Chain3Step212.M'.d58 then Chain3Step212.M'.d27 else d67 : Bool -> Bool) (if Chain3Step212.M'.d112 then True else p1)
        d86 : (\x88. (\x89. Bool : Type -> Type) x88 : Type -> Type) (if False then Bool else Bool)
        d86 = (\x87. if Chain3Step212.M'.d90 then x87 else True : Bool -> Bool) (if Chain3Step212.M'.d5 then d39 else Chain3Step212.M'.d101)
        d90 : if True then if False then Bool else Bool else if False then Bool else Bool
        d90 = if if True then Chain3Step212.M'.d63 else Chain3Step212.M'.d20 then if p1 then d18 else True else if Chain3Step212.M'.d13 then True else False
        d91 : (\x93. if False then x93 else x93 : Type -> Type) (if False then Bool else Bool)
        d91 = (\x92. if False then Chain3Step212.M'.d78 else x92 : Bool -> Bool) (if d64 then p2 else p1)
        d94 : (\x97. (\x98. x97 : Type -> Type) x97 : Type -> Type) (if True then Bool else Bool)
        d94 = (\x95. (\x96. Chain3Step212.M'.d95 : Bool -> Bool) Chain3Step212.M'.d114 : Bool -> Bool) (if Chain3Step212.M'.d30 then Chain3Step212.M'.d44 else p2)
        d99 : if False then if False then Bool else Bool else if True then Bool else Bool
        d99 = if if Chain3Step212.M'.d12 then False else p2 then if Chain3Step212.M'.d112 then True else Chain3Step212.M'.d33 else if True then p2 else d25
        d100 : if False then if True then Bool else Bool else if True then Bool else Bool
        d100 = (\x101. if x101 then x101 else x101 : Bool -> Bool) (if False then p1 else Chain3Step212.M'.d87)
        d102 : (\x104. (\x105. x104 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d102 = (\x103. if p1 then d4 else d100 : Bool -> Bool) (if d41 then d75 else False)
        d106 : if True then if True then Bool else Bool else if False then Bool else Bool
        d106 = if if Chain3Step212.M'.d49 then False else Chain3Step212.M'.d40 then if Chain3Step212.M'.d56 then d13 else p2 else if Chain3Step212.M'.d114 then p1 else d42
        d107 : if False then if True then Bool else Bool else if False then Bool else Bool
        d107 = (\x108. (\x109. Chain3Step212.M'.d104 : Bool -> Bool) Chain3Step212.M'.d104 : Bool -> Bool) (if Chain3Step212.M'.d24 then Chain3Step212.M'.d68 else p1)
        d110 : (\x112. (\x113. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d110 = (\x111. if x111 then d77 else d47 : Bool -> Bool) (if p1 then Chain3Step212.M'.d98 else Chain3Step212.M'.d47)
        d114 : if True then if False then Bool else Bool else if True then Bool else Bool
        d114 = (\x115. (\x116. False : Bool -> Bool) p1 : Bool -> Bool) (if Chain3Step212.M'.d99 then p2 else True)
        d117 : (\x120. if True then x120 else x120 : Type -> Type) (if False then Bool else Bool)
        d117 = (\x118. (\x119. Chain3Step212.M'.d44 : Bool -> Bool) p2 : Bool -> Bool) (if True then Chain3Step212.M'.d116 else d114)
        d121 : (\x122. if True then x122 else x122 : Type -> Type) (if True then Bool else Bool)
        d121 = if if Chain3Step212.M'.d83 then Chain3Step212.M'.d45 else d58 then if Chain3Step212.M'.d47 then Chain3Step212.M'.d50 else d27 else if p2 then d102 else Chain3Step212.M'.d85
        d123 : (\x124. (\x125. Bool : Type -> Type) x124 : Type -> Type) (if False then Bool else Bool)
        d123 = if if Chain3Step212.M'.d103 then Chain3Step212.M'.d44 else p1 then if Chain3Step212.M'.d49 then True else Chain3Step212.M'.d50 else if p1 then p2 else p2
        d126 : (\x127. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d126 = if if Chain3Step212.M'.d24 then Chain3Step212.M'.d93 else False then if True then Chain3Step212.M'.d97 else p2 else if p1 then Chain3Step212.M'.d8 else p2
        d128 : if True then if True then Bool else Bool else if False then Bool else Bool
        d128 = if if True then Chain3Step212.M'.d36 else Chain3Step212.M'.d85 then if d121 then Chain3Step212.M'.d12 else True else if Chain3Step212.M'.d58 then Chain3Step212.M'.d95 else True