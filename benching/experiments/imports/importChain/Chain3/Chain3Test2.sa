module Chain3Test2 where
    import Chain3Step22
    module M(p1: if True then Bool else Bool)(p2: (\x3. if False then Bool else Bool : Type -> Type) Bool) where
        d4 : (\x5. if False then x5 else x5 : Type -> Type) (if True then Bool else Bool)
        d4 = if if Chain3Step22.M'.d115 then p1 else Chain3Step22.M'.d103 then if p2 then p2 else True else if p1 then Chain3Step22.M'.d37 else p1
        d6 : if True then if True then Bool else Bool else if True then Bool else Bool
        d6 = (\x7. (\x8. x8 : Bool -> Bool) False : Bool -> Bool) (if False then Chain3Step22.M'.d106 else False)
        d9 : if True then if True then Bool else Bool else if False then Bool else Bool
        d9 = (\x10. if False then d4 else p2 : Bool -> Bool) (if d4 then True else d4)
        d11 : (\x12. (\x13. x12 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d11 = if if Chain3Step22.M'.d84 then Chain3Step22.M'.d129 else d4 then if p2 then Chain3Step22.M'.d129 else Chain3Step22.M'.d75 else if Chain3Step22.M'.d84 then Chain3Step22.M'.d109 else d4
        d14 : (\x15. (\x16. Bool : Type -> Type) x15 : Type -> Type) (if False then Bool else Bool)
        d14 = if if d9 then False else True then if Chain3Step22.M'.d42 then Chain3Step22.M'.d39 else True else if False then d6 else Chain3Step22.M'.d65
        d17 : (\x20. if True then x20 else Bool : Type -> Type) (if False then Bool else Bool)
        d17 = (\x18. (\x19. Chain3Step22.M'.d61 : Bool -> Bool) p1 : Bool -> Bool) (if p1 then Chain3Step22.M'.d106 else False)
        d21 : if False then if True then Bool else Bool else if True then Bool else Bool
        d21 = (\x22. if Chain3Step22.M'.d101 then True else True : Bool -> Bool) (if True then Chain3Step22.M'.d34 else p2)
        d23 : (\x25. (\x26. x26 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d23 = (\x24. if Chain3Step22.M'.d84 then d4 else Chain3Step22.M'.d135 : Bool -> Bool) (if Chain3Step22.M'.d22 then d11 else d14)
        d27 : (\x28. if True then Bool else x28 : Type -> Type) (if True then Bool else Bool)
        d27 = if if Chain3Step22.M'.d115 then True else False then if Chain3Step22.M'.d120 then p2 else p2 else if Chain3Step22.M'.d36 then p2 else d14
        d29 : if True then if True then Bool else Bool else if False then Bool else Bool
        d29 = (\x30. if Chain3Step22.M'.d103 then x30 else True : Bool -> Bool) (if False then p2 else p1)
        d31 : (\x32. (\x33. Bool : Type -> Type) x32 : Type -> Type) (if False then Bool else Bool)
        d31 = if if Chain3Step22.M'.d57 then True else True then if d27 then Chain3Step22.M'.d45 else p1 else if d14 then True else True
        d34 : if False then if False then Bool else Bool else if True then Bool else Bool
        d34 = if if p1 then d31 else Chain3Step22.M'.d36 then if d17 then Chain3Step22.M'.d109 else d29 else if p1 then False else d29
        d35 : if True then if False then Bool else Bool else if False then Bool else Bool
        d35 = if if p1 then d9 else True then if True then Chain3Step22.M'.d6 else Chain3Step22.M'.d48 else if p2 then Chain3Step22.M'.d57 else Chain3Step22.M'.d36
        d36 : (\x37. if False then Bool else x37 : Type -> Type) (if True then Bool else Bool)
        d36 = if if d4 then Chain3Step22.M'.d77 else True then if p2 then Chain3Step22.M'.d84 else Chain3Step22.M'.d64 else if p2 then d11 else p2
        d38 : (\x39. (\x40. Bool : Type -> Type) x39 : Type -> Type) (if True then Bool else Bool)
        d38 = if if Chain3Step22.M'.d16 then Chain3Step22.M'.d120 else False then if True then Chain3Step22.M'.d39 else d17 else if True then p1 else False
        d41 : if False then if True then Bool else Bool else if True then Bool else Bool
        d41 = if if Chain3Step22.M'.d31 then Chain3Step22.M'.d68 else d17 then if p1 then Chain3Step22.M'.d77 else Chain3Step22.M'.d109 else if False then Chain3Step22.M'.d106 else Chain3Step22.M'.d50
        d42 : if True then if True then Bool else Bool else if False then Bool else Bool
        d42 = if if Chain3Step22.M'.d109 then False else Chain3Step22.M'.d45 then if Chain3Step22.M'.d22 then p2 else p2 else if d21 then Chain3Step22.M'.d103 else True
        d43 : (\x44. (\x45. x45 : Type -> Type) x44 : Type -> Type) (if False then Bool else Bool)
        d43 = if if Chain3Step22.M'.d135 then d17 else Chain3Step22.M'.d34 then if p1 then False else p1 else if Chain3Step22.M'.d91 then Chain3Step22.M'.d34 else d31
        d46 : (\x49. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d46 = (\x47. (\x48. d21 : Bool -> Bool) Chain3Step22.M'.d16 : Bool -> Bool) (if False then Chain3Step22.M'.d34 else d14)
        d50 : (\x53. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d50 = (\x51. (\x52. Chain3Step22.M'.d79 : Bool -> Bool) d27 : Bool -> Bool) (if Chain3Step22.M'.d57 then d36 else d43)
        d54 : (\x55. if True then x55 else Bool : Type -> Type) (if True then Bool else Bool)
        d54 = if if Chain3Step22.M'.d42 then p2 else p1 then if True then Chain3Step22.M'.d77 else Chain3Step22.M'.d64 else if Chain3Step22.M'.d57 then d9 else p2
        d56 : (\x57. if True then x57 else x57 : Type -> Type) (if False then Bool else Bool)
        d56 = if if d36 then p2 else Chain3Step22.M'.d61 then if Chain3Step22.M'.d103 then Chain3Step22.M'.d42 else Chain3Step22.M'.d57 else if p2 then Chain3Step22.M'.d39 else d11
        d58 : if True then if True then Bool else Bool else if True then Bool else Bool
        d58 = (\x59. (\x60. Chain3Step22.M'.d130 : Bool -> Bool) Chain3Step22.M'.d21 : Bool -> Bool) (if Chain3Step22.M'.d22 then Chain3Step22.M'.d37 else Chain3Step22.M'.d48)
        d61 : if False then if True then Bool else Bool else if False then Bool else Bool
        d61 = (\x62. if d27 then Chain3Step22.M'.d137 else x62 : Bool -> Bool) (if Chain3Step22.M'.d16 then p1 else d35)
        d63 : if False then if False then Bool else Bool else if False then Bool else Bool
        d63 = if if d61 then Chain3Step22.M'.d91 else Chain3Step22.M'.d61 then if False then Chain3Step22.M'.d68 else d29 else if False then d61 else d35
        d64 : (\x67. (\x68. x67 : Type -> Type) x67 : Type -> Type) (if False then Bool else Bool)
        d64 = (\x65. (\x66. True : Bool -> Bool) d43 : Bool -> Bool) (if True then d29 else Chain3Step22.M'.d68)
        d69 : (\x70. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d69 = if if d29 then Chain3Step22.M'.d24 else False then if d41 then d46 else d64 else if p1 then False else d38
        d71 : if True then if True then Bool else Bool else if True then Bool else Bool
        d71 = if if Chain3Step22.M'.d96 then Chain3Step22.M'.d11 else True then if p2 then True else d4 else if Chain3Step22.M'.d96 then Chain3Step22.M'.d21 else True
        d72 : if True then if True then Bool else Bool else if False then Bool else Bool
        d72 = if if Chain3Step22.M'.d115 then p2 else True then if p1 then Chain3Step22.M'.d31 else Chain3Step22.M'.d39 else if p1 then d50 else d35
        d73 : (\x75. if True then Bool else x75 : Type -> Type) (if True then Bool else Bool)
        d73 = (\x74. if d42 then Chain3Step22.M'.d115 else Chain3Step22.M'.d118 : Bool -> Bool) (if Chain3Step22.M'.d118 then p1 else d41)
        d76 : (\x77. if True then x77 else Bool : Type -> Type) (if False then Bool else Bool)
        d76 = if if True then p1 else Chain3Step22.M'.d113 then if d61 then Chain3Step22.M'.d96 else d54 else if True then p1 else d42
        d78 : if False then if True then Bool else Bool else if False then Bool else Bool
        d78 = if if p2 then d9 else Chain3Step22.M'.d16 then if Chain3Step22.M'.d135 then d41 else Chain3Step22.M'.d103 else if True then p1 else Chain3Step22.M'.d86
        d79 : (\x82. (\x83. Bool : Type -> Type) x82 : Type -> Type) (if True then Bool else Bool)
        d79 = (\x80. (\x81. x81 : Bool -> Bool) True : Bool -> Bool) (if p2 then True else False)
        d84 : if True then if False then Bool else Bool else if True then Bool else Bool
        d84 = (\x85. (\x86. p1 : Bool -> Bool) p1 : Bool -> Bool) (if Chain3Step22.M'.d101 then d11 else Chain3Step22.M'.d77)
        d87 : if True then if False then Bool else Bool else if True then Bool else Bool
        d87 = (\x88. (\x89. False : Bool -> Bool) Chain3Step22.M'.d93 : Bool -> Bool) (if d64 then Chain3Step22.M'.d93 else Chain3Step22.M'.d11)
        d90 : if True then if False then Bool else Bool else if False then Bool else Bool
        d90 = if if False then Chain3Step22.M'.d57 else Chain3Step22.M'.d11 then if p2 then p1 else p2 else if Chain3Step22.M'.d37 then Chain3Step22.M'.d103 else p1
        d91 : if True then if True then Bool else Bool else if False then Bool else Bool
        d91 = if if False then p1 else d14 then if Chain3Step22.M'.d57 then p2 else d63 else if p2 then d21 else d6
        d92 : if True then if True then Bool else Bool else if False then Bool else Bool
        d92 = if if False then Chain3Step22.M'.d93 else Chain3Step22.M'.d25 then if p1 then Chain3Step22.M'.d37 else p2 else if d73 then Chain3Step22.M'.d115 else Chain3Step22.M'.d120
        d93 : (\x95. (\x96. Bool : Type -> Type) x95 : Type -> Type) (if True then Bool else Bool)
        d93 = (\x94. if d29 then True else True : Bool -> Bool) (if d79 then Chain3Step22.M'.d11 else Chain3Step22.M'.d25)
        d97 : (\x99. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d97 = (\x98. if Chain3Step22.M'.d125 then p2 else p1 : Bool -> Bool) (if p1 then p2 else Chain3Step22.M'.d37)
        d100 : (\x101. if True then x101 else x101 : Type -> Type) (if False then Bool else Bool)
        d100 = if if d58 then Chain3Step22.M'.d118 else Chain3Step22.M'.d113 then if Chain3Step22.M'.d128 then p1 else Chain3Step22.M'.d130 else if d56 then Chain3Step22.M'.d115 else Chain3Step22.M'.d57
        d102 : (\x103. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d102 = if if Chain3Step22.M'.d96 then False else True then if d64 then p1 else d56 else if p2 then p2 else Chain3Step22.M'.d6
        d104 : (\x107. (\x108. x107 : Type -> Type) x107 : Type -> Type) (if True then Bool else Bool)
        d104 = (\x105. (\x106. Chain3Step22.M'.d21 : Bool -> Bool) False : Bool -> Bool) (if False then d17 else p1)
        d109 : (\x110. if False then Bool else x110 : Type -> Type) (if True then Bool else Bool)
        d109 = if if p2 then False else True then if False then p1 else True else if Chain3Step22.M'.d37 then p2 else Chain3Step22.M'.d120
        d111 : (\x113. (\x114. Bool : Type -> Type) x113 : Type -> Type) (if False then Bool else Bool)
        d111 = (\x112. if True then d61 else d50 : Bool -> Bool) (if d71 then Chain3Step22.M'.d36 else p2)
        d115 : if False then if False then Bool else Bool else if False then Bool else Bool
        d115 = (\x116. (\x117. p1 : Bool -> Bool) False : Bool -> Bool) (if Chain3Step22.M'.d25 then True else False)
        d118 : (\x120. if True then x120 else Bool : Type -> Type) (if False then Bool else Bool)
        d118 = (\x119. if Chain3Step22.M'.d128 then Chain3Step22.M'.d28 else False : Bool -> Bool) (if Chain3Step22.M'.d68 then p1 else d109)
        d121 : if False then if False then Bool else Bool else if False then Bool else Bool
        d121 = if if False then p2 else Chain3Step22.M'.d120 then if d58 then False else d50 else if False then Chain3Step22.M'.d137 else Chain3Step22.M'.d48
        d122 : if False then if False then Bool else Bool else if True then Bool else Bool
        d122 = (\x123. (\x124. x124 : Bool -> Bool) d11 : Bool -> Bool) (if d63 then Chain3Step22.M'.d36 else d14)
        d125 : (\x126. (\x127. Bool : Type -> Type) x126 : Type -> Type) (if False then Bool else Bool)
        d125 = if if Chain3Step22.M'.d84 then d90 else p2 then if False then Chain3Step22.M'.d137 else Chain3Step22.M'.d37 else if Chain3Step22.M'.d93 then Chain3Step22.M'.d79 else d71