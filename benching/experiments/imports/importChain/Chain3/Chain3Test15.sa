module Chain3Test15 where
    import Chain3Step215
    module M(p1: if False then Bool else Bool)(p2: (\x3. if False then Bool else x3 : Type -> Type) Bool) where
        d4 : if True then if True then Bool else Bool else if True then Bool else Bool
        d4 = (\x5. (\x6. False : Bool -> Bool) x5 : Bool -> Bool) (if False then Chain3Step215.M'.d73 else Chain3Step215.M'.d73)
        d7 : if False then if True then Bool else Bool else if False then Bool else Bool
        d7 = if if False then Chain3Step215.M'.d59 else Chain3Step215.M'.d104 then if p2 then Chain3Step215.M'.d57 else Chain3Step215.M'.d100 else if p1 then p1 else d4
        d8 : (\x10. (\x11. Bool : Type -> Type) x10 : Type -> Type) (if True then Bool else Bool)
        d8 = (\x9. if d4 then p1 else p2 : Bool -> Bool) (if p1 then d4 else d4)
        d12 : (\x13. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d12 = if if p2 then Chain3Step215.M'.d88 else Chain3Step215.M'.d100 then if p1 then p2 else p1 else if Chain3Step215.M'.d39 then p2 else Chain3Step215.M'.d54
        d14 : (\x17. if True then Bool else x17 : Type -> Type) (if True then Bool else Bool)
        d14 = (\x15. (\x16. Chain3Step215.M'.d33 : Bool -> Bool) Chain3Step215.M'.d29 : Bool -> Bool) (if Chain3Step215.M'.d45 then Chain3Step215.M'.d90 else d7)
        d18 : (\x19. if True then x19 else x19 : Type -> Type) (if False then Bool else Bool)
        d18 = if if Chain3Step215.M'.d24 then Chain3Step215.M'.d58 else d7 then if Chain3Step215.M'.d88 then p2 else d7 else if d8 then Chain3Step215.M'.d95 else Chain3Step215.M'.d93
        d20 : (\x22. if True then x22 else Bool : Type -> Type) (if True then Bool else Bool)
        d20 = (\x21. if True then False else p2 : Bool -> Bool) (if Chain3Step215.M'.d116 then p1 else d14)
        d23 : if True then if False then Bool else Bool else if True then Bool else Bool
        d23 = (\x24. (\x25. d14 : Bool -> Bool) d7 : Bool -> Bool) (if Chain3Step215.M'.d28 then p1 else d18)
        d26 : (\x29. if True then x29 else x29 : Type -> Type) (if False then Bool else Bool)
        d26 = (\x27. (\x28. d4 : Bool -> Bool) Chain3Step215.M'.d9 : Bool -> Bool) (if d8 then p1 else d14)
        d30 : if True then if True then Bool else Bool else if False then Bool else Bool
        d30 = (\x31. if Chain3Step215.M'.d36 then p2 else d4 : Bool -> Bool) (if Chain3Step215.M'.d61 then p2 else False)
        d32 : if False then if False then Bool else Bool else if False then Bool else Bool
        d32 = (\x33. if Chain3Step215.M'.d28 then p2 else d14 : Bool -> Bool) (if True then Chain3Step215.M'.d55 else True)
        d34 : if True then if False then Bool else Bool else if True then Bool else Bool
        d34 = (\x35. (\x36. False : Bool -> Bool) x35 : Bool -> Bool) (if p1 then p2 else p1)
        d37 : if True then if False then Bool else Bool else if True then Bool else Bool
        d37 = (\x38. (\x39. Chain3Step215.M'.d31 : Bool -> Bool) Chain3Step215.M'.d82 : Bool -> Bool) (if d20 then Chain3Step215.M'.d45 else d20)
        d40 : if False then if True then Bool else Bool else if True then Bool else Bool
        d40 = if if p1 then Chain3Step215.M'.d28 else Chain3Step215.M'.d55 then if False then True else d4 else if Chain3Step215.M'.d61 then Chain3Step215.M'.d108 else d20
        d41 : (\x42. if True then x42 else Bool : Type -> Type) (if False then Bool else Bool)
        d41 = if if False then Chain3Step215.M'.d103 else False then if Chain3Step215.M'.d90 then p1 else False else if False then Chain3Step215.M'.d54 else p1
        d43 : if True then if False then Bool else Bool else if False then Bool else Bool
        d43 = if if Chain3Step215.M'.d108 then False else Chain3Step215.M'.d12 then if Chain3Step215.M'.d33 then True else False else if p2 then Chain3Step215.M'.d111 else False
        d44 : if True then if True then Bool else Bool else if False then Bool else Bool
        d44 = (\x45. (\x46. d37 : Bool -> Bool) Chain3Step215.M'.d78 : Bool -> Bool) (if d30 then d18 else p2)
        d47 : (\x50. (\x51. x50 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d47 = (\x48. (\x49. Chain3Step215.M'.d36 : Bool -> Bool) False : Bool -> Bool) (if Chain3Step215.M'.d107 then Chain3Step215.M'.d59 else Chain3Step215.M'.d12)
        d52 : (\x54. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d52 = (\x53. if x53 then d32 else True : Bool -> Bool) (if d26 then d20 else False)
        d55 : if False then if True then Bool else Bool else if True then Bool else Bool
        d55 = if if Chain3Step215.M'.d85 then True else Chain3Step215.M'.d33 then if Chain3Step215.M'.d9 then Chain3Step215.M'.d46 else True else if False then Chain3Step215.M'.d78 else Chain3Step215.M'.d53
        d56 : (\x57. (\x58. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d56 = if if Chain3Step215.M'.d103 then True else p1 then if p1 then p2 else p1 else if True then Chain3Step215.M'.d61 else d8
        d59 : if True then if False then Bool else Bool else if False then Bool else Bool
        d59 = (\x60. (\x61. x60 : Bool -> Bool) Chain3Step215.M'.d76 : Bool -> Bool) (if Chain3Step215.M'.d14 then d44 else d18)
        d62 : (\x63. if False then x63 else Bool : Type -> Type) (if True then Bool else Bool)
        d62 = if if p1 then False else Chain3Step215.M'.d103 then if Chain3Step215.M'.d41 then Chain3Step215.M'.d14 else d43 else if False then p1 else Chain3Step215.M'.d78
        d64 : if True then if False then Bool else Bool else if True then Bool else Bool
        d64 = if if False then p1 else p2 then if Chain3Step215.M'.d111 then False else p1 else if Chain3Step215.M'.d78 then p2 else d32
        d65 : (\x67. (\x68. x68 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d65 = (\x66. if Chain3Step215.M'.d119 then Chain3Step215.M'.d90 else Chain3Step215.M'.d103 : Bool -> Bool) (if Chain3Step215.M'.d107 then False else Chain3Step215.M'.d48)
        d69 : if True then if True then Bool else Bool else if True then Bool else Bool
        d69 = if if Chain3Step215.M'.d33 then True else p2 then if d64 then Chain3Step215.M'.d106 else True else if Chain3Step215.M'.d9 then p1 else Chain3Step215.M'.d24
        d70 : if True then if False then Bool else Bool else if False then Bool else Bool
        d70 = (\x71. (\x72. x72 : Bool -> Bool) d69 : Bool -> Bool) (if p2 then Chain3Step215.M'.d4 else d44)
        d73 : if False then if False then Bool else Bool else if False then Bool else Bool
        d73 = (\x74. (\x75. Chain3Step215.M'.d81 : Bool -> Bool) p1 : Bool -> Bool) (if Chain3Step215.M'.d46 then Chain3Step215.M'.d48 else p1)
        d76 : if False then if True then Bool else Bool else if True then Bool else Bool
        d76 = (\x77. (\x78. d64 : Bool -> Bool) x77 : Bool -> Bool) (if p2 then d40 else p1)
        d79 : if True then if True then Bool else Bool else if False then Bool else Bool
        d79 = (\x80. if x80 then Chain3Step215.M'.d104 else Chain3Step215.M'.d90 : Bool -> Bool) (if d59 then d41 else True)
        d81 : (\x82. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d81 = if if Chain3Step215.M'.d46 then d23 else Chain3Step215.M'.d48 then if Chain3Step215.M'.d82 then False else True else if Chain3Step215.M'.d9 then Chain3Step215.M'.d90 else Chain3Step215.M'.d9
        d83 : (\x84. if True then x84 else Bool : Type -> Type) (if False then Bool else Bool)
        d83 = if if p1 then p1 else d65 then if p2 then Chain3Step215.M'.d48 else Chain3Step215.M'.d58 else if p2 then Chain3Step215.M'.d31 else p1
        d85 : (\x86. (\x87. x86 : Type -> Type) x86 : Type -> Type) (if False then Bool else Bool)
        d85 = if if Chain3Step215.M'.d33 then Chain3Step215.M'.d111 else Chain3Step215.M'.d48 then if d62 then Chain3Step215.M'.d116 else True else if Chain3Step215.M'.d118 then d83 else p2
        d88 : (\x90. (\x91. x90 : Type -> Type) x90 : Type -> Type) (if True then Bool else Bool)
        d88 = (\x89. if d32 then Chain3Step215.M'.d100 else Chain3Step215.M'.d106 : Bool -> Bool) (if Chain3Step215.M'.d62 then False else Chain3Step215.M'.d106)
        d92 : (\x95. (\x96. Bool : Type -> Type) x95 : Type -> Type) (if True then Bool else Bool)
        d92 = (\x93. (\x94. True : Bool -> Bool) d37 : Bool -> Bool) (if d65 then Chain3Step215.M'.d111 else Chain3Step215.M'.d97)
        d97 : if False then if True then Bool else Bool else if False then Bool else Bool
        d97 = if if Chain3Step215.M'.d46 then d92 else Chain3Step215.M'.d73 then if d47 then d47 else Chain3Step215.M'.d9 else if Chain3Step215.M'.d88 then Chain3Step215.M'.d33 else p2
        d98 : (\x100. (\x101. x100 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d98 = (\x99. if Chain3Step215.M'.d55 then d43 else False : Bool -> Bool) (if Chain3Step215.M'.d107 then Chain3Step215.M'.d88 else Chain3Step215.M'.d24)
        d102 : if True then if True then Bool else Bool else if False then Bool else Bool
        d102 = if if p1 then Chain3Step215.M'.d29 else p2 then if d56 then Chain3Step215.M'.d119 else Chain3Step215.M'.d48 else if True then True else d59
        d103 : (\x106. if False then x106 else x106 : Type -> Type) (if True then Bool else Bool)
        d103 = (\x104. (\x105. True : Bool -> Bool) Chain3Step215.M'.d62 : Bool -> Bool) (if p2 then Chain3Step215.M'.d53 else False)
        d107 : if False then if False then Bool else Bool else if False then Bool else Bool
        d107 = if if d41 then False else d59 then if Chain3Step215.M'.d53 then False else p1 else if d102 then p1 else p1
        d108 : if False then if False then Bool else Bool else if True then Bool else Bool
        d108 = if if d83 then Chain3Step215.M'.d53 else p2 then if Chain3Step215.M'.d116 then Chain3Step215.M'.d100 else Chain3Step215.M'.d58 else if Chain3Step215.M'.d67 then d52 else Chain3Step215.M'.d119
        d109 : if False then if True then Bool else Bool else if True then Bool else Bool
        d109 = if if d44 then Chain3Step215.M'.d4 else p2 then if Chain3Step215.M'.d55 then True else d108 else if p1 then p1 else p1
        d110 : (\x112. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d110 = (\x111. if Chain3Step215.M'.d58 then Chain3Step215.M'.d82 else d52 : Bool -> Bool) (if Chain3Step215.M'.d88 then Chain3Step215.M'.d26 else p2)
        d113 : if False then if False then Bool else Bool else if False then Bool else Bool
        d113 = if if Chain3Step215.M'.d97 then d64 else d23 then if Chain3Step215.M'.d119 then True else False else if Chain3Step215.M'.d90 then p1 else True
        d114 : if False then if False then Bool else Bool else if True then Bool else Bool
        d114 = if if Chain3Step215.M'.d73 then Chain3Step215.M'.d81 else Chain3Step215.M'.d28 then if p1 then d14 else d12 else if Chain3Step215.M'.d31 then p2 else Chain3Step215.M'.d19
        d115 : if False then if True then Bool else Bool else if True then Bool else Bool
        d115 = (\x116. if False then Chain3Step215.M'.d104 else Chain3Step215.M'.d46 : Bool -> Bool) (if d103 then p2 else Chain3Step215.M'.d12)
        d117 : (\x119. (\x120. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d117 = (\x118. if d81 then True else Chain3Step215.M'.d57 : Bool -> Bool) (if p1 then p2 else Chain3Step215.M'.d12)
        d121 : if True then if False then Bool else Bool else if False then Bool else Bool
        d121 = if if d41 then p2 else Chain3Step215.M'.d104 then if p2 then Chain3Step215.M'.d116 else Chain3Step215.M'.d85 else if Chain3Step215.M'.d17 then Chain3Step215.M'.d100 else Chain3Step215.M'.d17
        d122 : (\x125. (\x126. Bool : Type -> Type) x125 : Type -> Type) (if False then Bool else Bool)
        d122 = (\x123. (\x124. Chain3Step215.M'.d55 : Bool -> Bool) Chain3Step215.M'.d78 : Bool -> Bool) (if Chain3Step215.M'.d54 then Chain3Step215.M'.d85 else Chain3Step215.M'.d39)
        d127 : if False then if False then Bool else Bool else if False then Bool else Bool
        d127 = if if False then True else p2 then if Chain3Step215.M'.d41 then Chain3Step215.M'.d116 else p1 else if d20 then Chain3Step215.M'.d107 else p2