module Chain3Test6 where
    import Chain3Step26
    module M(p1: (\x2. if True then Bool else Bool : Type -> Type) Bool)(p3: (\x4. if False then x4 else x4 : Type -> Type) Bool) where
        d5 : (\x6. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d5 = if if p3 then p1 else Chain3Step26.M'.d71 then if p3 then p1 else Chain3Step26.M'.d30 else if Chain3Step26.M'.d5 then Chain3Step26.M'.d45 else True
        d7 : (\x10. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d7 = (\x8. (\x9. False : Bool -> Bool) True : Bool -> Bool) (if d5 then p1 else Chain3Step26.M'.d119)
        d11 : (\x12. (\x13. Bool : Type -> Type) x12 : Type -> Type) (if False then Bool else Bool)
        d11 = if if Chain3Step26.M'.d49 then True else d7 then if d5 then Chain3Step26.M'.d54 else d5 else if p3 then p3 else Chain3Step26.M'.d18
        d14 : if False then if False then Bool else Bool else if True then Bool else Bool
        d14 = if if Chain3Step26.M'.d5 then p1 else p3 then if Chain3Step26.M'.d54 then p1 else d7 else if Chain3Step26.M'.d40 then Chain3Step26.M'.d24 else d11
        d15 : (\x16. if False then x16 else Bool : Type -> Type) (if False then Bool else Bool)
        d15 = if if True then Chain3Step26.M'.d52 else True then if d11 then True else Chain3Step26.M'.d83 else if Chain3Step26.M'.d18 then True else Chain3Step26.M'.d89
        d17 : if True then if True then Bool else Bool else if False then Bool else Bool
        d17 = if if Chain3Step26.M'.d51 then Chain3Step26.M'.d89 else Chain3Step26.M'.d31 then if True then p3 else Chain3Step26.M'.d24 else if Chain3Step26.M'.d50 then Chain3Step26.M'.d71 else Chain3Step26.M'.d24
        d18 : if False then if False then Bool else Bool else if False then Bool else Bool
        d18 = if if Chain3Step26.M'.d110 then Chain3Step26.M'.d78 else d7 then if d11 then Chain3Step26.M'.d52 else False else if True then p3 else Chain3Step26.M'.d61
        d19 : (\x22. if True then x22 else Bool : Type -> Type) (if True then Bool else Bool)
        d19 = (\x20. (\x21. Chain3Step26.M'.d89 : Bool -> Bool) True : Bool -> Bool) (if Chain3Step26.M'.d29 then d7 else Chain3Step26.M'.d5)
        d23 : if False then if False then Bool else Bool else if True then Bool else Bool
        d23 = if if p3 then p1 else p3 then if d7 then False else p1 else if p1 then Chain3Step26.M'.d8 else Chain3Step26.M'.d37
        d24 : if True then if True then Bool else Bool else if False then Bool else Bool
        d24 = (\x25. (\x26. d17 : Bool -> Bool) d23 : Bool -> Bool) (if d5 then Chain3Step26.M'.d45 else Chain3Step26.M'.d116)
        d27 : if True then if True then Bool else Bool else if True then Bool else Bool
        d27 = if if True then True else Chain3Step26.M'.d58 then if True then Chain3Step26.M'.d80 else True else if Chain3Step26.M'.d10 then p3 else False
        d28 : (\x30. (\x31. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d28 = (\x29. if d5 then d18 else False : Bool -> Bool) (if True then d15 else d24)
        d32 : (\x35. if True then x35 else Bool : Type -> Type) (if False then Bool else Bool)
        d32 = (\x33. (\x34. d28 : Bool -> Bool) Chain3Step26.M'.d61 : Bool -> Bool) (if Chain3Step26.M'.d91 then p1 else Chain3Step26.M'.d111)
        d36 : if True then if True then Bool else Bool else if True then Bool else Bool
        d36 = if if d24 then d11 else Chain3Step26.M'.d50 then if True then Chain3Step26.M'.d51 else Chain3Step26.M'.d24 else if d14 then p1 else Chain3Step26.M'.d8
        d37 : (\x40. (\x41. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d37 = (\x38. (\x39. False : Bool -> Bool) Chain3Step26.M'.d49 : Bool -> Bool) (if d14 then Chain3Step26.M'.d114 else Chain3Step26.M'.d76)
        d42 : (\x43. (\x44. x44 : Type -> Type) x43 : Type -> Type) (if False then Bool else Bool)
        d42 = if if True then False else Chain3Step26.M'.d49 then if Chain3Step26.M'.d119 then Chain3Step26.M'.d116 else Chain3Step26.M'.d5 else if True then p3 else Chain3Step26.M'.d81
        d45 : if True then if False then Bool else Bool else if False then Bool else Bool
        d45 = (\x46. (\x47. p1 : Bool -> Bool) Chain3Step26.M'.d29 : Bool -> Bool) (if d24 then d14 else d24)
        d48 : if False then if False then Bool else Bool else if True then Bool else Bool
        d48 = (\x49. if x49 then Chain3Step26.M'.d31 else Chain3Step26.M'.d50 : Bool -> Bool) (if True then Chain3Step26.M'.d47 else Chain3Step26.M'.d119)
        d50 : if False then if True then Bool else Bool else if True then Bool else Bool
        d50 = if if Chain3Step26.M'.d21 then p1 else p1 then if Chain3Step26.M'.d91 then p1 else Chain3Step26.M'.d74 else if False then Chain3Step26.M'.d119 else d18
        d51 : if False then if True then Bool else Bool else if False then Bool else Bool
        d51 = (\x52. (\x53. Chain3Step26.M'.d21 : Bool -> Bool) Chain3Step26.M'.d109 : Bool -> Bool) (if Chain3Step26.M'.d37 then p1 else d18)
        d54 : if True then if False then Bool else Bool else if True then Bool else Bool
        d54 = if if False then Chain3Step26.M'.d71 else d51 then if p1 then d23 else Chain3Step26.M'.d116 else if Chain3Step26.M'.d96 then Chain3Step26.M'.d30 else d27
        d55 : (\x56. if True then Bool else x56 : Type -> Type) (if False then Bool else Bool)
        d55 = if if Chain3Step26.M'.d45 then Chain3Step26.M'.d108 else d5 then if p3 then True else d24 else if Chain3Step26.M'.d47 then d27 else p3
        d57 : if False then if True then Bool else Bool else if False then Bool else Bool
        d57 = (\x58. if Chain3Step26.M'.d52 then p3 else False : Bool -> Bool) (if d37 then Chain3Step26.M'.d54 else Chain3Step26.M'.d91)
        d59 : if True then if True then Bool else Bool else if False then Bool else Bool
        d59 = (\x60. if Chain3Step26.M'.d45 then d24 else p3 : Bool -> Bool) (if d23 then True else Chain3Step26.M'.d52)
        d61 : if False then if True then Bool else Bool else if True then Bool else Bool
        d61 = (\x62. (\x63. p1 : Bool -> Bool) p1 : Bool -> Bool) (if p3 then Chain3Step26.M'.d37 else Chain3Step26.M'.d68)
        d64 : (\x67. (\x68. Bool : Type -> Type) x67 : Type -> Type) (if True then Bool else Bool)
        d64 = (\x65. (\x66. p1 : Bool -> Bool) Chain3Step26.M'.d81 : Bool -> Bool) (if Chain3Step26.M'.d61 then Chain3Step26.M'.d109 else True)
        d69 : (\x70. (\x71. x71 : Type -> Type) x70 : Type -> Type) (if False then Bool else Bool)
        d69 = if if Chain3Step26.M'.d97 then p3 else True then if Chain3Step26.M'.d37 then False else False else if Chain3Step26.M'.d114 then Chain3Step26.M'.d55 else p1
        d72 : if True then if False then Bool else Bool else if False then Bool else Bool
        d72 = if if d42 then Chain3Step26.M'.d55 else True then if Chain3Step26.M'.d37 then Chain3Step26.M'.d30 else False else if Chain3Step26.M'.d80 then Chain3Step26.M'.d50 else p1
        d73 : (\x74. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d73 = if if Chain3Step26.M'.d91 then False else False then if Chain3Step26.M'.d55 then True else Chain3Step26.M'.d54 else if p1 then True else Chain3Step26.M'.d78
        d75 : (\x77. (\x78. Bool : Type -> Type) x77 : Type -> Type) (if False then Bool else Bool)
        d75 = (\x76. if d64 then False else Chain3Step26.M'.d49 : Bool -> Bool) (if d64 then p1 else Chain3Step26.M'.d108)
        d79 : if False then if True then Bool else Bool else if False then Bool else Bool
        d79 = (\x80. if p1 then x80 else Chain3Step26.M'.d5 : Bool -> Bool) (if Chain3Step26.M'.d89 then d37 else p1)
        d81 : if True then if False then Bool else Bool else if False then Bool else Bool
        d81 = if if p3 then Chain3Step26.M'.d10 else Chain3Step26.M'.d102 then if d19 then p1 else p1 else if d19 then Chain3Step26.M'.d58 else False
        d82 : if True then if False then Bool else Bool else if False then Bool else Bool
        d82 = if if False then Chain3Step26.M'.d49 else p3 then if d57 then p1 else False else if Chain3Step26.M'.d13 then p3 else Chain3Step26.M'.d78
        d83 : if False then if False then Bool else Bool else if True then Bool else Bool
        d83 = (\x84. if Chain3Step26.M'.d119 then x84 else d37 : Bool -> Bool) (if d45 then Chain3Step26.M'.d97 else d61)
        d85 : (\x88. if False then x88 else x88 : Type -> Type) (if False then Bool else Bool)
        d85 = (\x86. (\x87. x87 : Bool -> Bool) Chain3Step26.M'.d108 : Bool -> Bool) (if p1 then p1 else Chain3Step26.M'.d45)
        d89 : (\x92. (\x93. x92 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d89 = (\x90. (\x91. False : Bool -> Bool) Chain3Step26.M'.d74 : Bool -> Bool) (if False then p1 else True)
        d94 : (\x95. (\x96. Bool : Type -> Type) x95 : Type -> Type) (if True then Bool else Bool)
        d94 = if if d11 then d27 else Chain3Step26.M'.d71 then if False then p1 else d36 else if d64 then d23 else Chain3Step26.M'.d64
        d97 : (\x99. (\x100. x100 : Type -> Type) x99 : Type -> Type) (if True then Bool else Bool)
        d97 = (\x98. if Chain3Step26.M'.d8 then p3 else d14 : Bool -> Bool) (if Chain3Step26.M'.d54 then Chain3Step26.M'.d108 else p1)
        d101 : (\x104. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d101 = (\x102. (\x103. Chain3Step26.M'.d119 : Bool -> Bool) d89 : Bool -> Bool) (if False then Chain3Step26.M'.d75 else False)
        d105 : (\x107. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d105 = (\x106. if p3 then d51 else p1 : Bool -> Bool) (if Chain3Step26.M'.d81 then True else Chain3Step26.M'.d80)
        d108 : if False then if False then Bool else Bool else if False then Bool else Bool
        d108 = (\x109. if Chain3Step26.M'.d100 then x109 else Chain3Step26.M'.d104 : Bool -> Bool) (if p1 then p1 else d36)
        d110 : if True then if False then Bool else Bool else if True then Bool else Bool
        d110 = (\x111. (\x112. Chain3Step26.M'.d104 : Bool -> Bool) False : Bool -> Bool) (if d108 then p3 else Chain3Step26.M'.d71)
        d113 : if True then if False then Bool else Bool else if True then Bool else Bool
        d113 = (\x114. (\x115. p1 : Bool -> Bool) p1 : Bool -> Bool) (if d17 then d7 else Chain3Step26.M'.d10)
        d116 : if False then if False then Bool else Bool else if True then Bool else Bool
        d116 = if if d89 then Chain3Step26.M'.d71 else Chain3Step26.M'.d104 then if Chain3Step26.M'.d5 then False else d83 else if Chain3Step26.M'.d83 then Chain3Step26.M'.d33 else True
        d117 : if False then if True then Bool else Bool else if True then Bool else Bool
        d117 = (\x118. if p1 then Chain3Step26.M'.d47 else p1 : Bool -> Bool) (if True then True else True)
        d119 : if True then if True then Bool else Bool else if True then Bool else Bool
        d119 = if if d45 then False else d82 then if d75 then True else p1 else if False then Chain3Step26.M'.d10 else p1
        d120 : (\x121. (\x122. Bool : Type -> Type) x121 : Type -> Type) (if False then Bool else Bool)
        d120 = if if False then p1 else Chain3Step26.M'.d29 then if Chain3Step26.M'.d49 then Chain3Step26.M'.d75 else True else if Chain3Step26.M'.d29 then Chain3Step26.M'.d59 else d5
        d123 : (\x124. if True then x124 else Bool : Type -> Type) (if True then Bool else Bool)
        d123 = if if Chain3Step26.M'.d50 then d61 else Chain3Step26.M'.d54 then if p1 then Chain3Step26.M'.d74 else Chain3Step26.M'.d119 else if Chain3Step26.M'.d109 then Chain3Step26.M'.d5 else Chain3Step26.M'.d103
        d125 : (\x127. if False then x127 else x127 : Type -> Type) (if True then Bool else Bool)
        d125 = (\x126. if Chain3Step26.M'.d116 then p3 else False : Bool -> Bool) (if p1 then d108 else Chain3Step26.M'.d49)
        d128 : if False then if True then Bool else Bool else if False then Bool else Bool
        d128 = (\x129. if True then Chain3Step26.M'.d61 else d19 : Bool -> Bool) (if p3 then True else d82)