module Chain3Test1 where
    import Chain3Step21
    module M(p1: if False then Bool else Bool)(p2: if False then Bool else Bool) where
        d3 : (\x4. if False then x4 else Bool : Type -> Type) (if True then Bool else Bool)
        d3 = if if p2 then Chain3Step21.M'.d7 else Chain3Step21.M'.d33 then if Chain3Step21.M'.d105 then p1 else Chain3Step21.M'.d88 else if True then True else Chain3Step21.M'.d17
        d5 : (\x6. (\x7. Bool : Type -> Type) x6 : Type -> Type) (if True then Bool else Bool)
        d5 = if if d3 then d3 else p2 then if Chain3Step21.M'.d90 then p1 else p2 else if Chain3Step21.M'.d59 then d3 else False
        d8 : (\x9. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d8 = if if d5 then Chain3Step21.M'.d54 else d5 then if d5 then Chain3Step21.M'.d30 else p1 else if Chain3Step21.M'.d92 then d3 else d3
        d10 : (\x13. (\x14. x14 : Type -> Type) x13 : Type -> Type) (if False then Bool else Bool)
        d10 = (\x11. (\x12. Chain3Step21.M'.d37 : Bool -> Bool) Chain3Step21.M'.d18 : Bool -> Bool) (if Chain3Step21.M'.d9 then Chain3Step21.M'.d18 else True)
        d15 : if False then if False then Bool else Bool else if False then Bool else Bool
        d15 = if if d5 then Chain3Step21.M'.d94 else p2 then if Chain3Step21.M'.d87 then False else p1 else if Chain3Step21.M'.d17 then True else Chain3Step21.M'.d34
        d16 : if False then if False then Bool else Bool else if False then Bool else Bool
        d16 = if if p2 then False else p2 then if Chain3Step21.M'.d132 then d3 else p2 else if True then p1 else False
        d17 : (\x20. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d17 = (\x18. (\x19. x18 : Bool -> Bool) d16 : Bool -> Bool) (if False then Chain3Step21.M'.d27 else Chain3Step21.M'.d111)
        d21 : if False then if True then Bool else Bool else if True then Bool else Bool
        d21 = (\x22. if Chain3Step21.M'.d90 then d16 else p2 : Bool -> Bool) (if d10 then Chain3Step21.M'.d22 else Chain3Step21.M'.d56)
        d23 : (\x26. if True then x26 else x26 : Type -> Type) (if True then Bool else Bool)
        d23 = (\x24. (\x25. Chain3Step21.M'.d56 : Bool -> Bool) Chain3Step21.M'.d61 : Bool -> Bool) (if Chain3Step21.M'.d8 then Chain3Step21.M'.d113 else Chain3Step21.M'.d44)
        d27 : if False then if False then Bool else Bool else if False then Bool else Bool
        d27 = (\x28. if Chain3Step21.M'.d82 then True else p2 : Bool -> Bool) (if Chain3Step21.M'.d73 then d15 else Chain3Step21.M'.d70)
        d29 : if False then if True then Bool else Bool else if True then Bool else Bool
        d29 = if if p2 then p1 else d10 then if Chain3Step21.M'.d7 then Chain3Step21.M'.d54 else d3 else if False then p2 else Chain3Step21.M'.d132
        d30 : if True then if True then Bool else Bool else if True then Bool else Bool
        d30 = (\x31. (\x32. Chain3Step21.M'.d123 : Bool -> Bool) False : Bool -> Bool) (if p1 then Chain3Step21.M'.d132 else Chain3Step21.M'.d44)
        d33 : if True then if True then Bool else Bool else if True then Bool else Bool
        d33 = (\x34. if Chain3Step21.M'.d88 then True else d15 : Bool -> Bool) (if Chain3Step21.M'.d65 then False else p1)
        d35 : (\x37. (\x38. x38 : Type -> Type) x37 : Type -> Type) (if True then Bool else Bool)
        d35 = (\x36. if d3 then Chain3Step21.M'.d132 else Chain3Step21.M'.d115 : Bool -> Bool) (if p1 then d17 else Chain3Step21.M'.d8)
        d39 : if False then if False then Bool else Bool else if False then Bool else Bool
        d39 = if if p2 then Chain3Step21.M'.d77 else Chain3Step21.M'.d33 then if Chain3Step21.M'.d94 then p2 else d29 else if Chain3Step21.M'.d118 then Chain3Step21.M'.d107 else p2
        d40 : if True then if False then Bool else Bool else if True then Bool else Bool
        d40 = if if p1 then p2 else d23 then if Chain3Step21.M'.d70 then Chain3Step21.M'.d118 else Chain3Step21.M'.d77 else if False then Chain3Step21.M'.d44 else False
        d41 : if True then if False then Bool else Bool else if True then Bool else Bool
        d41 = if if d40 then d16 else p1 then if d40 then Chain3Step21.M'.d44 else False else if Chain3Step21.M'.d132 then False else p1
        d42 : (\x43. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d42 = if if p2 then Chain3Step21.M'.d127 else d8 then if False then p1 else d27 else if False then Chain3Step21.M'.d90 else d5
        d44 : if True then if True then Bool else Bool else if True then Bool else Bool
        d44 = if if False then Chain3Step21.M'.d102 else Chain3Step21.M'.d78 then if True then p2 else Chain3Step21.M'.d83 else if False then d33 else d41
        d45 : if False then if False then Bool else Bool else if True then Bool else Bool
        d45 = (\x46. (\x47. True : Bool -> Bool) Chain3Step21.M'.d49 : Bool -> Bool) (if d3 then Chain3Step21.M'.d94 else p1)
        d48 : (\x49. (\x50. Bool : Type -> Type) x49 : Type -> Type) (if False then Bool else Bool)
        d48 = if if True then False else Chain3Step21.M'.d83 then if Chain3Step21.M'.d102 then p2 else d10 else if d27 then Chain3Step21.M'.d87 else p2
        d51 : (\x53. (\x54. x53 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d51 = (\x52. if d23 then Chain3Step21.M'.d96 else Chain3Step21.M'.d127 : Bool -> Bool) (if p1 then d42 else p1)
        d55 : if True then if False then Bool else Bool else if True then Bool else Bool
        d55 = if if Chain3Step21.M'.d82 then Chain3Step21.M'.d73 else p2 then if Chain3Step21.M'.d70 then d21 else False else if Chain3Step21.M'.d33 then Chain3Step21.M'.d9 else Chain3Step21.M'.d107
        d56 : if True then if True then Bool else Bool else if True then Bool else Bool
        d56 = (\x57. (\x58. Chain3Step21.M'.d92 : Bool -> Bool) d8 : Bool -> Bool) (if False then p1 else d33)
        d59 : if False then if False then Bool else Bool else if False then Bool else Bool
        d59 = (\x60. if Chain3Step21.M'.d96 then False else d55 : Bool -> Bool) (if Chain3Step21.M'.d117 then Chain3Step21.M'.d22 else d41)
        d61 : (\x64. (\x65. x64 : Type -> Type) x64 : Type -> Type) (if True then Bool else Bool)
        d61 = (\x62. (\x63. Chain3Step21.M'.d60 : Bool -> Bool) p1 : Bool -> Bool) (if True then d10 else Chain3Step21.M'.d33)
        d66 : if True then if True then Bool else Bool else if True then Bool else Bool
        d66 = if if Chain3Step21.M'.d53 then False else d10 then if p2 then True else Chain3Step21.M'.d65 else if d33 then Chain3Step21.M'.d101 else Chain3Step21.M'.d127
        d67 : (\x70. if True then x70 else Bool : Type -> Type) (if True then Bool else Bool)
        d67 = (\x68. (\x69. Chain3Step21.M'.d115 : Bool -> Bool) True : Bool -> Bool) (if d41 then d3 else d8)
        d71 : (\x72. (\x73. x73 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d71 = if if Chain3Step21.M'.d127 then p1 else d16 then if True then Chain3Step21.M'.d56 else p1 else if False then False else Chain3Step21.M'.d90
        d74 : if False then if True then Bool else Bool else if False then Bool else Bool
        d74 = (\x75. (\x76. d27 : Bool -> Bool) Chain3Step21.M'.d14 : Bool -> Bool) (if Chain3Step21.M'.d77 then Chain3Step21.M'.d34 else False)
        d77 : (\x78. (\x79. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d77 = if if False then Chain3Step21.M'.d61 else d35 then if Chain3Step21.M'.d123 then True else Chain3Step21.M'.d33 else if Chain3Step21.M'.d14 then p1 else p2
        d80 : (\x81. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d80 = if if d15 then p1 else p2 then if Chain3Step21.M'.d54 then p1 else Chain3Step21.M'.d105 else if True then Chain3Step21.M'.d61 else d74
        d82 : (\x84. (\x85. x84 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d82 = (\x83. if Chain3Step21.M'.d102 then d40 else d30 : Bool -> Bool) (if Chain3Step21.M'.d70 then Chain3Step21.M'.d27 else True)
        d86 : if False then if False then Bool else Bool else if False then Bool else Bool
        d86 = if if Chain3Step21.M'.d28 then Chain3Step21.M'.d56 else Chain3Step21.M'.d14 then if Chain3Step21.M'.d90 then Chain3Step21.M'.d14 else p1 else if Chain3Step21.M'.d113 then True else True
        d87 : (\x89. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d87 = (\x88. if x88 then p1 else Chain3Step21.M'.d123 : Bool -> Bool) (if Chain3Step21.M'.d25 then d23 else Chain3Step21.M'.d117)
        d90 : if False then if True then Bool else Bool else if True then Bool else Bool
        d90 = if if d74 then Chain3Step21.M'.d113 else d67 then if d55 then False else Chain3Step21.M'.d9 else if p2 then Chain3Step21.M'.d117 else True
        d91 : (\x94. (\x95. x94 : Type -> Type) x94 : Type -> Type) (if False then Bool else Bool)
        d91 = (\x92. (\x93. Chain3Step21.M'.d115 : Bool -> Bool) True : Bool -> Bool) (if d10 then True else d86)
        d96 : (\x97. if True then Bool else x97 : Type -> Type) (if True then Bool else Bool)
        d96 = if if Chain3Step21.M'.d107 then d33 else p2 then if False then False else Chain3Step21.M'.d60 else if Chain3Step21.M'.d17 then Chain3Step21.M'.d56 else True
        d98 : (\x99. (\x100. x100 : Type -> Type) x99 : Type -> Type) (if True then Bool else Bool)
        d98 = if if Chain3Step21.M'.d53 then Chain3Step21.M'.d83 else Chain3Step21.M'.d115 then if Chain3Step21.M'.d14 then Chain3Step21.M'.d25 else p2 else if True then Chain3Step21.M'.d73 else Chain3Step21.M'.d9
        d101 : (\x102. (\x103. Bool : Type -> Type) x102 : Type -> Type) (if False then Bool else Bool)
        d101 = if if False then False else Chain3Step21.M'.d27 then if True then Chain3Step21.M'.d30 else Chain3Step21.M'.d41 else if p2 then Chain3Step21.M'.d61 else d66
        d104 : if False then if False then Bool else Bool else if False then Bool else Bool
        d104 = if if Chain3Step21.M'.d41 then Chain3Step21.M'.d65 else Chain3Step21.M'.d96 then if False then d45 else p2 else if True then False else Chain3Step21.M'.d34
        d105 : (\x107. (\x108. x108 : Type -> Type) x107 : Type -> Type) (if False then Bool else Bool)
        d105 = (\x106. if True then d67 else d67 : Bool -> Bool) (if Chain3Step21.M'.d90 then p1 else Chain3Step21.M'.d41)
        d109 : if True then if True then Bool else Bool else if True then Bool else Bool
        d109 = (\x110. if x110 then Chain3Step21.M'.d54 else d96 : Bool -> Bool) (if d40 then d77 else False)
        d111 : if True then if False then Bool else Bool else if False then Bool else Bool
        d111 = if if Chain3Step21.M'.d61 then True else d67 then if False then p1 else False else if p1 then Chain3Step21.M'.d41 else p1
        d112 : if True then if False then Bool else Bool else if False then Bool else Bool
        d112 = (\x113. if Chain3Step21.M'.d118 then Chain3Step21.M'.d28 else d33 : Bool -> Bool) (if Chain3Step21.M'.d65 then Chain3Step21.M'.d123 else True)
        d114 : (\x116. if True then Bool else x116 : Type -> Type) (if False then Bool else Bool)
        d114 = (\x115. if d44 then p1 else d80 : Bool -> Bool) (if Chain3Step21.M'.d115 then d3 else d91)
        d117 : if False then if False then Bool else Bool else if True then Bool else Bool
        d117 = if if False then Chain3Step21.M'.d73 else Chain3Step21.M'.d83 then if p2 then Chain3Step21.M'.d14 else Chain3Step21.M'.d101 else if Chain3Step21.M'.d22 then d77 else d74
        d118 : (\x120. (\x121. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d118 = (\x119. if False then d39 else d71 : Bool -> Bool) (if Chain3Step21.M'.d101 then False else Chain3Step21.M'.d44)
        d122 : if True then if False then Bool else Bool else if False then Bool else Bool
        d122 = if if p1 then Chain3Step21.M'.d65 else False then if p2 then True else Chain3Step21.M'.d44 else if False then p1 else d21
        d123 : if True then if True then Bool else Bool else if True then Bool else Bool
        d123 = (\x124. (\x125. x124 : Bool -> Bool) d86 : Bool -> Bool) (if Chain3Step21.M'.d54 then Chain3Step21.M'.d132 else p1)