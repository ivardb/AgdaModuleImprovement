module Chain3Test3 where
    import Chain3Step23
    module M(p1: if True then Bool else Bool)(p2: if False then Bool else Bool) where
        d3 : (\x6. (\x7. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d3 = (\x4. (\x5. Chain3Step23.M'.d75 : Bool -> Bool) p1 : Bool -> Bool) (if Chain3Step23.M'.d83 then False else False)
        d8 : (\x9. (\x10. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d8 = if if p1 then Chain3Step23.M'.d97 else Chain3Step23.M'.d54 then if d3 then Chain3Step23.M'.d47 else d3 else if Chain3Step23.M'.d98 then d3 else Chain3Step23.M'.d68
        d11 : if True then if False then Bool else Bool else if False then Bool else Bool
        d11 = if if True then Chain3Step23.M'.d90 else p2 then if False then False else d3 else if d3 then Chain3Step23.M'.d99 else Chain3Step23.M'.d107
        d12 : if True then if True then Bool else Bool else if True then Bool else Bool
        d12 = (\x13. (\x14. Chain3Step23.M'.d107 : Bool -> Bool) False : Bool -> Bool) (if Chain3Step23.M'.d115 then d8 else d8)
        d15 : if True then if True then Bool else Bool else if False then Bool else Bool
        d15 = (\x16. if p1 then Chain3Step23.M'.d60 else Chain3Step23.M'.d41 : Bool -> Bool) (if d8 then p1 else p2)
        d17 : (\x18. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d17 = if if Chain3Step23.M'.d104 then False else Chain3Step23.M'.d47 then if p2 then False else p2 else if Chain3Step23.M'.d64 then Chain3Step23.M'.d88 else Chain3Step23.M'.d29
        d19 : if False then if False then Bool else Bool else if True then Bool else Bool
        d19 = (\x20. (\x21. Chain3Step23.M'.d75 : Bool -> Bool) Chain3Step23.M'.d90 : Bool -> Bool) (if True then Chain3Step23.M'.d86 else d12)
        d22 : if False then if True then Bool else Bool else if False then Bool else Bool
        d22 = (\x23. if True then Chain3Step23.M'.d54 else p1 : Bool -> Bool) (if p2 then p1 else Chain3Step23.M'.d75)
        d24 : if True then if True then Bool else Bool else if False then Bool else Bool
        d24 = if if p2 then Chain3Step23.M'.d86 else False then if Chain3Step23.M'.d59 then Chain3Step23.M'.d27 else d17 else if Chain3Step23.M'.d88 then Chain3Step23.M'.d106 else Chain3Step23.M'.d27
        d25 : if False then if False then Bool else Bool else if True then Bool else Bool
        d25 = (\x26. if d3 then Chain3Step23.M'.d54 else Chain3Step23.M'.d18 : Bool -> Bool) (if False then True else d17)
        d27 : (\x28. (\x29. Bool : Type -> Type) x28 : Type -> Type) (if True then Bool else Bool)
        d27 = if if Chain3Step23.M'.d115 then Chain3Step23.M'.d50 else False then if Chain3Step23.M'.d30 then d25 else Chain3Step23.M'.d15 else if p2 then True else d15
        d30 : if False then if False then Bool else Bool else if True then Bool else Bool
        d30 = if if Chain3Step23.M'.d27 then d22 else Chain3Step23.M'.d64 then if Chain3Step23.M'.d104 then Chain3Step23.M'.d14 else Chain3Step23.M'.d35 else if d25 then Chain3Step23.M'.d67 else Chain3Step23.M'.d15
        d31 : (\x32. if False then Bool else x32 : Type -> Type) (if False then Bool else Bool)
        d31 = if if p2 then Chain3Step23.M'.d62 else p2 then if Chain3Step23.M'.d62 then d17 else True else if Chain3Step23.M'.d67 then Chain3Step23.M'.d27 else p1
        d33 : if True then if True then Bool else Bool else if True then Bool else Bool
        d33 = if if p2 then d12 else Chain3Step23.M'.d71 then if p1 then False else True else if Chain3Step23.M'.d107 then p2 else Chain3Step23.M'.d15
        d34 : if True then if True then Bool else Bool else if True then Bool else Bool
        d34 = (\x35. if Chain3Step23.M'.d27 then True else x35 : Bool -> Bool) (if Chain3Step23.M'.d13 then True else True)
        d36 : (\x37. (\x38. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d36 = if if Chain3Step23.M'.d30 then d11 else Chain3Step23.M'.d107 then if False then Chain3Step23.M'.d60 else Chain3Step23.M'.d107 else if Chain3Step23.M'.d22 then Chain3Step23.M'.d104 else Chain3Step23.M'.d113
        d39 : (\x41. (\x42. x41 : Type -> Type) x41 : Type -> Type) (if False then Bool else Bool)
        d39 = (\x40. if p1 then Chain3Step23.M'.d64 else p2 : Bool -> Bool) (if d34 then Chain3Step23.M'.d35 else Chain3Step23.M'.d6)
        d43 : if True then if False then Bool else Bool else if True then Bool else Bool
        d43 = if if True then Chain3Step23.M'.d111 else Chain3Step23.M'.d105 then if True then False else Chain3Step23.M'.d22 else if d25 then d34 else False
        d44 : if False then if False then Bool else Bool else if True then Bool else Bool
        d44 = if if True then p1 else Chain3Step23.M'.d29 then if d22 then Chain3Step23.M'.d59 else d19 else if p1 then Chain3Step23.M'.d35 else Chain3Step23.M'.d29
        d45 : (\x48. (\x49. Bool : Type -> Type) x48 : Type -> Type) (if True then Bool else Bool)
        d45 = (\x46. (\x47. False : Bool -> Bool) Chain3Step23.M'.d88 : Bool -> Bool) (if p1 then Chain3Step23.M'.d20 else p2)
        d50 : (\x51. (\x52. Bool : Type -> Type) x51 : Type -> Type) (if True then Bool else Bool)
        d50 = if if p2 then Chain3Step23.M'.d41 else d34 then if d22 then Chain3Step23.M'.d107 else p1 else if Chain3Step23.M'.d105 then d24 else d19
        d53 : (\x54. if False then x54 else x54 : Type -> Type) (if True then Bool else Bool)
        d53 = if if p1 then False else Chain3Step23.M'.d17 then if Chain3Step23.M'.d35 then d11 else p1 else if Chain3Step23.M'.d38 then d24 else p1
        d55 : if False then if True then Bool else Bool else if True then Bool else Bool
        d55 = (\x56. (\x57. d39 : Bool -> Bool) d30 : Bool -> Bool) (if False then p2 else d31)
        d58 : if True then if False then Bool else Bool else if False then Bool else Bool
        d58 = (\x59. (\x60. False : Bool -> Bool) False : Bool -> Bool) (if p2 then Chain3Step23.M'.d13 else Chain3Step23.M'.d20)
        d61 : (\x62. if True then Bool else x62 : Type -> Type) (if False then Bool else Bool)
        d61 = if if Chain3Step23.M'.d47 then Chain3Step23.M'.d20 else False then if Chain3Step23.M'.d27 then Chain3Step23.M'.d90 else p1 else if Chain3Step23.M'.d86 then Chain3Step23.M'.d99 else Chain3Step23.M'.d106
        d63 : if False then if False then Bool else Bool else if False then Bool else Bool
        d63 = if if p1 then True else True then if Chain3Step23.M'.d68 then Chain3Step23.M'.d50 else d61 else if Chain3Step23.M'.d13 then Chain3Step23.M'.d27 else Chain3Step23.M'.d84
        d64 : (\x66. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d64 = (\x65. if Chain3Step23.M'.d47 then p1 else False : Bool -> Bool) (if Chain3Step23.M'.d64 then Chain3Step23.M'.d115 else Chain3Step23.M'.d104)
        d67 : if False then if True then Bool else Bool else if False then Bool else Bool
        d67 = (\x68. if p2 then p2 else True : Bool -> Bool) (if True then p2 else Chain3Step23.M'.d62)
        d69 : (\x72. (\x73. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d69 = (\x70. (\x71. x70 : Bool -> Bool) x70 : Bool -> Bool) (if Chain3Step23.M'.d47 then d33 else True)
        d74 : if True then if True then Bool else Bool else if False then Bool else Bool
        d74 = (\x75. if d25 then d30 else Chain3Step23.M'.d83 : Bool -> Bool) (if False then Chain3Step23.M'.d98 else d36)
        d76 : if False then if False then Bool else Bool else if False then Bool else Bool
        d76 = if if d58 then False else Chain3Step23.M'.d8 then if p1 then Chain3Step23.M'.d35 else d67 else if d64 then p2 else Chain3Step23.M'.d97
        d77 : if False then if False then Bool else Bool else if False then Bool else Bool
        d77 = if if p2 then Chain3Step23.M'.d50 else d45 then if True then d76 else d17 else if True then p2 else Chain3Step23.M'.d109
        d78 : if True then if True then Bool else Bool else if True then Bool else Bool
        d78 = (\x79. (\x80. x80 : Bool -> Bool) Chain3Step23.M'.d84 : Bool -> Bool) (if False then True else True)
        d81 : (\x83. (\x84. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d81 = (\x82. if d64 then False else False : Bool -> Bool) (if d58 then d58 else Chain3Step23.M'.d98)
        d85 : if False then if True then Bool else Bool else if False then Bool else Bool
        d85 = if if p1 then Chain3Step23.M'.d77 else False then if d74 then p1 else True else if True then d17 else Chain3Step23.M'.d107
        d86 : (\x89. (\x90. x89 : Type -> Type) x89 : Type -> Type) (if False then Bool else Bool)
        d86 = (\x87. (\x88. Chain3Step23.M'.d8 : Bool -> Bool) d3 : Bool -> Bool) (if d19 then Chain3Step23.M'.d60 else p1)
        d91 : if False then if True then Bool else Bool else if False then Bool else Bool
        d91 = if if Chain3Step23.M'.d47 then True else Chain3Step23.M'.d88 then if Chain3Step23.M'.d54 then p2 else d33 else if d67 then d81 else p1
        d92 : if True then if True then Bool else Bool else if False then Bool else Bool
        d92 = (\x93. (\x94. d34 : Bool -> Bool) p2 : Bool -> Bool) (if Chain3Step23.M'.d29 then Chain3Step23.M'.d95 else p2)
        d95 : (\x97. if False then x97 else Bool : Type -> Type) (if False then Bool else Bool)
        d95 = (\x96. if d63 then Chain3Step23.M'.d13 else Chain3Step23.M'.d6 : Bool -> Bool) (if p2 then Chain3Step23.M'.d10 else False)
        d98 : if False then if False then Bool else Bool else if True then Bool else Bool
        d98 = if if Chain3Step23.M'.d106 then Chain3Step23.M'.d30 else Chain3Step23.M'.d97 then if d78 then Chain3Step23.M'.d71 else d81 else if Chain3Step23.M'.d54 then d30 else True
        d99 : if False then if True then Bool else Bool else if True then Bool else Bool
        d99 = if if False then p1 else p2 then if Chain3Step23.M'.d105 then d95 else p1 else if p1 then True else False
        d100 : if True then if False then Bool else Bool else if False then Bool else Bool
        d100 = (\x101. if Chain3Step23.M'.d8 then Chain3Step23.M'.d113 else x101 : Bool -> Bool) (if p1 then Chain3Step23.M'.d64 else True)
        d102 : (\x103. if False then x103 else x103 : Type -> Type) (if False then Bool else Bool)
        d102 = if if Chain3Step23.M'.d38 then Chain3Step23.M'.d104 else Chain3Step23.M'.d99 then if Chain3Step23.M'.d58 then d74 else Chain3Step23.M'.d115 else if Chain3Step23.M'.d15 then Chain3Step23.M'.d88 else d67
        d104 : (\x105. (\x106. Bool : Type -> Type) x105 : Type -> Type) (if True then Bool else Bool)
        d104 = if if Chain3Step23.M'.d113 then Chain3Step23.M'.d67 else p1 then if Chain3Step23.M'.d47 then Chain3Step23.M'.d15 else p2 else if p2 then Chain3Step23.M'.d50 else p1
        d107 : if False then if True then Bool else Bool else if False then Bool else Bool
        d107 = (\x108. (\x109. x108 : Bool -> Bool) Chain3Step23.M'.d99 : Bool -> Bool) (if d58 then Chain3Step23.M'.d88 else Chain3Step23.M'.d80)
        d110 : (\x113. (\x114. x114 : Type -> Type) x113 : Type -> Type) (if True then Bool else Bool)
        d110 = (\x111. (\x112. d22 : Bool -> Bool) True : Bool -> Bool) (if False then p2 else Chain3Step23.M'.d75)
        d115 : if False then if True then Bool else Bool else if True then Bool else Bool
        d115 = if if Chain3Step23.M'.d30 then d76 else Chain3Step23.M'.d86 then if d95 then d67 else Chain3Step23.M'.d90 else if Chain3Step23.M'.d47 then p2 else Chain3Step23.M'.d97
        d116 : if True then if False then Bool else Bool else if False then Bool else Bool
        d116 = if if True then p1 else p1 then if Chain3Step23.M'.d111 then Chain3Step23.M'.d58 else True else if Chain3Step23.M'.d24 then True else Chain3Step23.M'.d58
        d117 : (\x118. (\x119. Bool : Type -> Type) x118 : Type -> Type) (if True then Bool else Bool)
        d117 = if if p1 then Chain3Step23.M'.d80 else d34 then if Chain3Step23.M'.d90 then Chain3Step23.M'.d22 else p2 else if d58 then Chain3Step23.M'.d14 else d86
        d120 : if False then if True then Bool else Bool else if True then Bool else Bool
        d120 = if if Chain3Step23.M'.d99 then True else Chain3Step23.M'.d109 then if Chain3Step23.M'.d13 then Chain3Step23.M'.d98 else d30 else if p2 then p1 else d69