module Chain2Base9 where
    module M(p1: if False then Bool else Bool)(p2: (\x3. if True then Bool else Bool : Type -> Type) Bool) where
        d4 : (\x5. if False then Bool else x5 : Type -> Type) (if False then Bool else Bool)
        d4 = if if p1 then False else p1 then if p1 then p1 else True else if p2 then p2 else p1
        d6 : if False then if False then Bool else Bool else if True then Bool else Bool
        d6 = (\x7. if d4 then False else False : Bool -> Bool) (if d4 then d4 else p1)
        d8 : (\x9. (\x10. x10 : Type -> Type) x9 : Type -> Type) (if True then Bool else Bool)
        d8 = if if d6 then False else d6 then if p1 then False else p1 else if True then p2 else p1
        d11 : (\x12. if True then x12 else x12 : Type -> Type) (if False then Bool else Bool)
        d11 = if if d8 then p1 else d6 then if p1 then False else p2 else if True then p1 else d6
        d13 : if True then if True then Bool else Bool else if True then Bool else Bool
        d13 = if if p2 then p2 else True then if False then d8 else p2 else if p2 then False else p2
        d14 : if True then if True then Bool else Bool else if True then Bool else Bool
        d14 = if if False then False else d8 then if d11 then d13 else True else if False then True else p2
        d15 : if False then if True then Bool else Bool else if True then Bool else Bool
        d15 = if if p2 then d13 else p2 then if True then p2 else d6 else if p2 then False else d8
        d16 : (\x18. if True then Bool else x18 : Type -> Type) (if False then Bool else Bool)
        d16 = (\x17. if x17 then True else p1 : Bool -> Bool) (if p1 then d6 else p1)
        d19 : if False then if False then Bool else Bool else if True then Bool else Bool
        d19 = (\x20. if False then False else False : Bool -> Bool) (if d6 then True else p1)
        d21 : (\x22. (\x23. Bool : Type -> Type) x22 : Type -> Type) (if False then Bool else Bool)
        d21 = if if p1 then d15 else p1 then if d11 then d8 else d4 else if d6 then p2 else True
        d24 : if False then if True then Bool else Bool else if True then Bool else Bool
        d24 = (\x25. (\x26. True : Bool -> Bool) d21 : Bool -> Bool) (if False then True else p1)
        d27 : (\x28. if False then Bool else x28 : Type -> Type) (if True then Bool else Bool)
        d27 = if if d21 then d19 else False then if d21 then d8 else p2 else if p1 then False else p1
        d29 : if False then if False then Bool else Bool else if True then Bool else Bool
        d29 = (\x30. (\x31. d19 : Bool -> Bool) True : Bool -> Bool) (if d4 then d24 else False)
        d32 : (\x35. if True then Bool else x35 : Type -> Type) (if False then Bool else Bool)
        d32 = (\x33. (\x34. True : Bool -> Bool) x33 : Bool -> Bool) (if d4 then False else p2)
        d36 : (\x37. if True then Bool else x37 : Type -> Type) (if True then Bool else Bool)
        d36 = if if p2 then d6 else p2 then if True then False else p1 else if False then p2 else False
        d38 : if True then if True then Bool else Bool else if False then Bool else Bool
        d38 = if if p2 then d21 else p2 then if d16 then d36 else False else if p2 then d4 else d14
        d39 : if True then if False then Bool else Bool else if True then Bool else Bool
        d39 = if if False then p2 else p2 then if d24 then False else d16 else if d32 then d21 else d19
        d40 : (\x41. if True then Bool else x41 : Type -> Type) (if False then Bool else Bool)
        d40 = if if True then True else p1 then if p2 then d39 else False else if True then d39 else d38
        d42 : (\x43. if False then x43 else x43 : Type -> Type) (if False then Bool else Bool)
        d42 = if if p2 then d15 else False then if p1 then p2 else p1 else if p1 then True else p1
        d44 : (\x46. (\x47. x47 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d44 = (\x45. if x45 then p1 else d39 : Bool -> Bool) (if d39 then True else False)
        d48 : if True then if False then Bool else Bool else if False then Bool else Bool
        d48 = if if d14 then True else True then if d29 then p1 else p1 else if p2 then p1 else d14
        d49 : if False then if True then Bool else Bool else if False then Bool else Bool
        d49 = if if d36 then d44 else d6 then if p2 then False else d16 else if d21 then d32 else p1
        d50 : (\x51. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d50 = if if p1 then True else False then if True then d49 else d29 else if False then d21 else p1
        d52 : (\x54. (\x55. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d52 = (\x53. if p1 then True else d16 : Bool -> Bool) (if p1 then p2 else p1)
        d56 : if False then if False then Bool else Bool else if False then Bool else Bool
        d56 = (\x57. (\x58. False : Bool -> Bool) x57 : Bool -> Bool) (if p2 then d19 else p2)
        d59 : (\x60. if True then x60 else x60 : Type -> Type) (if False then Bool else Bool)
        d59 = if if p2 then True else p2 then if p1 then p2 else p1 else if True then False else True
        d61 : (\x64. if True then x64 else Bool : Type -> Type) (if False then Bool else Bool)
        d61 = (\x62. (\x63. x63 : Bool -> Bool) False : Bool -> Bool) (if d15 then p1 else p2)
        d65 : (\x66. (\x67. x66 : Type -> Type) x66 : Type -> Type) (if False then Bool else Bool)
        d65 = if if False then p2 else p2 then if True then True else p1 else if p2 then d44 else d50
        d68 : (\x70. (\x71. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d68 = (\x69. if d56 then True else d42 : Bool -> Bool) (if d38 then d40 else p2)
        d72 : if False then if True then Bool else Bool else if False then Bool else Bool
        d72 = if if False then False else d14 then if d15 then d59 else False else if False then p1 else False
        d73 : (\x74. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d73 = if if d27 then False else d52 then if p2 then p2 else d49 else if p2 then True else d59
        d75 : (\x77. if False then x77 else Bool : Type -> Type) (if False then Bool else Bool)
        d75 = (\x76. if x76 then True else False : Bool -> Bool) (if False then p2 else False)
        d78 : (\x81. (\x82. x81 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d78 = (\x79. (\x80. True : Bool -> Bool) d75 : Bool -> Bool) (if False then False else d42)
        d83 : if True then if True then Bool else Bool else if False then Bool else Bool
        d83 = (\x84. (\x85. d29 : Bool -> Bool) True : Bool -> Bool) (if d68 then True else p2)
        d86 : if True then if True then Bool else Bool else if False then Bool else Bool
        d86 = (\x87. if True then x87 else x87 : Bool -> Bool) (if p1 then p2 else p2)
        d88 : (\x91. if False then x91 else x91 : Type -> Type) (if False then Bool else Bool)
        d88 = (\x89. (\x90. d39 : Bool -> Bool) d86 : Bool -> Bool) (if False then p2 else d86)
        d92 : if False then if False then Bool else Bool else if False then Bool else Bool
        d92 = (\x93. (\x94. x93 : Bool -> Bool) d44 : Bool -> Bool) (if False then d29 else False)
        d95 : (\x96. if False then x96 else x96 : Type -> Type) (if False then Bool else Bool)
        d95 = if if p1 then p1 else False then if True then d61 else d49 else if False then True else d50
        d97 : if True then if False then Bool else Bool else if True then Bool else Bool
        d97 = (\x98. if p2 then False else d48 : Bool -> Bool) (if p2 then d21 else p2)
        d99 : if True then if True then Bool else Bool else if True then Bool else Bool
        d99 = if if d68 then True else d56 then if False then p2 else False else if p2 then d16 else False
        d100 : if True then if False then Bool else Bool else if False then Bool else Bool
        d100 = if if p2 then False else True then if False then True else True else if d36 then p2 else True
        d101 : (\x102. (\x103. x103 : Type -> Type) x102 : Type -> Type) (if False then Bool else Bool)
        d101 = if if False then d50 else True then if False then True else False else if True then p1 else True
        d104 : if True then if False then Bool else Bool else if True then Bool else Bool
        d104 = (\x105. (\x106. d97 : Bool -> Bool) False : Bool -> Bool) (if p2 then p1 else False)
        d107 : (\x110. (\x111. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d107 = (\x108. (\x109. False : Bool -> Bool) x108 : Bool -> Bool) (if False then True else True)
        d112 : (\x113. (\x114. x113 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d112 = if if False then p2 else d14 then if p1 then False else True else if True then True else d44
        d115 : if False then if True then Bool else Bool else if False then Bool else Bool
        d115 = if if d65 then p2 else d13 then if d36 then True else d104 else if d52 then d83 else True
        d116 : (\x118. (\x119. x118 : Type -> Type) x118 : Type -> Type) (if True then Bool else Bool)
        d116 = (\x117. if d48 then d52 else p2 : Bool -> Bool) (if False then d86 else p1)
        d120 : if True then if True then Bool else Bool else if True then Bool else Bool
        d120 = (\x121. if False then d21 else p1 : Bool -> Bool) (if p1 then d107 else True)
        d122 : (\x124. (\x125. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d122 = (\x123. if d107 then x123 else p1 : Bool -> Bool) (if True then d73 else True)
        d126 : if True then if True then Bool else Bool else if False then Bool else Bool
        d126 = (\x127. if False then d8 else True : Bool -> Bool) (if True then p2 else True)
    module M' = M (True) 