module Chain2Base13 where
    module M(p1: (\x2. if True then Bool else Bool : Type -> Type) Bool)(p3: (\x4. if True then Bool else x4 : Type -> Type) Bool) where
        d5 : (\x6. (\x7. Bool : Type -> Type) x6 : Type -> Type) (if False then Bool else Bool)
        d5 = if if False then False else True then if False then False else False else if p1 then p1 else False
        d8 : (\x9. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d8 = if if p1 then d5 else p1 then if p1 then False else p3 else if p1 then d5 else True
        d10 : (\x11. (\x12. Bool : Type -> Type) x11 : Type -> Type) (if False then Bool else Bool)
        d10 = if if d8 then d8 else d5 then if True then False else False else if d5 then True else d5
        d13 : (\x16. (\x17. Bool : Type -> Type) x16 : Type -> Type) (if True then Bool else Bool)
        d13 = (\x14. (\x15. True : Bool -> Bool) d8 : Bool -> Bool) (if False then d8 else True)
        d18 : (\x19. if False then x19 else Bool : Type -> Type) (if True then Bool else Bool)
        d18 = if if p3 then p1 else True then if d13 then True else p1 else if True then d13 else p1
        d20 : (\x21. if False then x21 else x21 : Type -> Type) (if False then Bool else Bool)
        d20 = if if p1 then p1 else d10 then if p3 then False else d8 else if True then p1 else p3
        d22 : if True then if True then Bool else Bool else if True then Bool else Bool
        d22 = (\x23. (\x24. p1 : Bool -> Bool) False : Bool -> Bool) (if d20 then d18 else p3)
        d25 : if True then if True then Bool else Bool else if True then Bool else Bool
        d25 = (\x26. if False then False else p1 : Bool -> Bool) (if d22 then d5 else False)
        d27 : (\x30. if True then x30 else Bool : Type -> Type) (if False then Bool else Bool)
        d27 = (\x28. (\x29. True : Bool -> Bool) p1 : Bool -> Bool) (if p3 then True else p3)
        d31 : if False then if True then Bool else Bool else if False then Bool else Bool
        d31 = (\x32. (\x33. d22 : Bool -> Bool) x32 : Bool -> Bool) (if d27 then True else p3)
        d34 : if False then if True then Bool else Bool else if True then Bool else Bool
        d34 = (\x35. (\x36. p1 : Bool -> Bool) d20 : Bool -> Bool) (if False then d13 else p3)
        d37 : (\x40. if False then Bool else x40 : Type -> Type) (if True then Bool else Bool)
        d37 = (\x38. (\x39. False : Bool -> Bool) p1 : Bool -> Bool) (if p3 then False else d25)
        d41 : (\x42. if True then Bool else x42 : Type -> Type) (if False then Bool else Bool)
        d41 = if if d8 then p1 else p1 then if False then False else False else if p1 then True else d31
        d43 : if True then if False then Bool else Bool else if False then Bool else Bool
        d43 = if if True then False else d41 then if True then d37 else p1 else if False then d10 else p1
        d44 : if False then if False then Bool else Bool else if False then Bool else Bool
        d44 = if if d34 then d34 else d37 then if p3 then p1 else False else if p3 then True else d34
        d45 : if True then if True then Bool else Bool else if False then Bool else Bool
        d45 = if if p3 then p1 else True then if True then d41 else d31 else if p3 then p3 else d37
        d46 : (\x49. if True then x49 else x49 : Type -> Type) (if True then Bool else Bool)
        d46 = (\x47. (\x48. d22 : Bool -> Bool) True : Bool -> Bool) (if d31 then d18 else False)
        d50 : (\x53. if True then Bool else x53 : Type -> Type) (if False then Bool else Bool)
        d50 = (\x51. (\x52. p1 : Bool -> Bool) x51 : Bool -> Bool) (if p3 then d18 else p1)
        d54 : (\x56. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d54 = (\x55. if True then d27 else False : Bool -> Bool) (if p3 then p1 else p1)
        d57 : if True then if True then Bool else Bool else if True then Bool else Bool
        d57 = if if p3 then d13 else d41 then if d25 then True else d31 else if p3 then p1 else d44
        d58 : (\x59. (\x60. x60 : Type -> Type) x59 : Type -> Type) (if False then Bool else Bool)
        d58 = if if p3 then d37 else True then if d20 then True else p1 else if d5 then d18 else p3
        d61 : if False then if False then Bool else Bool else if False then Bool else Bool
        d61 = if if p1 then p3 else p1 then if p1 then d50 else p1 else if p3 then d34 else False
        d62 : if False then if True then Bool else Bool else if False then Bool else Bool
        d62 = (\x63. if d25 then x63 else d13 : Bool -> Bool) (if p3 then d58 else d27)
        d64 : (\x65. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d64 = if if False then False else p1 then if p1 then True else False else if d13 then False else True
        d66 : (\x68. (\x69. Bool : Type -> Type) x68 : Type -> Type) (if False then Bool else Bool)
        d66 = (\x67. if p3 then p3 else x67 : Bool -> Bool) (if d37 then d44 else d45)
        d70 : if False then if True then Bool else Bool else if True then Bool else Bool
        d70 = if if True then p1 else d41 then if p1 then True else False else if d66 then d54 else p1
        d71 : if True then if True then Bool else Bool else if False then Bool else Bool
        d71 = (\x72. (\x73. x72 : Bool -> Bool) d8 : Bool -> Bool) (if False then d50 else p1)
        d74 : (\x76. (\x77. Bool : Type -> Type) x76 : Type -> Type) (if False then Bool else Bool)
        d74 = (\x75. if False then p1 else p3 : Bool -> Bool) (if True then d34 else p3)
        d78 : if True then if False then Bool else Bool else if True then Bool else Bool
        d78 = (\x79. (\x80. x79 : Bool -> Bool) False : Bool -> Bool) (if d44 then d44 else d10)
        d81 : (\x82. (\x83. x83 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d81 = if if d74 then d46 else p3 then if p3 then d25 else p3 else if True then p1 else True
        d84 : (\x86. (\x87. Bool : Type -> Type) x86 : Type -> Type) (if False then Bool else Bool)
        d84 = (\x85. if p1 then False else p3 : Bool -> Bool) (if d34 then p3 else d22)
        d88 : if False then if True then Bool else Bool else if False then Bool else Bool
        d88 = if if False then p1 else False then if d46 then p3 else d25 else if d10 then d31 else p1
        d89 : (\x91. if False then x91 else Bool : Type -> Type) (if False then Bool else Bool)
        d89 = (\x90. if False then x90 else d57 : Bool -> Bool) (if p3 then d58 else p3)
        d92 : if True then if False then Bool else Bool else if False then Bool else Bool
        d92 = if if d5 then d57 else d34 then if d25 then p1 else d13 else if False then p1 else p3
        d93 : (\x94. (\x95. x95 : Type -> Type) x94 : Type -> Type) (if True then Bool else Bool)
        d93 = if if False then d44 else d88 then if d45 then True else False else if d8 then d34 else p3
        d96 : (\x97. (\x98. x98 : Type -> Type) x97 : Type -> Type) (if False then Bool else Bool)
        d96 = if if d34 then p3 else True then if True then d81 else False else if d78 then True else p1
        d99 : (\x100. if False then Bool else x100 : Type -> Type) (if False then Bool else Bool)
        d99 = if if False then d93 else p1 then if p1 then d8 else False else if p1 then p1 else p1
        d101 : if True then if True then Bool else Bool else if True then Bool else Bool
        d101 = (\x102. (\x103. d99 : Bool -> Bool) p1 : Bool -> Bool) (if p3 then d61 else p1)
        d104 : if True then if False then Bool else Bool else if False then Bool else Bool
        d104 = if if False then True else d64 then if d27 then False else d13 else if p3 then False else p1
        d105 : if False then if False then Bool else Bool else if True then Bool else Bool
        d105 = (\x106. if True then True else p3 : Bool -> Bool) (if True then d13 else d62)
        d107 : (\x110. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d107 = (\x108. (\x109. False : Bool -> Bool) True : Bool -> Bool) (if d88 then p3 else p3)
        d111 : if False then if False then Bool else Bool else if True then Bool else Bool
        d111 = (\x112. if d92 then False else True : Bool -> Bool) (if p1 then False else p3)
        d113 : (\x114. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d113 = if if d54 then d20 else p3 then if True then p3 else d37 else if d50 then p1 else False
        d115 : if True then if True then Bool else Bool else if False then Bool else Bool
        d115 = if if False then p3 else p3 then if False then p3 else False else if p3 then d41 else True
        d116 : if False then if False then Bool else Bool else if False then Bool else Bool
        d116 = (\x117. (\x118. True : Bool -> Bool) True : Bool -> Bool) (if True then True else d84)
        d119 : (\x120. (\x121. Bool : Type -> Type) x120 : Type -> Type) (if False then Bool else Bool)
        d119 = if if d57 then p3 else p1 then if p3 then True else d22 else if p3 then d62 else p3
        d122 : (\x123. (\x124. x124 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d122 = if if d54 then d107 else False then if False then p3 else d54 else if p3 then p1 else False
        d125 : (\x126. (\x127. x127 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d125 = if if d71 then True else True then if d113 then p3 else d34 else if False then False else d62
        d128 : if True then if False then Bool else Bool else if True then Bool else Bool
        d128 = (\x129. if d96 then d25 else True : Bool -> Bool) (if True then d27 else p1)
        d130 : (\x132. if True then x132 else Bool : Type -> Type) (if True then Bool else Bool)
        d130 = (\x131. if False then p3 else p1 : Bool -> Bool) (if d13 then True else p3)
    module M' = M (False) 