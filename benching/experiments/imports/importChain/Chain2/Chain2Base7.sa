module Chain2Base7 where
    module M(p1: if True then Bool else Bool)(p2: if True then Bool else Bool) where
        d3 : if False then if False then Bool else Bool else if True then Bool else Bool
        d3 = (\x4. if p2 then True else p2 : Bool -> Bool) (if False then True else True)
        d5 : if True then if False then Bool else Bool else if False then Bool else Bool
        d5 = if if True then d3 else p2 then if p2 then p2 else p2 else if p2 then d3 else d3
        d6 : if False then if True then Bool else Bool else if True then Bool else Bool
        d6 = (\x7. (\x8. x8 : Bool -> Bool) True : Bool -> Bool) (if d5 then True else False)
        d9 : if False then if False then Bool else Bool else if False then Bool else Bool
        d9 = if if d6 then p2 else d3 then if False then p1 else d5 else if d3 then p2 else True
        d10 : if False then if True then Bool else Bool else if True then Bool else Bool
        d10 = if if p1 then d9 else p1 then if p2 then True else d3 else if d6 then p2 else d5
        d11 : if False then if False then Bool else Bool else if True then Bool else Bool
        d11 = if if d10 then d5 else p1 then if d10 then False else False else if True then False else False
        d12 : (\x14. if False then x14 else Bool : Type -> Type) (if True then Bool else Bool)
        d12 = (\x13. if x13 then True else x13 : Bool -> Bool) (if True then d10 else False)
        d15 : if True then if False then Bool else Bool else if False then Bool else Bool
        d15 = (\x16. (\x17. False : Bool -> Bool) d3 : Bool -> Bool) (if d12 then d3 else True)
        d18 : (\x19. (\x20. x19 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d18 = if if True then False else p1 then if p2 then d3 else False else if p2 then d5 else True
        d21 : (\x22. (\x23. x23 : Type -> Type) x22 : Type -> Type) (if False then Bool else Bool)
        d21 = if if d15 then d12 else d18 then if True then d5 else p1 else if False then p1 else True
        d24 : if False then if False then Bool else Bool else if True then Bool else Bool
        d24 = (\x25. if True then False else d9 : Bool -> Bool) (if False then d10 else False)
        d26 : (\x27. (\x28. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d26 = if if p1 then False else False then if False then d18 else p1 else if True then p1 else False
        d29 : (\x32. (\x33. x33 : Type -> Type) x32 : Type -> Type) (if True then Bool else Bool)
        d29 = (\x30. (\x31. d18 : Bool -> Bool) True : Bool -> Bool) (if d6 then d24 else False)
        d34 : if False then if False then Bool else Bool else if True then Bool else Bool
        d34 = if if True then d15 else True then if d26 then d21 else d9 else if p1 then d24 else d5
        d35 : (\x36. (\x37. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d35 = if if False then False else p2 then if d34 then p2 else p2 else if p1 then True else d5
        d38 : (\x40. if True then x40 else x40 : Type -> Type) (if True then Bool else Bool)
        d38 = (\x39. if True then d12 else p2 : Bool -> Bool) (if True then p2 else True)
        d41 : if True then if False then Bool else Bool else if True then Bool else Bool
        d41 = (\x42. (\x43. True : Bool -> Bool) d5 : Bool -> Bool) (if True then d10 else p1)
        d44 : (\x47. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d44 = (\x45. (\x46. x46 : Bool -> Bool) x45 : Bool -> Bool) (if d12 then p2 else d21)
        d48 : (\x49. (\x50. x49 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d48 = if if False then True else p2 then if d3 then p2 else d9 else if True then False else True
        d51 : if False then if False then Bool else Bool else if True then Bool else Bool
        d51 = if if False then d18 else True then if d10 then d10 else p2 else if p1 then d3 else True
        d52 : (\x53. (\x54. Bool : Type -> Type) x53 : Type -> Type) (if True then Bool else Bool)
        d52 = if if p2 then d48 else p1 then if d5 then d9 else True else if False then False else False
        d55 : if False then if True then Bool else Bool else if False then Bool else Bool
        d55 = if if p2 then d26 else False then if d21 then d34 else p1 else if True then p2 else p1
        d56 : (\x57. (\x58. x57 : Type -> Type) x57 : Type -> Type) (if True then Bool else Bool)
        d56 = if if False then d55 else d44 then if d18 then True else True else if True then p1 else True
        d59 : (\x61. (\x62. x62 : Type -> Type) x61 : Type -> Type) (if False then Bool else Bool)
        d59 = (\x60. if d55 then p2 else d35 : Bool -> Bool) (if d11 then False else d34)
        d63 : if True then if False then Bool else Bool else if True then Bool else Bool
        d63 = if if d18 then True else d35 then if d29 then d48 else True else if False then p2 else p1
        d64 : if False then if False then Bool else Bool else if True then Bool else Bool
        d64 = if if False then p1 else p2 then if p2 then False else p1 else if True then False else True
        d65 : if True then if True then Bool else Bool else if False then Bool else Bool
        d65 = (\x66. (\x67. True : Bool -> Bool) p2 : Bool -> Bool) (if False then d52 else p2)
        d68 : if True then if True then Bool else Bool else if True then Bool else Bool
        d68 = (\x69. if False then d18 else True : Bool -> Bool) (if p2 then d59 else p2)
        d70 : (\x73. if False then Bool else x73 : Type -> Type) (if False then Bool else Bool)
        d70 = (\x71. (\x72. d3 : Bool -> Bool) False : Bool -> Bool) (if d65 then d12 else p2)
        d74 : if False then if False then Bool else Bool else if True then Bool else Bool
        d74 = if if False then True else True then if False then d18 else d52 else if True then p2 else d35
        d75 : if True then if False then Bool else Bool else if False then Bool else Bool
        d75 = if if p1 then d10 else True then if False then d63 else d24 else if False then d38 else d64
        d76 : (\x77. (\x78. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d76 = if if d63 then p2 else d70 then if p1 then p2 else p2 else if d41 then d38 else False
        d79 : (\x81. (\x82. x81 : Type -> Type) x81 : Type -> Type) (if False then Bool else Bool)
        d79 = (\x80. if True then d48 else p2 : Bool -> Bool) (if p1 then d55 else d6)
        d83 : if False then if True then Bool else Bool else if False then Bool else Bool
        d83 = if if False then p1 else False then if True then d51 else p2 else if d44 then True else True
        d84 : if False then if True then Bool else Bool else if True then Bool else Bool
        d84 = if if d52 then p1 else d41 then if False then d9 else False else if d68 then d65 else p1
        d85 : if False then if True then Bool else Bool else if True then Bool else Bool
        d85 = if if True then p2 else True then if d41 then False else d70 else if p2 then d74 else p1
        d86 : if True then if False then Bool else Bool else if False then Bool else Bool
        d86 = (\x87. if x87 then d74 else False : Bool -> Bool) (if p2 then d21 else p1)
        d88 : (\x89. if True then x89 else Bool : Type -> Type) (if False then Bool else Bool)
        d88 = if if True then d29 else d6 then if p1 then d68 else False else if d56 then d18 else d9
        d90 : if True then if False then Bool else Bool else if True then Bool else Bool
        d90 = (\x91. (\x92. True : Bool -> Bool) False : Bool -> Bool) (if p2 then p2 else d21)
        d93 : if False then if False then Bool else Bool else if False then Bool else Bool
        d93 = if if p1 then p1 else p2 then if p1 then d29 else d70 else if False then d55 else p1
        d94 : (\x96. (\x97. x96 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d94 = (\x95. if False then d10 else x95 : Bool -> Bool) (if d48 then d85 else True)
        d98 : if True then if False then Bool else Bool else if False then Bool else Bool
        d98 = (\x99. if p2 then p2 else d64 : Bool -> Bool) (if d15 then d21 else p2)
        d100 : (\x103. (\x104. x104 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d100 = (\x101. (\x102. p1 : Bool -> Bool) True : Bool -> Bool) (if False then p2 else d52)
        d105 : if False then if True then Bool else Bool else if False then Bool else Bool
        d105 = if if False then p1 else d88 then if p1 then True else False else if p1 then d9 else False
        d106 : if True then if True then Bool else Bool else if False then Bool else Bool
        d106 = (\x107. if False then True else p1 : Bool -> Bool) (if d21 then p2 else True)
        d108 : if True then if True then Bool else Bool else if True then Bool else Bool
        d108 = (\x109. if d15 then d98 else d41 : Bool -> Bool) (if True then True else False)
        d110 : if True then if False then Bool else Bool else if True then Bool else Bool
        d110 = if if d100 then True else d108 then if True then d106 else d70 else if d38 then True else d52
        d111 : if False then if False then Bool else Bool else if False then Bool else Bool
        d111 = if if True then d34 else p2 then if p1 then d98 else d55 else if False then p1 else True
        d112 : (\x115. if True then Bool else x115 : Type -> Type) (if True then Bool else Bool)
        d112 = (\x113. (\x114. False : Bool -> Bool) d18 : Bool -> Bool) (if True then True else True)
        d116 : if False then if False then Bool else Bool else if False then Bool else Bool
        d116 = if if d86 then d6 else d48 then if d26 then True else False else if p1 then False else True
    module M' = M (False) 