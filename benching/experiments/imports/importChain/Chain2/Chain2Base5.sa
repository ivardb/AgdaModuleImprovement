module Chain2Base5 where
    module M(p1: (\x2. if False then x2 else x2 : Type -> Type) Bool)(p3: if True then Bool else Bool) where
        d4 : (\x5. if True then x5 else Bool : Type -> Type) (if True then Bool else Bool)
        d4 = if if p1 then p1 else False then if False then False else False else if p1 then p1 else True
        d6 : (\x9. if False then x9 else x9 : Type -> Type) (if True then Bool else Bool)
        d6 = (\x7. (\x8. d4 : Bool -> Bool) d4 : Bool -> Bool) (if False then True else d4)
        d10 : (\x11. (\x12. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d10 = if if d6 then d4 else p3 then if d4 then d4 else True else if False then p3 else p3
        d13 : (\x14. (\x15. x14 : Type -> Type) x14 : Type -> Type) (if False then Bool else Bool)
        d13 = if if p1 then p1 else True then if p1 then True else d4 else if p3 then p1 else False
        d16 : (\x18. (\x19. x19 : Type -> Type) x18 : Type -> Type) (if False then Bool else Bool)
        d16 = (\x17. if True then x17 else True : Bool -> Bool) (if True then d6 else False)
        d20 : (\x21. (\x22. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d20 = if if True then False else d13 then if True then d13 else d13 else if d13 then p1 else True
        d23 : if True then if True then Bool else Bool else if False then Bool else Bool
        d23 = (\x24. if d4 then p3 else x24 : Bool -> Bool) (if p3 then d13 else False)
        d25 : (\x28. (\x29. x29 : Type -> Type) x28 : Type -> Type) (if True then Bool else Bool)
        d25 = (\x26. (\x27. False : Bool -> Bool) False : Bool -> Bool) (if False then p1 else d23)
        d30 : if True then if False then Bool else Bool else if False then Bool else Bool
        d30 = (\x31. if d10 then False else True : Bool -> Bool) (if d16 then p3 else False)
        d32 : (\x34. if False then x34 else x34 : Type -> Type) (if True then Bool else Bool)
        d32 = (\x33. if False then False else d20 : Bool -> Bool) (if d13 then True else d13)
        d35 : if False then if False then Bool else Bool else if False then Bool else Bool
        d35 = (\x36. (\x37. p1 : Bool -> Bool) True : Bool -> Bool) (if d20 then False else d13)
        d38 : (\x40. if False then Bool else x40 : Type -> Type) (if True then Bool else Bool)
        d38 = (\x39. if d30 then d4 else False : Bool -> Bool) (if True then d35 else p1)
        d41 : if True then if True then Bool else Bool else if True then Bool else Bool
        d41 = (\x42. if x42 then x42 else d4 : Bool -> Bool) (if True then p1 else p1)
        d43 : if True then if False then Bool else Bool else if True then Bool else Bool
        d43 = (\x44. (\x45. True : Bool -> Bool) x44 : Bool -> Bool) (if p3 then p1 else True)
        d46 : if True then if False then Bool else Bool else if True then Bool else Bool
        d46 = (\x47. (\x48. d13 : Bool -> Bool) False : Bool -> Bool) (if p1 then False else d20)
        d49 : (\x50. if True then x50 else Bool : Type -> Type) (if True then Bool else Bool)
        d49 = if if p1 then False else d20 then if d35 then p1 else p3 else if False then p1 else p3
        d51 : (\x52. (\x53. Bool : Type -> Type) x52 : Type -> Type) (if False then Bool else Bool)
        d51 = if if d16 then d46 else d6 then if p1 then d32 else d35 else if False then p3 else False
        d54 : (\x57. (\x58. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d54 = (\x55. (\x56. True : Bool -> Bool) True : Bool -> Bool) (if False then False else True)
        d59 : if True then if False then Bool else Bool else if True then Bool else Bool
        d59 = if if p3 then d54 else d46 then if True then d23 else d30 else if p3 then p3 else p1
        d60 : (\x63. (\x64. x63 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d60 = (\x61. (\x62. False : Bool -> Bool) p1 : Bool -> Bool) (if d13 then d20 else p3)
        d65 : if False then if True then Bool else Bool else if True then Bool else Bool
        d65 = if if p3 then p1 else False then if p3 then p3 else d60 else if False then p3 else True
        d66 : (\x68. (\x69. Bool : Type -> Type) x68 : Type -> Type) (if False then Bool else Bool)
        d66 = (\x67. if d65 then x67 else True : Bool -> Bool) (if True then d54 else False)
        d70 : if False then if True then Bool else Bool else if True then Bool else Bool
        d70 = (\x71. (\x72. True : Bool -> Bool) True : Bool -> Bool) (if p3 then d41 else p3)
        d73 : if True then if False then Bool else Bool else if False then Bool else Bool
        d73 = if if d70 then True else False then if d25 then d41 else p1 else if False then p1 else d49
        d74 : if False then if False then Bool else Bool else if True then Bool else Bool
        d74 = (\x75. if d38 then p1 else x75 : Bool -> Bool) (if False then d6 else p1)
        d76 : if True then if True then Bool else Bool else if False then Bool else Bool
        d76 = if if p3 then True else p1 then if False then False else False else if p3 then p3 else d10
        d77 : (\x78. (\x79. x79 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d77 = if if True then d60 else False then if d13 then d65 else False else if d20 then d41 else p1
        d80 : (\x83. if True then x83 else Bool : Type -> Type) (if False then Bool else Bool)
        d80 = (\x81. (\x82. d76 : Bool -> Bool) False : Bool -> Bool) (if d10 then d60 else d59)
        d84 : if False then if True then Bool else Bool else if False then Bool else Bool
        d84 = (\x85. if d73 then x85 else x85 : Bool -> Bool) (if d59 then p1 else d25)
        d86 : (\x87. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d86 = if if False then False else False then if d25 then p1 else True else if False then True else d77
        d88 : if True then if True then Bool else Bool else if True then Bool else Bool
        d88 = if if p1 then d76 else True then if False then d77 else True else if p3 then p3 else d74
        d89 : (\x90. if False then x90 else x90 : Type -> Type) (if True then Bool else Bool)
        d89 = if if d54 then True else d74 then if False then True else True else if p1 then d16 else False
        d91 : if True then if False then Bool else Bool else if False then Bool else Bool
        d91 = if if p1 then p3 else p1 then if d77 then p3 else d65 else if d74 then True else d66
        d92 : if False then if False then Bool else Bool else if False then Bool else Bool
        d92 = (\x93. (\x94. x93 : Bool -> Bool) False : Bool -> Bool) (if d30 then p1 else d86)
        d95 : if False then if False then Bool else Bool else if False then Bool else Bool
        d95 = if if d89 then False else d20 then if d10 then False else p1 else if True then d54 else False
        d96 : if True then if True then Bool else Bool else if False then Bool else Bool
        d96 = if if True then p1 else True then if d49 then d70 else False else if d54 then p1 else False
        d97 : (\x98. if True then x98 else x98 : Type -> Type) (if True then Bool else Bool)
        d97 = if if p3 then True else d13 then if True then p1 else p3 else if False then p3 else True
        d99 : if False then if True then Bool else Bool else if False then Bool else Bool
        d99 = (\x100. if False then True else p3 : Bool -> Bool) (if d23 then True else p1)
        d101 : (\x102. if False then Bool else x102 : Type -> Type) (if True then Bool else Bool)
        d101 = if if True then False else d96 then if p3 then d46 else p3 else if d89 then d41 else d86
        d103 : if True then if False then Bool else Bool else if False then Bool else Bool
        d103 = (\x104. (\x105. d73 : Bool -> Bool) d66 : Bool -> Bool) (if True then True else p3)
        d106 : if True then if True then Bool else Bool else if True then Bool else Bool
        d106 = if if False then False else p3 then if p3 then False else p1 else if d32 then p1 else p3
        d107 : (\x110. (\x111. x110 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d107 = (\x108. (\x109. True : Bool -> Bool) False : Bool -> Bool) (if d32 then d41 else p3)
        d112 : if False then if True then Bool else Bool else if False then Bool else Bool
        d112 = if if True then p3 else False then if True then True else d91 else if d70 then p1 else p1
        d113 : if True then if False then Bool else Bool else if True then Bool else Bool
        d113 = (\x114. if False then False else False : Bool -> Bool) (if d106 then True else p1)
        d115 : (\x118. (\x119. Bool : Type -> Type) x118 : Type -> Type) (if False then Bool else Bool)
        d115 = (\x116. (\x117. p1 : Bool -> Bool) x116 : Bool -> Bool) (if p3 then d38 else False)
        d120 : if True then if False then Bool else Bool else if False then Bool else Bool
        d120 = (\x121. if False then True else x121 : Bool -> Bool) (if d54 then p1 else True)
        d122 : if True then if False then Bool else Bool else if False then Bool else Bool
        d122 = if if d74 then False else d73 then if d92 then True else d60 else if True then True else True
        d123 : if False then if True then Bool else Bool else if False then Bool else Bool
        d123 = (\x124. if d120 then d60 else d80 : Bool -> Bool) (if False then d32 else p3)
        d125 : (\x126. if True then Bool else x126 : Type -> Type) (if True then Bool else Bool)
        d125 = if if p3 then d20 else True then if False then d86 else False else if True then d95 else True
        d127 : (\x128. if True then x128 else Bool : Type -> Type) (if True then Bool else Bool)
        d127 = if if d35 then d46 else p3 then if False then False else p3 else if True then p1 else d99
    module M' = M (True) 