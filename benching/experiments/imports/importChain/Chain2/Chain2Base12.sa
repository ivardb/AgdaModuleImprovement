module Chain2Base12 where
    module M(p1: if False then Bool else Bool)(p2: if True then Bool else Bool) where
        d3 : (\x4. if False then x4 else Bool : Type -> Type) (if False then Bool else Bool)
        d3 = if if p2 then False else p1 then if p1 then p2 else True else if False then False else p2
        d5 : if False then if False then Bool else Bool else if False then Bool else Bool
        d5 = (\x6. (\x7. p1 : Bool -> Bool) d3 : Bool -> Bool) (if p2 then True else d3)
        d8 : (\x9. if False then x9 else x9 : Type -> Type) (if False then Bool else Bool)
        d8 = if if p1 then True else True then if d5 then False else p2 else if d5 then True else p1
        d10 : if True then if True then Bool else Bool else if False then Bool else Bool
        d10 = (\x11. if x11 then x11 else d3 : Bool -> Bool) (if p2 then p2 else True)
        d12 : if True then if False then Bool else Bool else if False then Bool else Bool
        d12 = (\x13. (\x14. d5 : Bool -> Bool) d5 : Bool -> Bool) (if False then d10 else d10)
        d15 : (\x16. if True then x16 else Bool : Type -> Type) (if False then Bool else Bool)
        d15 = if if d12 then True else False then if False then p1 else d5 else if p2 then d10 else p2
        d17 : (\x18. (\x19. Bool : Type -> Type) x18 : Type -> Type) (if True then Bool else Bool)
        d17 = if if False then p1 else p1 then if False then d5 else d5 else if d5 then p2 else p2
        d20 : if True then if True then Bool else Bool else if False then Bool else Bool
        d20 = if if p2 then d17 else False then if False then p2 else d17 else if True then d10 else False
        d21 : (\x22. (\x23. Bool : Type -> Type) x22 : Type -> Type) (if False then Bool else Bool)
        d21 = if if p2 then d5 else True then if d3 then False else False else if p1 then p1 else True
        d24 : if False then if False then Bool else Bool else if True then Bool else Bool
        d24 = if if True then p2 else p2 then if p1 then d21 else p1 else if p1 then p1 else d10
        d25 : (\x26. if True then x26 else x26 : Type -> Type) (if False then Bool else Bool)
        d25 = if if p2 then d21 else p1 then if False then d15 else p1 else if d10 then d10 else d15
        d27 : (\x30. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d27 = (\x28. (\x29. False : Bool -> Bool) True : Bool -> Bool) (if p2 then True else False)
        d31 : if True then if False then Bool else Bool else if True then Bool else Bool
        d31 = (\x32. (\x33. d25 : Bool -> Bool) p1 : Bool -> Bool) (if False then p1 else d3)
        d34 : (\x36. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d34 = (\x35. if d24 then True else d12 : Bool -> Bool) (if p2 then p2 else False)
        d37 : (\x40. if True then Bool else x40 : Type -> Type) (if False then Bool else Bool)
        d37 = (\x38. (\x39. False : Bool -> Bool) d12 : Bool -> Bool) (if False then d27 else d27)
        d41 : if True then if False then Bool else Bool else if False then Bool else Bool
        d41 = (\x42. (\x43. p2 : Bool -> Bool) x42 : Bool -> Bool) (if d27 then d17 else p1)
        d44 : if True then if False then Bool else Bool else if True then Bool else Bool
        d44 = if if p1 then True else False then if d21 then True else d12 else if d37 then True else False
        d45 : if True then if True then Bool else Bool else if True then Bool else Bool
        d45 = (\x46. if d15 then True else d37 : Bool -> Bool) (if True then p2 else True)
        d47 : if True then if True then Bool else Bool else if False then Bool else Bool
        d47 = (\x48. (\x49. d34 : Bool -> Bool) x48 : Bool -> Bool) (if True then False else True)
        d50 : if True then if False then Bool else Bool else if False then Bool else Bool
        d50 = (\x51. if p2 then False else p1 : Bool -> Bool) (if p1 then d21 else d8)
        d52 : (\x53. (\x54. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d52 = if if d37 then d3 else p2 then if d3 then p1 else p2 else if d3 then p1 else d3
        d55 : if False then if False then Bool else Bool else if True then Bool else Bool
        d55 = (\x56. if x56 then False else d50 : Bool -> Bool) (if p1 then d20 else p2)
        d57 : if True then if False then Bool else Bool else if False then Bool else Bool
        d57 = if if p2 then False else True then if d25 then False else d41 else if True then False else d47
        d58 : if True then if True then Bool else Bool else if False then Bool else Bool
        d58 = (\x59. if p2 then True else d52 : Bool -> Bool) (if False then p1 else d3)
        d60 : if True then if True then Bool else Bool else if False then Bool else Bool
        d60 = (\x61. if d50 then True else True : Bool -> Bool) (if d58 then True else p2)
        d62 : (\x63. (\x64. Bool : Type -> Type) x63 : Type -> Type) (if False then Bool else Bool)
        d62 = if if p1 then p1 else p2 then if d10 then False else True else if False then d20 else d41
        d65 : (\x66. if True then x66 else x66 : Type -> Type) (if True then Bool else Bool)
        d65 = if if d57 then p1 else d62 then if p1 then p1 else p1 else if True then d25 else d34
        d67 : if True then if True then Bool else Bool else if True then Bool else Bool
        d67 = if if True then True else False then if False then False else False else if d55 then p1 else p2
        d68 : if False then if False then Bool else Bool else if False then Bool else Bool
        d68 = (\x69. if d5 then False else False : Bool -> Bool) (if d12 then d3 else d8)
        d70 : (\x71. (\x72. x71 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d70 = if if True then True else d37 then if d60 then p2 else p2 else if p1 then False else d47
        d73 : if False then if False then Bool else Bool else if True then Bool else Bool
        d73 = (\x74. (\x75. d60 : Bool -> Bool) False : Bool -> Bool) (if d57 then p2 else d52)
        d76 : if True then if False then Bool else Bool else if True then Bool else Bool
        d76 = (\x77. if d21 then p1 else d34 : Bool -> Bool) (if p1 then d44 else False)
        d78 : if False then if True then Bool else Bool else if False then Bool else Bool
        d78 = if if True then True else p2 then if d25 then p1 else False else if d10 then p2 else p2
        d79 : (\x80. if True then Bool else x80 : Type -> Type) (if True then Bool else Bool)
        d79 = if if p1 then d8 else d70 then if False then p1 else p2 else if d65 then d57 else d27
        d81 : if True then if True then Bool else Bool else if True then Bool else Bool
        d81 = if if p2 then d79 else False then if d65 then False else p1 else if p1 then False else False
        d82 : if True then if False then Bool else Bool else if True then Bool else Bool
        d82 = (\x83. if False then False else True : Bool -> Bool) (if d20 then False else p1)
        d84 : if False then if True then Bool else Bool else if False then Bool else Bool
        d84 = if if p2 then False else p1 then if d17 then False else False else if p2 then p1 else d45
        d85 : if False then if True then Bool else Bool else if True then Bool else Bool
        d85 = if if True then True else d76 then if d5 then p2 else False else if False then True else p2
        d86 : (\x87. if False then x87 else x87 : Type -> Type) (if True then Bool else Bool)
        d86 = if if p1 then d85 else d45 then if True then p2 else True else if True then d20 else False
        d88 : if False then if True then Bool else Bool else if True then Bool else Bool
        d88 = if if p1 then p1 else d84 then if True then False else p1 else if p1 then p1 else p1
        d89 : if True then if True then Bool else Bool else if True then Bool else Bool
        d89 = (\x90. if d81 then True else True : Bool -> Bool) (if p1 then p1 else d78)
        d91 : if True then if False then Bool else Bool else if False then Bool else Bool
        d91 = (\x92. (\x93. x93 : Bool -> Bool) p1 : Bool -> Bool) (if d44 then d37 else False)
        d94 : (\x96. (\x97. x97 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d94 = (\x95. if d68 then False else p1 : Bool -> Bool) (if False then d27 else True)
        d98 : if True then if True then Bool else Bool else if True then Bool else Bool
        d98 = (\x99. if True then p1 else True : Bool -> Bool) (if False then p1 else d34)
        d100 : (\x101. (\x102. x102 : Type -> Type) x101 : Type -> Type) (if True then Bool else Bool)
        d100 = if if d47 then p2 else True then if p1 then True else d45 else if True then True else True
        d103 : (\x105. if False then x105 else x105 : Type -> Type) (if False then Bool else Bool)
        d103 = (\x104. if x104 then False else False : Bool -> Bool) (if d70 then p1 else d89)
        d106 : if False then if False then Bool else Bool else if True then Bool else Bool
        d106 = if if p2 then p1 else p1 then if d24 then d34 else p2 else if d67 then p2 else False
        d107 : if False then if True then Bool else Bool else if False then Bool else Bool
        d107 = (\x108. (\x109. x109 : Bool -> Bool) d70 : Bool -> Bool) (if d10 then True else True)
        d110 : (\x111. (\x112. x111 : Type -> Type) x111 : Type -> Type) (if False then Bool else Bool)
        d110 = if if p2 then p2 else True then if p2 then p1 else d58 else if True then p1 else False
        d113 : if True then if False then Bool else Bool else if False then Bool else Bool
        d113 = (\x114. (\x115. x114 : Bool -> Bool) p1 : Bool -> Bool) (if p1 then True else d76)
    module M' = M (True) 