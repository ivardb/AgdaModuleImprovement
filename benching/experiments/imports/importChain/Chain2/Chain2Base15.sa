module Chain2Base15 where
    module M(p1: (\x2. if True then x2 else Bool : Type -> Type) Bool)(p3: if True then Bool else Bool) where
        d4 : if False then if False then Bool else Bool else if True then Bool else Bool
        d4 = (\x5. if True then False else x5 : Bool -> Bool) (if p1 then p1 else p1)
        d6 : (\x7. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d6 = if if p1 then True else p3 then if d4 then p3 else d4 else if d4 then False else p1
        d8 : if True then if True then Bool else Bool else if False then Bool else Bool
        d8 = if if True then p3 else d4 then if p3 then False else p1 else if False then p1 else d4
        d9 : (\x11. (\x12. x11 : Type -> Type) x11 : Type -> Type) (if True then Bool else Bool)
        d9 = (\x10. if False then d4 else d4 : Bool -> Bool) (if True then False else p3)
        d13 : (\x14. if False then x14 else x14 : Type -> Type) (if False then Bool else Bool)
        d13 = if if p3 then p3 else False then if d6 then False else d4 else if d9 then d9 else p1
        d15 : (\x16. (\x17. x17 : Type -> Type) x16 : Type -> Type) (if True then Bool else Bool)
        d15 = if if p1 then p3 else d13 then if p1 then p1 else p3 else if d9 then d8 else p3
        d18 : (\x19. if True then Bool else x19 : Type -> Type) (if True then Bool else Bool)
        d18 = if if d13 then p1 else True then if d6 then False else True else if p3 then True else True
        d20 : (\x21. if False then x21 else Bool : Type -> Type) (if False then Bool else Bool)
        d20 = if if d4 then p3 else d9 then if d6 then False else d13 else if d4 then d13 else d13
        d22 : (\x24. (\x25. x24 : Type -> Type) x24 : Type -> Type) (if True then Bool else Bool)
        d22 = (\x23. if p1 then d4 else d18 : Bool -> Bool) (if False then p1 else d8)
        d26 : (\x27. (\x28. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d26 = if if True then p1 else p1 then if False then p3 else p3 else if d18 then p3 else d20
        d29 : (\x30. (\x31. Bool : Type -> Type) x30 : Type -> Type) (if False then Bool else Bool)
        d29 = if if p1 then False else p1 then if False then False else True else if d20 then d22 else d22
        d32 : (\x33. (\x34. Bool : Type -> Type) x33 : Type -> Type) (if True then Bool else Bool)
        d32 = if if False then False else d22 then if d4 then p1 else p1 else if True then False else True
        d35 : (\x36. if False then x36 else Bool : Type -> Type) (if False then Bool else Bool)
        d35 = if if d32 then d20 else p1 then if False then p1 else True else if p1 then d22 else True
        d37 : if False then if False then Bool else Bool else if False then Bool else Bool
        d37 = if if d20 then p1 else p1 then if True then p1 else p3 else if d9 then d8 else False
        d38 : if True then if True then Bool else Bool else if True then Bool else Bool
        d38 = (\x39. (\x40. True : Bool -> Bool) False : Bool -> Bool) (if p1 then p1 else False)
        d41 : if True then if True then Bool else Bool else if False then Bool else Bool
        d41 = (\x42. if d32 then d8 else d32 : Bool -> Bool) (if d6 then p1 else True)
        d43 : if True then if False then Bool else Bool else if False then Bool else Bool
        d43 = if if True then d20 else p1 then if False then p1 else d4 else if p3 then d29 else p1
        d44 : if True then if True then Bool else Bool else if True then Bool else Bool
        d44 = if if p3 then d41 else d15 then if True then d8 else True else if False then False else p1
        d45 : if False then if False then Bool else Bool else if True then Bool else Bool
        d45 = if if False then d18 else d35 then if False then p3 else False else if d8 then p1 else d9
        d46 : (\x49. (\x50. x49 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d46 = (\x47. (\x48. p3 : Bool -> Bool) p1 : Bool -> Bool) (if p1 then True else d6)
        d51 : if False then if False then Bool else Bool else if True then Bool else Bool
        d51 = (\x52. (\x53. d9 : Bool -> Bool) d13 : Bool -> Bool) (if d26 then False else True)
        d54 : if True then if False then Bool else Bool else if True then Bool else Bool
        d54 = (\x55. (\x56. x56 : Bool -> Bool) d15 : Bool -> Bool) (if p3 then p3 else False)
        d57 : if False then if True then Bool else Bool else if True then Bool else Bool
        d57 = (\x58. (\x59. d20 : Bool -> Bool) True : Bool -> Bool) (if False then p1 else p3)
        d60 : (\x61. if True then x61 else Bool : Type -> Type) (if True then Bool else Bool)
        d60 = if if p1 then True else d51 then if d18 then d4 else p1 else if d32 then d20 else False
        d62 : if False then if False then Bool else Bool else if False then Bool else Bool
        d62 = if if False then True else False then if True then d29 else p3 else if True then True else p3
        d63 : if True then if False then Bool else Bool else if True then Bool else Bool
        d63 = (\x64. (\x65. p3 : Bool -> Bool) p1 : Bool -> Bool) (if p1 then p1 else d13)
        d66 : if False then if False then Bool else Bool else if True then Bool else Bool
        d66 = if if p3 then d51 else p3 then if p3 then d57 else False else if d18 then p3 else d45
        d67 : (\x70. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d67 = (\x68. (\x69. d54 : Bool -> Bool) True : Bool -> Bool) (if d60 then p1 else p1)
        d71 : if True then if True then Bool else Bool else if True then Bool else Bool
        d71 = if if True then d35 else d38 then if d9 then d57 else False else if p3 then d63 else d51
        d72 : (\x73. if True then Bool else x73 : Type -> Type) (if False then Bool else Bool)
        d72 = if if p1 then d57 else d13 then if True then d18 else True else if d62 then p1 else d37
        d74 : (\x75. if False then Bool else x75 : Type -> Type) (if True then Bool else Bool)
        d74 = if if False then p1 else True then if True then d26 else p1 else if False then False else True
        d76 : (\x77. if True then x77 else x77 : Type -> Type) (if False then Bool else Bool)
        d76 = if if p1 then True else p1 then if d43 then d29 else p1 else if p3 then p1 else False
        d78 : if False then if False then Bool else Bool else if True then Bool else Bool
        d78 = if if p1 then p1 else True then if p3 then p3 else d62 else if p3 then p3 else p3
        d79 : (\x80. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d79 = if if False then d51 else d26 then if d74 then p1 else True else if p1 then p3 else False
        d81 : if True then if False then Bool else Bool else if True then Bool else Bool
        d81 = (\x82. (\x83. True : Bool -> Bool) p3 : Bool -> Bool) (if True then p1 else False)
        d84 : (\x87. (\x88. Bool : Type -> Type) x87 : Type -> Type) (if True then Bool else Bool)
        d84 = (\x85. (\x86. False : Bool -> Bool) d29 : Bool -> Bool) (if d35 then p1 else False)
        d89 : if False then if False then Bool else Bool else if False then Bool else Bool
        d89 = if if False then p3 else d13 then if p3 then p3 else False else if p3 then d76 else d4
        d90 : (\x91. (\x92. x92 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d90 = if if d32 then p3 else True then if True then d18 else False else if p3 then p3 else d60
        d93 : (\x96. if False then x96 else x96 : Type -> Type) (if False then Bool else Bool)
        d93 = (\x94. (\x95. d18 : Bool -> Bool) x94 : Bool -> Bool) (if True then False else p1)
        d97 : if True then if True then Bool else Bool else if True then Bool else Bool
        d97 = (\x98. if d8 then p3 else x98 : Bool -> Bool) (if False then d15 else d38)
        d99 : (\x102. if True then Bool else x102 : Type -> Type) (if True then Bool else Bool)
        d99 = (\x100. (\x101. x100 : Bool -> Bool) d71 : Bool -> Bool) (if p3 then d13 else False)
        d103 : if False then if True then Bool else Bool else if True then Bool else Bool
        d103 = if if False then d51 else d93 then if d89 then p1 else p3 else if False then False else d62
        d104 : (\x107. (\x108. x108 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d104 = (\x105. (\x106. d71 : Bool -> Bool) d22 : Bool -> Bool) (if False then p1 else False)
        d109 : (\x110. if False then x110 else x110 : Type -> Type) (if True then Bool else Bool)
        d109 = if if True then p3 else p1 then if False then False else p3 else if d37 then p3 else d29
        d111 : (\x114. (\x115. x115 : Type -> Type) x114 : Type -> Type) (if True then Bool else Bool)
        d111 = (\x112. (\x113. False : Bool -> Bool) p1 : Bool -> Bool) (if p1 then d18 else d43)
        d116 : (\x117. (\x118. x117 : Type -> Type) x117 : Type -> Type) (if False then Bool else Bool)
        d116 = if if d41 then d97 else False then if d46 then True else d15 else if d37 then d15 else d20
        d119 : if True then if False then Bool else Bool else if False then Bool else Bool
        d119 = if if d29 then p3 else False then if p3 then p1 else d78 else if True then True else d18
        d120 : if False then if True then Bool else Bool else if False then Bool else Bool
        d120 = if if True then False else d66 then if d93 then p1 else False else if p1 then True else d43
        d121 : (\x124. if True then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d121 = (\x122. (\x123. d111 : Bool -> Bool) True : Bool -> Bool) (if False then d79 else d15)
        d125 : if True then if True then Bool else Bool else if True then Bool else Bool
        d125 = (\x126. (\x127. x126 : Bool -> Bool) False : Bool -> Bool) (if p1 then p3 else True)
    module M' = M (True) 