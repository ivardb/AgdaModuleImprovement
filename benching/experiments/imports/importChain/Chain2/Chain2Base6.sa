module Chain2Base6 where
    module M(p1: (\x2. if False then Bool else Bool : Type -> Type) Bool)(p3: if False then Bool else Bool) where
        d4 : if True then if True then Bool else Bool else if True then Bool else Bool
        d4 = (\x5. if False then x5 else p1 : Bool -> Bool) (if p3 then False else p3)
        d6 : if False then if True then Bool else Bool else if True then Bool else Bool
        d6 = if if d4 then d4 else d4 then if p3 then False else d4 else if False then d4 else False
        d7 : if True then if True then Bool else Bool else if True then Bool else Bool
        d7 = (\x8. if d4 then p1 else p3 : Bool -> Bool) (if True then p1 else p3)
        d9 : if False then if False then Bool else Bool else if False then Bool else Bool
        d9 = (\x10. if True then d6 else d6 : Bool -> Bool) (if False then p1 else True)
        d11 : (\x13. (\x14. x13 : Type -> Type) x13 : Type -> Type) (if False then Bool else Bool)
        d11 = (\x12. if d4 then p3 else False : Bool -> Bool) (if p3 then d7 else p1)
        d15 : (\x16. (\x17. Bool : Type -> Type) x16 : Type -> Type) (if False then Bool else Bool)
        d15 = if if d4 then p3 else False then if p1 then False else True else if p3 then d4 else d9
        d18 : if True then if True then Bool else Bool else if True then Bool else Bool
        d18 = (\x19. (\x20. False : Bool -> Bool) p1 : Bool -> Bool) (if True then p3 else d4)
        d21 : (\x22. (\x23. x22 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d21 = if if True then False else False then if p3 then p1 else d18 else if p3 then p1 else True
        d24 : if False then if False then Bool else Bool else if False then Bool else Bool
        d24 = if if p3 then p1 else d21 then if d15 then False else False else if True then p3 else d7
        d25 : (\x28. (\x29. x29 : Type -> Type) x28 : Type -> Type) (if False then Bool else Bool)
        d25 = (\x26. (\x27. d4 : Bool -> Bool) p3 : Bool -> Bool) (if p1 then p1 else p1)
        d30 : if True then if False then Bool else Bool else if False then Bool else Bool
        d30 = if if p1 then d21 else d7 then if p3 then d9 else p1 else if p1 then p1 else d11
        d31 : (\x32. (\x33. x33 : Type -> Type) x32 : Type -> Type) (if True then Bool else Bool)
        d31 = if if True then p3 else p3 then if p3 then d24 else p3 else if False then True else p3
        d34 : (\x37. (\x38. x37 : Type -> Type) x37 : Type -> Type) (if True then Bool else Bool)
        d34 = (\x35. (\x36. d25 : Bool -> Bool) x35 : Bool -> Bool) (if True then True else p3)
        d39 : if True then if True then Bool else Bool else if False then Bool else Bool
        d39 = if if p3 then d6 else p1 then if d21 then False else p1 else if d15 then p1 else d25
        d40 : (\x41. (\x42. x42 : Type -> Type) x41 : Type -> Type) (if False then Bool else Bool)
        d40 = if if p1 then d30 else p1 then if d24 then p3 else False else if p3 then True else True
        d43 : if False then if True then Bool else Bool else if True then Bool else Bool
        d43 = if if p3 then False else p1 then if d34 then False else d30 else if p1 then False else p1
        d44 : (\x45. (\x46. Bool : Type -> Type) x45 : Type -> Type) (if False then Bool else Bool)
        d44 = if if False then d34 else p1 then if True then d7 else p3 else if p3 then False else d9
        d47 : (\x48. (\x49. Bool : Type -> Type) x48 : Type -> Type) (if True then Bool else Bool)
        d47 = if if True then False else p3 then if p3 then d6 else d43 else if p1 then d9 else d44
        d50 : (\x53. if True then x53 else x53 : Type -> Type) (if True then Bool else Bool)
        d50 = (\x51. (\x52. True : Bool -> Bool) d9 : Bool -> Bool) (if True then False else p1)
        d54 : if False then if False then Bool else Bool else if False then Bool else Bool
        d54 = if if d43 then d4 else d44 then if p3 then d34 else d43 else if True then False else False
        d55 : if True then if True then Bool else Bool else if True then Bool else Bool
        d55 = (\x56. if p3 then d25 else d50 : Bool -> Bool) (if p3 then False else True)
        d57 : if True then if False then Bool else Bool else if True then Bool else Bool
        d57 = (\x58. (\x59. d9 : Bool -> Bool) False : Bool -> Bool) (if d4 then p3 else False)
        d60 : (\x61. (\x62. Bool : Type -> Type) x61 : Type -> Type) (if False then Bool else Bool)
        d60 = if if p1 then d57 else p3 then if False then d50 else True else if d34 then d4 else False
        d63 : (\x64. (\x65. x65 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d63 = if if p1 then d21 else p3 then if False then True else d30 else if True then p1 else d6
        d66 : if True then if True then Bool else Bool else if False then Bool else Bool
        d66 = if if d54 then True else d34 then if p3 then d9 else True else if d50 then p1 else p3
        d67 : if False then if False then Bool else Bool else if False then Bool else Bool
        d67 = (\x68. (\x69. False : Bool -> Bool) False : Bool -> Bool) (if d21 then False else d55)
        d70 : if False then if False then Bool else Bool else if False then Bool else Bool
        d70 = (\x71. (\x72. d15 : Bool -> Bool) x71 : Bool -> Bool) (if p3 then True else d4)
        d73 : (\x74. if False then Bool else x74 : Type -> Type) (if False then Bool else Bool)
        d73 = if if d66 then p1 else False then if d4 then d63 else d34 else if p3 then p3 else p1
        d75 : (\x76. (\x77. x76 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d75 = if if p1 then d55 else d30 then if p1 then True else p3 else if True then False else d39
        d78 : if True then if True then Bool else Bool else if False then Bool else Bool
        d78 = if if True then p3 else d63 then if p3 then p1 else True else if False then p3 else p3
        d79 : (\x82. (\x83. x82 : Type -> Type) x82 : Type -> Type) (if False then Bool else Bool)
        d79 = (\x80. (\x81. d70 : Bool -> Bool) True : Bool -> Bool) (if False then False else d57)
        d84 : (\x86. if False then x86 else x86 : Type -> Type) (if False then Bool else Bool)
        d84 = (\x85. if False then p3 else p1 : Bool -> Bool) (if p1 then True else False)
        d87 : if False then if False then Bool else Bool else if True then Bool else Bool
        d87 = if if p3 then d39 else True then if True then True else d40 else if d40 then p1 else p1
        d88 : if True then if True then Bool else Bool else if True then Bool else Bool
        d88 = if if False then p1 else False then if d79 then p3 else p3 else if p1 then d24 else d43
        d89 : if True then if False then Bool else Bool else if False then Bool else Bool
        d89 = if if False then p1 else d18 then if d6 then p3 else d39 else if False then True else p1
        d90 : if True then if True then Bool else Bool else if False then Bool else Bool
        d90 = if if d21 then p3 else True then if p1 then False else p3 else if True then True else False
        d91 : if True then if True then Bool else Bool else if False then Bool else Bool
        d91 = if if p3 then p3 else p1 then if p3 then d66 else p3 else if d9 then p1 else True
        d92 : (\x93. (\x94. x93 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d92 = if if d15 then d40 else False then if False then d9 else p3 else if d30 then p1 else False
        d95 : if False then if False then Bool else Bool else if True then Bool else Bool
        d95 = (\x96. (\x97. True : Bool -> Bool) p3 : Bool -> Bool) (if p1 then d87 else p1)
        d98 : (\x101. if False then Bool else x101 : Type -> Type) (if False then Bool else Bool)
        d98 = (\x99. (\x100. True : Bool -> Bool) x99 : Bool -> Bool) (if True then False else p3)
        d102 : if True then if True then Bool else Bool else if True then Bool else Bool
        d102 = (\x103. (\x104. p3 : Bool -> Bool) d47 : Bool -> Bool) (if True then False else True)
        d105 : (\x106. if True then x106 else Bool : Type -> Type) (if True then Bool else Bool)
        d105 = if if p3 then True else p1 then if p3 then d11 else d95 else if False then p1 else False
        d107 : if False then if False then Bool else Bool else if False then Bool else Bool
        d107 = if if d84 then p1 else d6 then if p1 then True else True else if d7 then False else p3
        d108 : if False then if True then Bool else Bool else if False then Bool else Bool
        d108 = if if d30 then True else p1 then if True then d84 else p1 else if p1 then False else p1
        d109 : (\x110. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d109 = if if p1 then True else p1 then if d105 then p1 else False else if p1 then p3 else d63
        d111 : (\x112. if False then Bool else x112 : Type -> Type) (if True then Bool else Bool)
        d111 = if if True then p1 else d9 then if p1 then d109 else p3 else if d79 then False else d55
        d113 : if False then if False then Bool else Bool else if True then Bool else Bool
        d113 = (\x114. (\x115. d31 : Bool -> Bool) d89 : Bool -> Bool) (if True then p1 else False)
        d116 : (\x117. (\x118. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d116 = if if p3 then p3 else d89 then if d67 then False else True else if p3 then p3 else False
        d119 : if True then if False then Bool else Bool else if True then Bool else Bool
        d119 = if if d108 then d87 else p1 then if False then d70 else p3 else if p1 then d40 else False
        d120 : if True then if False then Bool else Bool else if False then Bool else Bool
        d120 = if if True then d109 else True then if p3 then True else p3 else if p3 then False else p3
    module M' = M (True) 