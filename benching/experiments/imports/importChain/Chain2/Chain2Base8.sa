module Chain2Base8 where
    module M(p1: if True then Bool else Bool)(p2: (\x3. if True then Bool else Bool : Type -> Type) Bool) where
        d4 : if False then if True then Bool else Bool else if False then Bool else Bool
        d4 = (\x5. if p2 then True else p2 : Bool -> Bool) (if False then p2 else True)
        d6 : if True then if False then Bool else Bool else if False then Bool else Bool
        d6 = (\x7. if False then d4 else False : Bool -> Bool) (if p1 then d4 else d4)
        d8 : if True then if False then Bool else Bool else if False then Bool else Bool
        d8 = (\x9. (\x10. x9 : Bool -> Bool) d4 : Bool -> Bool) (if False then d6 else True)
        d11 : (\x12. if True then x12 else x12 : Type -> Type) (if False then Bool else Bool)
        d11 = if if d6 then True else p1 then if d6 then p2 else False else if True then p1 else False
        d13 : (\x14. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d13 = if if True then d4 else d8 then if d4 then p2 else True else if p2 then p1 else d4
        d15 : if True then if False then Bool else Bool else if True then Bool else Bool
        d15 = (\x16. if d11 then False else False : Bool -> Bool) (if p2 then True else d6)
        d17 : (\x19. (\x20. x19 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d17 = (\x18. if d15 then False else True : Bool -> Bool) (if d15 then False else p1)
        d21 : if True then if False then Bool else Bool else if False then Bool else Bool
        d21 = if if d6 then d17 else False then if d17 then p2 else True else if d11 then True else False
        d22 : if True then if True then Bool else Bool else if False then Bool else Bool
        d22 = if if d13 then True else d21 then if d13 then d11 else True else if d13 then False else True
        d23 : if False then if True then Bool else Bool else if True then Bool else Bool
        d23 = if if True then False else d13 then if d4 then d4 else p1 else if p1 then d8 else False
        d24 : if False then if True then Bool else Bool else if True then Bool else Bool
        d24 = (\x25. if d17 then True else d23 : Bool -> Bool) (if p1 then p2 else d13)
        d26 : if True then if False then Bool else Bool else if False then Bool else Bool
        d26 = (\x27. (\x28. p2 : Bool -> Bool) x27 : Bool -> Bool) (if d17 then False else d4)
        d29 : (\x31. (\x32. x32 : Type -> Type) x31 : Type -> Type) (if True then Bool else Bool)
        d29 = (\x30. if x30 then False else x30 : Bool -> Bool) (if d23 then d17 else p1)
        d33 : (\x34. (\x35. Bool : Type -> Type) x34 : Type -> Type) (if False then Bool else Bool)
        d33 = if if False then d4 else p2 then if False then p1 else p2 else if False then p1 else d8
        d36 : (\x37. if False then x37 else x37 : Type -> Type) (if True then Bool else Bool)
        d36 = if if d13 then d24 else p1 then if p1 then d22 else d21 else if d33 then p2 else False
        d38 : if False then if True then Bool else Bool else if False then Bool else Bool
        d38 = if if d26 then d8 else p1 then if False then False else True else if d26 then d26 else d4
        d39 : if True then if False then Bool else Bool else if True then Bool else Bool
        d39 = if if False then p2 else p1 then if d23 then p1 else p1 else if False then p1 else True
        d40 : (\x41. if False then x41 else x41 : Type -> Type) (if False then Bool else Bool)
        d40 = if if d11 then p2 else p1 then if False then False else p2 else if d21 then p2 else p1
        d42 : if True then if True then Bool else Bool else if False then Bool else Bool
        d42 = if if p1 then d22 else p2 then if d4 then True else p1 else if d26 then False else True
        d43 : (\x44. (\x45. x44 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d43 = if if p1 then True else p2 then if d29 then True else True else if d11 then d42 else True
        d46 : if True then if False then Bool else Bool else if False then Bool else Bool
        d46 = if if p1 then p1 else False then if True then p1 else d21 else if p2 then d26 else d43
        d47 : if True then if False then Bool else Bool else if True then Bool else Bool
        d47 = (\x48. (\x49. d8 : Bool -> Bool) d22 : Bool -> Bool) (if p1 then d23 else p2)
        d50 : if True then if True then Bool else Bool else if True then Bool else Bool
        d50 = if if d13 then False else d15 then if d47 then True else p2 else if d38 then False else True
        d51 : if True then if False then Bool else Bool else if False then Bool else Bool
        d51 = if if True then d36 else p1 then if d26 then p1 else p1 else if False then d47 else False
        d52 : (\x54. (\x55. Bool : Type -> Type) x54 : Type -> Type) (if False then Bool else Bool)
        d52 = (\x53. if p2 then d40 else p2 : Bool -> Bool) (if False then p2 else p2)
        d56 : if False then if True then Bool else Bool else if True then Bool else Bool
        d56 = if if d6 then p2 else p1 then if p1 then False else p1 else if d11 then d23 else d39
        d57 : (\x60. if False then x60 else Bool : Type -> Type) (if True then Bool else Bool)
        d57 = (\x58. (\x59. False : Bool -> Bool) p1 : Bool -> Bool) (if p1 then False else d22)
        d61 : if True then if True then Bool else Bool else if True then Bool else Bool
        d61 = (\x62. if True then True else d46 : Bool -> Bool) (if d24 then d11 else True)
        d63 : if True then if True then Bool else Bool else if True then Bool else Bool
        d63 = if if d22 then True else d51 then if d61 then d43 else d4 else if False then p1 else p1
        d64 : (\x67. (\x68. x68 : Type -> Type) x67 : Type -> Type) (if True then Bool else Bool)
        d64 = (\x65. (\x66. x65 : Bool -> Bool) False : Bool -> Bool) (if True then False else d15)
        d69 : (\x71. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d69 = (\x70. if False then False else True : Bool -> Bool) (if p2 then False else False)
        d72 : if False then if False then Bool else Bool else if True then Bool else Bool
        d72 = (\x73. if False then True else x73 : Bool -> Bool) (if True then p1 else False)
        d74 : (\x75. (\x76. Bool : Type -> Type) x75 : Type -> Type) (if False then Bool else Bool)
        d74 = if if d63 then False else False then if p2 then d17 else d8 else if False then d29 else True
        d77 : if True then if True then Bool else Bool else if False then Bool else Bool
        d77 = if if True then p1 else d43 then if p1 then p2 else False else if d64 then d43 else d64
        d78 : if True then if True then Bool else Bool else if False then Bool else Bool
        d78 = (\x79. (\x80. x79 : Bool -> Bool) True : Bool -> Bool) (if True then p1 else d50)
        d81 : if True then if False then Bool else Bool else if False then Bool else Bool
        d81 = if if p2 then True else True then if p1 then d57 else False else if p1 then p1 else p2
        d82 : (\x85. if False then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d82 = (\x83. (\x84. x84 : Bool -> Bool) x83 : Bool -> Bool) (if d39 then False else p1)
        d86 : if True then if False then Bool else Bool else if True then Bool else Bool
        d86 = (\x87. if d74 then d23 else d39 : Bool -> Bool) (if d13 then False else True)
        d88 : if True then if False then Bool else Bool else if False then Bool else Bool
        d88 = (\x89. if p2 then False else True : Bool -> Bool) (if True then p1 else d43)
        d90 : (\x91. (\x92. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d90 = if if True then False else p2 then if p2 then d46 else d63 else if d8 then d72 else True
        d93 : if True then if True then Bool else Bool else if False then Bool else Bool
        d93 = (\x94. (\x95. d26 : Bool -> Bool) p1 : Bool -> Bool) (if True then d81 else p2)
        d96 : (\x99. (\x100. x99 : Type -> Type) x99 : Type -> Type) (if True then Bool else Bool)
        d96 = (\x97. (\x98. p1 : Bool -> Bool) False : Bool -> Bool) (if p2 then False else d24)
        d101 : if True then if False then Bool else Bool else if False then Bool else Bool
        d101 = if if p1 then p2 else p1 then if False then d56 else d78 else if p1 then True else d56
        d102 : (\x104. (\x105. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d102 = (\x103. if d69 then p2 else d21 : Bool -> Bool) (if p1 then True else p1)
        d106 : (\x107. if True then x107 else x107 : Type -> Type) (if False then Bool else Bool)
        d106 = if if p2 then d57 else p1 then if d29 then True else True else if d81 then p2 else d38
        d108 : if True then if False then Bool else Bool else if True then Bool else Bool
        d108 = if if False then True else True then if d86 then False else d81 else if False then False else p2
        d109 : if True then if True then Bool else Bool else if True then Bool else Bool
        d109 = (\x110. (\x111. p2 : Bool -> Bool) d88 : Bool -> Bool) (if d43 then True else p1)
        d112 : (\x114. (\x115. Bool : Type -> Type) x114 : Type -> Type) (if False then Bool else Bool)
        d112 = (\x113. if p2 then p2 else p2 : Bool -> Bool) (if d6 then False else d86)
        d116 : (\x117. (\x118. x118 : Type -> Type) x117 : Type -> Type) (if True then Bool else Bool)
        d116 = if if d72 then False else d102 then if p1 then True else False else if p1 then p1 else d26
        d119 : if False then if True then Bool else Bool else if True then Bool else Bool
        d119 = (\x120. (\x121. False : Bool -> Bool) False : Bool -> Bool) (if p2 then False else True)
    module M' = M (False) 