module Chain2Base14 where
    module M(p1: if True then Bool else Bool)(p2: (\x3. if False then x3 else x3 : Type -> Type) Bool) where
        d4 : (\x5. (\x6. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d4 = if if True then p2 else True then if p2 then p2 else p1 else if False then False else False
        d7 : if False then if False then Bool else Bool else if True then Bool else Bool
        d7 = if if d4 then False else p1 then if False then True else d4 else if False then p1 else p1
        d8 : (\x9. if False then Bool else x9 : Type -> Type) (if False then Bool else Bool)
        d8 = if if p1 then d7 else True then if True then p2 else p2 else if p1 then d4 else True
        d10 : if False then if False then Bool else Bool else if False then Bool else Bool
        d10 = if if d8 then p1 else d8 then if p1 then p1 else p1 else if d4 then d4 else p2
        d11 : if False then if False then Bool else Bool else if False then Bool else Bool
        d11 = if if d4 then d4 else p1 then if p1 then d10 else d10 else if False then d10 else True
        d12 : (\x15. (\x16. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d12 = (\x13. (\x14. p2 : Bool -> Bool) d10 : Bool -> Bool) (if p1 then d11 else p1)
        d17 : if True then if False then Bool else Bool else if False then Bool else Bool
        d17 = (\x18. if d7 then d12 else True : Bool -> Bool) (if d8 then p1 else d12)
        d19 : (\x20. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d19 = if if d17 then True else p2 then if d8 then d12 else False else if True then False else False
        d21 : (\x22. if False then Bool else x22 : Type -> Type) (if True then Bool else Bool)
        d21 = if if d7 then p2 else d4 then if p1 then d12 else True else if p2 then d12 else False
        d23 : (\x24. (\x25. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d23 = if if d17 then False else False then if p2 then True else True else if False then p1 else p1
        d26 : (\x28. if False then Bool else x28 : Type -> Type) (if False then Bool else Bool)
        d26 = (\x27. if x27 then d23 else x27 : Bool -> Bool) (if p1 then False else p1)
        d29 : if False then if True then Bool else Bool else if False then Bool else Bool
        d29 = if if d8 then d4 else d11 then if d12 then p2 else p2 else if d11 then p1 else d19
        d30 : if True then if False then Bool else Bool else if False then Bool else Bool
        d30 = if if d10 then d23 else d12 then if False then True else False else if d29 then p1 else d23
        d31 : (\x33. (\x34. Bool : Type -> Type) x33 : Type -> Type) (if True then Bool else Bool)
        d31 = (\x32. if p1 then p1 else True : Bool -> Bool) (if True then d8 else False)
        d35 : if False then if True then Bool else Bool else if True then Bool else Bool
        d35 = if if p2 then d31 else p1 then if p2 then False else True else if p1 then p2 else d12
        d36 : (\x38. (\x39. x39 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d36 = (\x37. if False then p1 else True : Bool -> Bool) (if True then p2 else d31)
        d40 : if True then if True then Bool else Bool else if True then Bool else Bool
        d40 = if if False then d17 else d12 then if p1 then p1 else p2 else if d17 then p1 else p2
        d41 : if False then if True then Bool else Bool else if True then Bool else Bool
        d41 = if if d7 then d21 else d11 then if True then p1 else p2 else if d4 then p2 else True
        d42 : (\x44. (\x45. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d42 = (\x43. if x43 then True else True : Bool -> Bool) (if d17 then False else p2)
        d46 : (\x47. if True then Bool else x47 : Type -> Type) (if True then Bool else Bool)
        d46 = if if True then False else True then if d40 then p1 else d7 else if d35 then p1 else p2
        d48 : (\x50. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d48 = (\x49. if p1 then x49 else False : Bool -> Bool) (if False then True else p2)
        d51 : (\x52. if False then x52 else Bool : Type -> Type) (if True then Bool else Bool)
        d51 = if if p2 then d30 else d23 then if False then d35 else d40 else if False then False else p1
        d53 : (\x54. (\x55. Bool : Type -> Type) x54 : Type -> Type) (if True then Bool else Bool)
        d53 = if if True then p1 else d23 then if p2 then True else d29 else if p2 then d48 else p1
        d56 : if False then if True then Bool else Bool else if True then Bool else Bool
        d56 = if if True then False else p2 then if True then False else p2 else if d41 then False else False
        d57 : (\x59. if True then x59 else Bool : Type -> Type) (if True then Bool else Bool)
        d57 = (\x58. if x58 then False else p2 : Bool -> Bool) (if d40 then p2 else False)
        d60 : if False then if False then Bool else Bool else if True then Bool else Bool
        d60 = if if False then True else False then if p1 then p2 else p1 else if d19 then p2 else False
        d61 : if True then if False then Bool else Bool else if True then Bool else Bool
        d61 = (\x62. (\x63. x63 : Bool -> Bool) d40 : Bool -> Bool) (if p2 then False else True)
        d64 : if True then if True then Bool else Bool else if False then Bool else Bool
        d64 = if if d11 then d60 else p2 then if d26 then d46 else True else if False then p1 else True
        d65 : if True then if True then Bool else Bool else if False then Bool else Bool
        d65 = (\x66. (\x67. x66 : Bool -> Bool) d51 : Bool -> Bool) (if True then p2 else p1)
        d68 : (\x69. if True then x69 else Bool : Type -> Type) (if True then Bool else Bool)
        d68 = if if d8 then p2 else d57 then if False then d51 else p2 else if p2 then True else True
        d70 : (\x72. (\x73. Bool : Type -> Type) x72 : Type -> Type) (if False then Bool else Bool)
        d70 = (\x71. if d40 then d26 else p2 : Bool -> Bool) (if p1 then p2 else d53)
        d74 : (\x77. (\x78. x78 : Type -> Type) x77 : Type -> Type) (if False then Bool else Bool)
        d74 = (\x75. (\x76. x75 : Bool -> Bool) p2 : Bool -> Bool) (if d65 then False else d21)
        d79 : if True then if False then Bool else Bool else if True then Bool else Bool
        d79 = if if p1 then d42 else p2 then if d42 then True else True else if d42 then p2 else p1
        d80 : if False then if True then Bool else Bool else if False then Bool else Bool
        d80 = if if True then d57 else True then if True then False else p2 else if False then d10 else d19
        d81 : if True then if False then Bool else Bool else if True then Bool else Bool
        d81 = (\x82. if True then d51 else True : Bool -> Bool) (if p2 then False else d51)
        d83 : if False then if True then Bool else Bool else if False then Bool else Bool
        d83 = (\x84. (\x85. d70 : Bool -> Bool) d48 : Bool -> Bool) (if False then True else p2)
        d86 : if True then if True then Bool else Bool else if True then Bool else Bool
        d86 = if if False then True else p1 then if p2 then p1 else d42 else if p2 then p2 else d64
        d87 : if True then if True then Bool else Bool else if False then Bool else Bool
        d87 = (\x88. if False then p1 else d48 : Bool -> Bool) (if d86 then d35 else d70)
        d89 : if True then if False then Bool else Bool else if True then Bool else Bool
        d89 = (\x90. if d79 then d56 else False : Bool -> Bool) (if p2 then d70 else d8)
        d91 : if False then if False then Bool else Bool else if True then Bool else Bool
        d91 = (\x92. (\x93. d8 : Bool -> Bool) True : Bool -> Bool) (if d83 then False else False)
        d94 : if True then if True then Bool else Bool else if True then Bool else Bool
        d94 = (\x95. if d35 then False else False : Bool -> Bool) (if False then d11 else True)
        d96 : if True then if True then Bool else Bool else if True then Bool else Bool
        d96 = (\x97. if True then p2 else True : Bool -> Bool) (if True then False else p2)
        d98 : (\x99. (\x100. x100 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d98 = if if d48 then False else True then if d11 then True else False else if d12 then False else p2
        d101 : (\x104. if False then x104 else x104 : Type -> Type) (if True then Bool else Bool)
        d101 = (\x102. (\x103. False : Bool -> Bool) p2 : Bool -> Bool) (if d87 then p2 else d42)
        d105 : (\x107. (\x108. x108 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d105 = (\x106. if d7 then d51 else d17 : Bool -> Bool) (if d68 then d41 else p1)
        d109 : (\x111. (\x112. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d109 = (\x110. if False then False else False : Bool -> Bool) (if p2 then d98 else True)
        d113 : (\x115. if True then x115 else x115 : Type -> Type) (if True then Bool else Bool)
        d113 = (\x114. if d42 then d11 else d70 : Bool -> Bool) (if p2 then d70 else d65)
        d116 : if False then if False then Bool else Bool else if True then Bool else Bool
        d116 = if if p1 then p1 else False then if p1 then d61 else d42 else if True then True else False
        d117 : (\x119. (\x120. Bool : Type -> Type) x119 : Type -> Type) (if False then Bool else Bool)
        d117 = (\x118. if True then p1 else d79 : Bool -> Bool) (if True then True else False)
        d121 : (\x124. (\x125. Bool : Type -> Type) x124 : Type -> Type) (if True then Bool else Bool)
        d121 = (\x122. (\x123. True : Bool -> Bool) x122 : Bool -> Bool) (if False then d87 else False)
    module M' = M (True) 