module Chain2Base4 where
    module M(p1: (\x2. if False then Bool else x2 : Type -> Type) Bool)(p3: (\x4. if True then x4 else Bool : Type -> Type) Bool) where
        d5 : if False then if True then Bool else Bool else if True then Bool else Bool
        d5 = if if True then True else p3 then if False then p1 else p1 else if p3 then p3 else True
        d6 : if False then if True then Bool else Bool else if False then Bool else Bool
        d6 = (\x7. if d5 then x7 else True : Bool -> Bool) (if False then False else p1)
        d8 : (\x9. (\x10. x10 : Type -> Type) x9 : Type -> Type) (if False then Bool else Bool)
        d8 = if if False then p1 else p1 then if True then False else d6 else if d6 then p3 else p1
        d11 : if False then if True then Bool else Bool else if True then Bool else Bool
        d11 = (\x12. if p3 then True else False : Bool -> Bool) (if p3 then False else p3)
        d13 : if True then if False then Bool else Bool else if False then Bool else Bool
        d13 = (\x14. if False then d8 else d8 : Bool -> Bool) (if True then p3 else d5)
        d15 : (\x16. if True then Bool else x16 : Type -> Type) (if False then Bool else Bool)
        d15 = if if d8 then d5 else d5 then if False then d5 else d8 else if p3 then p3 else p1
        d17 : (\x18. (\x19. Bool : Type -> Type) x18 : Type -> Type) (if True then Bool else Bool)
        d17 = if if p3 then d6 else p3 then if p3 then d6 else d15 else if True then True else p1
        d20 : if False then if True then Bool else Bool else if False then Bool else Bool
        d20 = (\x21. if d8 then p1 else d6 : Bool -> Bool) (if p1 then p3 else False)
        d22 : if False then if False then Bool else Bool else if True then Bool else Bool
        d22 = if if d5 then True else d15 then if d8 then False else p3 else if d17 then p1 else p1
        d23 : if True then if True then Bool else Bool else if False then Bool else Bool
        d23 = (\x24. if p1 then p1 else d22 : Bool -> Bool) (if True then p1 else d17)
        d25 : if False then if True then Bool else Bool else if True then Bool else Bool
        d25 = (\x26. (\x27. False : Bool -> Bool) x26 : Bool -> Bool) (if False then p1 else True)
        d28 : if False then if True then Bool else Bool else if False then Bool else Bool
        d28 = (\x29. (\x30. d23 : Bool -> Bool) d23 : Bool -> Bool) (if d15 then d20 else True)
        d31 : if True then if True then Bool else Bool else if True then Bool else Bool
        d31 = if if p3 then d6 else False then if False then p3 else d25 else if p3 then False else p3
        d32 : (\x33. (\x34. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d32 = if if d8 then d31 else p3 then if d25 then d17 else False else if p3 then p3 else False
        d35 : if False then if True then Bool else Bool else if True then Bool else Bool
        d35 = (\x36. if d32 then p1 else x36 : Bool -> Bool) (if False then d13 else p3)
        d37 : (\x39. if False then Bool else x39 : Type -> Type) (if False then Bool else Bool)
        d37 = (\x38. if True then d20 else d28 : Bool -> Bool) (if True then p3 else p1)
        d40 : if False then if False then Bool else Bool else if True then Bool else Bool
        d40 = if if True then p1 else d35 then if True then p3 else p3 else if d5 then True else d22
        d41 : (\x42. (\x43. x43 : Type -> Type) x42 : Type -> Type) (if True then Bool else Bool)
        d41 = if if d32 then False else p1 then if d37 then p3 else d5 else if True then p1 else p3
        d44 : (\x45. if True then Bool else Bool : Type -> Type) (if True then Bool else Bool)
        d44 = if if p1 then False else p1 then if p3 then p1 else True else if d15 then p3 else p3
        d46 : if False then if False then Bool else Bool else if False then Bool else Bool
        d46 = if if True then p3 else False then if p1 then p1 else p3 else if False then d23 else False
        d47 : (\x50. if True then x50 else x50 : Type -> Type) (if True then Bool else Bool)
        d47 = (\x48. (\x49. d11 : Bool -> Bool) False : Bool -> Bool) (if p1 then p3 else d44)
        d51 : if True then if False then Bool else Bool else if False then Bool else Bool
        d51 = if if True then d6 else d44 then if d23 then p1 else p3 else if p3 then d11 else d32
        d52 : if False then if False then Bool else Bool else if False then Bool else Bool
        d52 = if if p1 then p1 else True then if d23 then True else True else if p3 then False else False
        d53 : (\x54. if True then Bool else x54 : Type -> Type) (if False then Bool else Bool)
        d53 = if if d52 then True else d52 then if True then p3 else d51 else if d17 then d35 else d13
        d55 : if False then if True then Bool else Bool else if True then Bool else Bool
        d55 = if if True then d8 else p3 then if d46 then d46 else p3 else if True then p1 else False
        d56 : (\x58. (\x59. Bool : Type -> Type) x58 : Type -> Type) (if False then Bool else Bool)
        d56 = (\x57. if x57 then x57 else d37 : Bool -> Bool) (if False then False else p3)
        d60 : (\x61. (\x62. Bool : Type -> Type) x61 : Type -> Type) (if True then Bool else Bool)
        d60 = if if d20 then d46 else p1 then if p1 then p1 else p1 else if d15 then d15 else p1
        d63 : (\x66. (\x67. Bool : Type -> Type) x66 : Type -> Type) (if False then Bool else Bool)
        d63 = (\x64. (\x65. p3 : Bool -> Bool) p1 : Bool -> Bool) (if d25 then d25 else d11)
        d68 : (\x69. if False then x69 else Bool : Type -> Type) (if False then Bool else Bool)
        d68 = if if False then p1 else p1 then if p3 then p3 else False else if True then d63 else d60
        d70 : if True then if False then Bool else Bool else if True then Bool else Bool
        d70 = if if p3 then False else p1 then if d6 then p1 else d55 else if p1 then p1 else d37
        d71 : (\x74. (\x75. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d71 = (\x72. (\x73. x73 : Bool -> Bool) d11 : Bool -> Bool) (if False then d11 else True)
        d76 : if True then if False then Bool else Bool else if False then Bool else Bool
        d76 = (\x77. if True then p3 else True : Bool -> Bool) (if True then True else True)
        d78 : (\x80. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d78 = (\x79. if False then d5 else False : Bool -> Bool) (if d44 then False else d76)
        d81 : (\x82. (\x83. Bool : Type -> Type) x82 : Type -> Type) (if False then Bool else Bool)
        d81 = if if False then p3 else d41 then if p3 then False else p1 else if d22 then p3 else d28
        d84 : (\x86. if False then x86 else x86 : Type -> Type) (if False then Bool else Bool)
        d84 = (\x85. if False then p1 else p3 : Bool -> Bool) (if False then d41 else True)
        d87 : (\x89. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d87 = (\x88. if p3 then d5 else d13 : Bool -> Bool) (if d25 then True else p1)
        d90 : (\x91. (\x92. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d90 = if if p1 then True else d5 then if True then d60 else False else if True then p1 else d25
        d93 : (\x94. (\x95. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d93 = if if p1 then d90 else p1 then if p3 then d84 else d87 else if p3 then d11 else True
        d96 : if True then if True then Bool else Bool else if False then Bool else Bool
        d96 = if if d15 then d17 else d41 then if False then d71 else d44 else if d56 then False else p1
        d97 : (\x98. if True then x98 else x98 : Type -> Type) (if True then Bool else Bool)
        d97 = if if p1 then d81 else True then if d63 then p1 else True else if False then d37 else d81
        d99 : (\x102. (\x103. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d99 = (\x100. (\x101. d11 : Bool -> Bool) False : Bool -> Bool) (if d81 then p3 else False)
        d104 : if True then if False then Bool else Bool else if True then Bool else Bool
        d104 = (\x105. if True then True else True : Bool -> Bool) (if p3 then p3 else d5)
        d106 : (\x107. if True then Bool else x107 : Type -> Type) (if True then Bool else Bool)
        d106 = if if True then False else p3 then if True then True else p3 else if d53 then False else d97
        d108 : (\x109. (\x110. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d108 = if if p3 then p3 else p3 then if p3 then d41 else False else if d47 then False else True
        d111 : (\x113. (\x114. Bool : Type -> Type) x113 : Type -> Type) (if True then Bool else Bool)
        d111 = (\x112. if False then p3 else d87 : Bool -> Bool) (if True then d56 else False)
        d115 : (\x118. (\x119. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d115 = (\x116. (\x117. d53 : Bool -> Bool) d31 : Bool -> Bool) (if d6 then True else d13)
        d120 : if True then if True then Bool else Bool else if False then Bool else Bool
        d120 = (\x121. if True then True else d96 : Bool -> Bool) (if True then p3 else d106)
        d122 : (\x124. (\x125. Bool : Type -> Type) x124 : Type -> Type) (if False then Bool else Bool)
        d122 = (\x123. if p1 then x123 else d68 : Bool -> Bool) (if True then d15 else p3)
        d126 : (\x129. if False then x129 else Bool : Type -> Type) (if True then Bool else Bool)
        d126 = (\x127. (\x128. x128 : Bool -> Bool) False : Bool -> Bool) (if p1 then False else True)
        d130 : if False then if False then Bool else Bool else if False then Bool else Bool
        d130 = if if d11 then p1 else p1 then if p3 then True else False else if False then True else d97
    module M' = M (True) 