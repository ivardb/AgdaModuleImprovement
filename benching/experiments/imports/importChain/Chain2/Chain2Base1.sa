module Chain2Base1 where
    module M(p1: (\x2. if True then Bool else x2 : Type -> Type) Bool)(p3: (\x4. if True then Bool else x4 : Type -> Type) Bool) where
        d5 : if False then if False then Bool else Bool else if False then Bool else Bool
        d5 = (\x6. if p1 then False else False : Bool -> Bool) (if False then p3 else p1)
        d7 : if True then if False then Bool else Bool else if True then Bool else Bool
        d7 = if if True then d5 else d5 then if p3 then p1 else False else if True then p3 else p3
        d8 : (\x10. if True then x10 else Bool : Type -> Type) (if True then Bool else Bool)
        d8 = (\x9. if d5 then d5 else x9 : Bool -> Bool) (if p1 then d7 else d7)
        d11 : if False then if False then Bool else Bool else if True then Bool else Bool
        d11 = if if d8 then p1 else d5 then if False then d8 else d5 else if True then p3 else p3
        d12 : (\x13. (\x14. Bool : Type -> Type) x13 : Type -> Type) (if False then Bool else Bool)
        d12 = if if d5 then d7 else d8 then if False then d7 else d7 else if False then d5 else p3
        d15 : if True then if False then Bool else Bool else if True then Bool else Bool
        d15 = if if False then p3 else p3 then if d5 then d5 else p1 else if p3 then False else p1
        d16 : (\x19. (\x20. Bool : Type -> Type) x19 : Type -> Type) (if False then Bool else Bool)
        d16 = (\x17. (\x18. p1 : Bool -> Bool) d11 : Bool -> Bool) (if p3 then True else d15)
        d21 : if True then if False then Bool else Bool else if True then Bool else Bool
        d21 = if if True then d11 else p3 then if False then True else p3 else if d7 then True else d16
        d22 : (\x23. (\x24. Bool : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d22 = if if True then p1 else d12 then if d21 then d16 else d21 else if p1 then True else True
        d25 : if False then if True then Bool else Bool else if False then Bool else Bool
        d25 = if if d8 then d15 else d22 then if False then p1 else p3 else if p1 then p3 else d22
        d26 : (\x28. if True then Bool else x28 : Type -> Type) (if True then Bool else Bool)
        d26 = (\x27. if d8 then d5 else False : Bool -> Bool) (if p1 then d22 else d8)
        d29 : if True then if False then Bool else Bool else if True then Bool else Bool
        d29 = if if False then False else p1 then if d25 then d16 else d21 else if True then False else p1
        d30 : (\x32. if False then x32 else Bool : Type -> Type) (if False then Bool else Bool)
        d30 = (\x31. if d21 then p3 else True : Bool -> Bool) (if True then d16 else p3)
        d33 : if True then if True then Bool else Bool else if False then Bool else Bool
        d33 = (\x34. (\x35. d22 : Bool -> Bool) p1 : Bool -> Bool) (if False then d26 else p1)
        d36 : (\x38. (\x39. x39 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d36 = (\x37. if True then False else False : Bool -> Bool) (if True then True else p1)
        d40 : (\x42. if True then Bool else x42 : Type -> Type) (if False then Bool else Bool)
        d40 = (\x41. if d36 then d16 else x41 : Bool -> Bool) (if p3 then p1 else True)
        d43 : if True then if True then Bool else Bool else if False then Bool else Bool
        d43 = (\x44. if d21 then True else d12 : Bool -> Bool) (if p1 then True else p1)
        d45 : (\x48. (\x49. x49 : Type -> Type) x48 : Type -> Type) (if True then Bool else Bool)
        d45 = (\x46. (\x47. d40 : Bool -> Bool) p3 : Bool -> Bool) (if d29 then p3 else p3)
        d50 : if True then if True then Bool else Bool else if True then Bool else Bool
        d50 = if if False then p3 else p1 then if True then d36 else False else if d26 then True else True
        d51 : if True then if True then Bool else Bool else if False then Bool else Bool
        d51 = (\x52. if True then False else False : Bool -> Bool) (if True then p3 else d36)
        d53 : (\x55. (\x56. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d53 = (\x54. if p1 then d29 else True : Bool -> Bool) (if False then p3 else False)
        d57 : (\x58. if False then Bool else x58 : Type -> Type) (if False then Bool else Bool)
        d57 = if if p1 then p1 else False then if True then p1 else d21 else if p3 then True else d7
        d59 : (\x60. if True then Bool else x60 : Type -> Type) (if True then Bool else Bool)
        d59 = if if p1 then p3 else True then if p1 then False else False else if p1 then p3 else d50
        d61 : if True then if True then Bool else Bool else if True then Bool else Bool
        d61 = (\x62. (\x63. x62 : Bool -> Bool) p3 : Bool -> Bool) (if False then d8 else p3)
        d64 : if True then if True then Bool else Bool else if False then Bool else Bool
        d64 = (\x65. if p3 then False else True : Bool -> Bool) (if True then False else True)
        d66 : (\x68. (\x69. x68 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d66 = (\x67. if True then True else p1 : Bool -> Bool) (if p3 then p3 else True)
        d70 : (\x71. (\x72. Bool : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d70 = if if p3 then False else p3 then if p1 then d8 else p1 else if True then d45 else d16
        d73 : (\x74. (\x75. x75 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d73 = if if True then d59 else d64 then if p1 then False else p3 else if p1 then True else p1
        d76 : if True then if False then Bool else Bool else if False then Bool else Bool
        d76 = if if d33 then d50 else p1 then if False then p3 else d45 else if p3 then d73 else d26
        d77 : if False then if False then Bool else Bool else if True then Bool else Bool
        d77 = (\x78. (\x79. True : Bool -> Bool) d12 : Bool -> Bool) (if d40 then True else d25)
        d80 : if False then if True then Bool else Bool else if True then Bool else Bool
        d80 = (\x81. if p3 then p3 else True : Bool -> Bool) (if False then p1 else True)
        d82 : if True then if False then Bool else Bool else if True then Bool else Bool
        d82 = (\x83. if True then d57 else True : Bool -> Bool) (if False then False else d50)
        d84 : (\x85. (\x86. x85 : Type -> Type) x85 : Type -> Type) (if False then Bool else Bool)
        d84 = if if d45 then d43 else d22 then if p1 then True else d70 else if p3 then p3 else True
        d87 : if True then if False then Bool else Bool else if True then Bool else Bool
        d87 = (\x88. if d30 then True else d59 : Bool -> Bool) (if False then p3 else d80)
        d89 : if True then if False then Bool else Bool else if True then Bool else Bool
        d89 = if if p1 then d51 else True then if d43 then p1 else p1 else if p1 then d57 else p3
        d90 : (\x93. if False then Bool else Bool : Type -> Type) (if False then Bool else Bool)
        d90 = (\x91. (\x92. d70 : Bool -> Bool) d50 : Bool -> Bool) (if d59 then p1 else d73)
        d94 : (\x95. (\x96. x96 : Type -> Type) Bool : Type -> Type) (if False then Bool else Bool)
        d94 = if if d8 then d5 else True then if p1 then False else p1 else if p3 then d76 else p3
        d97 : (\x99. if False then Bool else x99 : Type -> Type) (if False then Bool else Bool)
        d97 = (\x98. if p3 then True else False : Bool -> Bool) (if d29 then p1 else p3)
        d100 : if False then if True then Bool else Bool else if False then Bool else Bool
        d100 = (\x101. (\x102. False : Bool -> Bool) x101 : Bool -> Bool) (if d21 then p3 else False)
        d103 : (\x104. (\x105. Bool : Type -> Type) x104 : Type -> Type) (if False then Bool else Bool)
        d103 = if if p3 then True else d8 then if d15 then d90 else True else if p3 then p3 else d43
        d106 : (\x107. (\x108. Bool : Type -> Type) x107 : Type -> Type) (if False then Bool else Bool)
        d106 = if if d87 then p1 else p3 then if p3 then True else d84 else if d36 then p1 else d73
        d109 : (\x111. (\x112. x112 : Type -> Type) x111 : Type -> Type) (if False then Bool else Bool)
        d109 = (\x110. if x110 then x110 else p1 : Bool -> Bool) (if True then d26 else d66)
        d113 : (\x116. (\x117. x117 : Type -> Type) x116 : Type -> Type) (if True then Bool else Bool)
        d113 = (\x114. (\x115. p1 : Bool -> Bool) p3 : Bool -> Bool) (if p3 then False else False)
        d118 : (\x119. (\x120. x120 : Type -> Type) x119 : Type -> Type) (if True then Bool else Bool)
        d118 = if if p1 then False else False then if d8 then False else p3 else if d21 then d21 else d73
        d121 : if True then if False then Bool else Bool else if True then Bool else Bool
        d121 = (\x122. if False then p3 else x122 : Bool -> Bool) (if d84 then False else True)
        d123 : if True then if True then Bool else Bool else if True then Bool else Bool
        d123 = (\x124. (\x125. p3 : Bool -> Bool) p3 : Bool -> Bool) (if False then d8 else p1)
        d126 : if True then if True then Bool else Bool else if False then Bool else Bool
        d126 = if if d94 then d100 else p1 then if False then False else p3 else if p3 then False else False
        d127 : if True then if True then Bool else Bool else if False then Bool else Bool
        d127 = (\x128. if d36 then d53 else p3 : Bool -> Bool) (if True then True else d84)
        d129 : (\x130. (\x131. x131 : Type -> Type) Bool : Type -> Type) (if True then Bool else Bool)
        d129 = if if p3 then True else True then if d127 then d57 else False else if p3 then d76 else p1
        d132 : if False then if False then Bool else Bool else if True then Bool else Bool
        d132 = (\x133. if d21 then p1 else p3 : Bool -> Bool) (if p1 then p1 else d59)
    module M' = M (True) 